-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity drift is
port (
    p_int_0_x_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_1_x_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_2_x_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_3_x_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_4_x_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_5_x_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_6_x_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_7_x_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_8_x_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_0_y_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_1_y_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_2_y_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_3_y_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_4_y_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_5_y_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_6_y_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_7_y_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_8_y_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_0_z_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_1_z_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_2_z_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_3_z_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_4_z_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_5_z_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_6_z_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_7_z_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    p_int_8_z_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_18 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_19 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_20 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_21 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_22 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_23 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_24 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_25 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_26 : OUT STD_LOGIC_VECTOR (26 downto 0) );
end;


architecture behav of drift is 
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';



begin



    ap_return_0 <= p_int_0_x_V_read;
    ap_return_1 <= p_int_1_x_V_read;
    ap_return_10 <= p_int_1_y_V_read;
    ap_return_11 <= p_int_2_y_V_read;
    ap_return_12 <= p_int_3_y_V_read;
    ap_return_13 <= p_int_4_y_V_read;
    ap_return_14 <= p_int_5_y_V_read;
    ap_return_15 <= p_int_6_y_V_read;
    ap_return_16 <= p_int_7_y_V_read;
    ap_return_17 <= p_int_8_y_V_read;
    ap_return_18 <= p_int_0_z_V_read;
    ap_return_19 <= p_int_1_z_V_read;
    ap_return_2 <= p_int_2_x_V_read;
    ap_return_20 <= p_int_2_z_V_read;
    ap_return_21 <= p_int_3_z_V_read;
    ap_return_22 <= p_int_4_z_V_read;
    ap_return_23 <= p_int_5_z_V_read;
    ap_return_24 <= p_int_6_z_V_read;
    ap_return_25 <= p_int_7_z_V_read;
    ap_return_26 <= p_int_8_z_V_read;
    ap_return_3 <= p_int_3_x_V_read;
    ap_return_4 <= p_int_4_x_V_read;
    ap_return_5 <= p_int_5_x_V_read;
    ap_return_6 <= p_int_6_x_V_read;
    ap_return_7 <= p_int_7_x_V_read;
    ap_return_8 <= p_int_8_x_V_read;
    ap_return_9 <= p_int_0_y_V_read;
end behav;
