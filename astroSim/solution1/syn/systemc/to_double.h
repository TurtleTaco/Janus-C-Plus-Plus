// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _to_double_HH_
#define _to_double_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct to_double : public sc_module {
    // Port declarations 108
    sc_out< sc_lv<27> > p_x_V_0;
    sc_out< sc_logic > p_x_V_0_ap_vld;
    sc_out< sc_lv<27> > p_y_V_0;
    sc_out< sc_logic > p_y_V_0_ap_vld;
    sc_out< sc_lv<27> > p_z_V_0;
    sc_out< sc_logic > p_z_V_0_ap_vld;
    sc_out< sc_lv<27> > p_vx_V_0;
    sc_out< sc_logic > p_vx_V_0_ap_vld;
    sc_out< sc_lv<27> > p_vy_V_0;
    sc_out< sc_logic > p_vy_V_0_ap_vld;
    sc_out< sc_lv<27> > p_vz_V_0;
    sc_out< sc_logic > p_vz_V_0_ap_vld;
    sc_out< sc_lv<27> > p_x_V_1;
    sc_out< sc_logic > p_x_V_1_ap_vld;
    sc_out< sc_lv<27> > p_y_V_1;
    sc_out< sc_logic > p_y_V_1_ap_vld;
    sc_out< sc_lv<27> > p_z_V_1;
    sc_out< sc_logic > p_z_V_1_ap_vld;
    sc_out< sc_lv<27> > p_vx_V_1;
    sc_out< sc_logic > p_vx_V_1_ap_vld;
    sc_out< sc_lv<27> > p_vy_V_1;
    sc_out< sc_logic > p_vy_V_1_ap_vld;
    sc_out< sc_lv<27> > p_vz_V_1;
    sc_out< sc_logic > p_vz_V_1_ap_vld;
    sc_out< sc_lv<27> > p_x_V_2;
    sc_out< sc_logic > p_x_V_2_ap_vld;
    sc_out< sc_lv<27> > p_y_V_2;
    sc_out< sc_logic > p_y_V_2_ap_vld;
    sc_out< sc_lv<27> > p_z_V_2;
    sc_out< sc_logic > p_z_V_2_ap_vld;
    sc_out< sc_lv<27> > p_vx_V_2;
    sc_out< sc_logic > p_vx_V_2_ap_vld;
    sc_out< sc_lv<27> > p_vy_V_2;
    sc_out< sc_logic > p_vy_V_2_ap_vld;
    sc_out< sc_lv<27> > p_vz_V_2;
    sc_out< sc_logic > p_vz_V_2_ap_vld;
    sc_out< sc_lv<27> > p_x_V_3;
    sc_out< sc_logic > p_x_V_3_ap_vld;
    sc_out< sc_lv<27> > p_y_V_3;
    sc_out< sc_logic > p_y_V_3_ap_vld;
    sc_out< sc_lv<27> > p_z_V_3;
    sc_out< sc_logic > p_z_V_3_ap_vld;
    sc_out< sc_lv<27> > p_vx_V_3;
    sc_out< sc_logic > p_vx_V_3_ap_vld;
    sc_out< sc_lv<27> > p_vy_V_3;
    sc_out< sc_logic > p_vy_V_3_ap_vld;
    sc_out< sc_lv<27> > p_vz_V_3;
    sc_out< sc_logic > p_vz_V_3_ap_vld;
    sc_out< sc_lv<27> > p_x_V_4;
    sc_out< sc_logic > p_x_V_4_ap_vld;
    sc_out< sc_lv<27> > p_y_V_4;
    sc_out< sc_logic > p_y_V_4_ap_vld;
    sc_out< sc_lv<27> > p_z_V_4;
    sc_out< sc_logic > p_z_V_4_ap_vld;
    sc_out< sc_lv<27> > p_vx_V_4;
    sc_out< sc_logic > p_vx_V_4_ap_vld;
    sc_out< sc_lv<27> > p_vy_V_4;
    sc_out< sc_logic > p_vy_V_4_ap_vld;
    sc_out< sc_lv<27> > p_vz_V_4;
    sc_out< sc_logic > p_vz_V_4_ap_vld;
    sc_out< sc_lv<27> > p_x_V_5;
    sc_out< sc_logic > p_x_V_5_ap_vld;
    sc_out< sc_lv<27> > p_y_V_5;
    sc_out< sc_logic > p_y_V_5_ap_vld;
    sc_out< sc_lv<27> > p_z_V_5;
    sc_out< sc_logic > p_z_V_5_ap_vld;
    sc_out< sc_lv<27> > p_vx_V_5;
    sc_out< sc_logic > p_vx_V_5_ap_vld;
    sc_out< sc_lv<27> > p_vy_V_5;
    sc_out< sc_logic > p_vy_V_5_ap_vld;
    sc_out< sc_lv<27> > p_vz_V_5;
    sc_out< sc_logic > p_vz_V_5_ap_vld;
    sc_out< sc_lv<27> > p_x_V_6;
    sc_out< sc_logic > p_x_V_6_ap_vld;
    sc_out< sc_lv<27> > p_y_V_6;
    sc_out< sc_logic > p_y_V_6_ap_vld;
    sc_out< sc_lv<27> > p_z_V_6;
    sc_out< sc_logic > p_z_V_6_ap_vld;
    sc_out< sc_lv<27> > p_vx_V_6;
    sc_out< sc_logic > p_vx_V_6_ap_vld;
    sc_out< sc_lv<27> > p_vy_V_6;
    sc_out< sc_logic > p_vy_V_6_ap_vld;
    sc_out< sc_lv<27> > p_vz_V_6;
    sc_out< sc_logic > p_vz_V_6_ap_vld;
    sc_out< sc_lv<27> > p_x_V_7;
    sc_out< sc_logic > p_x_V_7_ap_vld;
    sc_out< sc_lv<27> > p_y_V_7;
    sc_out< sc_logic > p_y_V_7_ap_vld;
    sc_out< sc_lv<27> > p_z_V_7;
    sc_out< sc_logic > p_z_V_7_ap_vld;
    sc_out< sc_lv<27> > p_vx_V_7;
    sc_out< sc_logic > p_vx_V_7_ap_vld;
    sc_out< sc_lv<27> > p_vy_V_7;
    sc_out< sc_logic > p_vy_V_7_ap_vld;
    sc_out< sc_lv<27> > p_vz_V_7;
    sc_out< sc_logic > p_vz_V_7_ap_vld;
    sc_out< sc_lv<27> > p_x_V_8;
    sc_out< sc_logic > p_x_V_8_ap_vld;
    sc_out< sc_lv<27> > p_y_V_8;
    sc_out< sc_logic > p_y_V_8_ap_vld;
    sc_out< sc_lv<27> > p_z_V_8;
    sc_out< sc_logic > p_z_V_8_ap_vld;
    sc_out< sc_lv<27> > p_vx_V_8;
    sc_out< sc_logic > p_vx_V_8_ap_vld;
    sc_out< sc_lv<27> > p_vy_V_8;
    sc_out< sc_logic > p_vy_V_8_ap_vld;
    sc_out< sc_lv<27> > p_vz_V_8;
    sc_out< sc_logic > p_vz_V_8_ap_vld;


    // Module declarations
    to_double(sc_module_name name);
    SC_HAS_PROCESS(to_double);

    ~to_double();

    sc_trace_file* mVcdFile;

    static const sc_lv<27> ap_const_lv27_0;
    static const bool ap_const_boolean_1;
    static const sc_logic ap_const_logic_0;
    static const sc_logic ap_const_logic_1;
    // Thread declarations
    void thread_p_vx_V_0();
    void thread_p_vx_V_0_ap_vld();
    void thread_p_vx_V_1();
    void thread_p_vx_V_1_ap_vld();
    void thread_p_vx_V_2();
    void thread_p_vx_V_2_ap_vld();
    void thread_p_vx_V_3();
    void thread_p_vx_V_3_ap_vld();
    void thread_p_vx_V_4();
    void thread_p_vx_V_4_ap_vld();
    void thread_p_vx_V_5();
    void thread_p_vx_V_5_ap_vld();
    void thread_p_vx_V_6();
    void thread_p_vx_V_6_ap_vld();
    void thread_p_vx_V_7();
    void thread_p_vx_V_7_ap_vld();
    void thread_p_vx_V_8();
    void thread_p_vx_V_8_ap_vld();
    void thread_p_vy_V_0();
    void thread_p_vy_V_0_ap_vld();
    void thread_p_vy_V_1();
    void thread_p_vy_V_1_ap_vld();
    void thread_p_vy_V_2();
    void thread_p_vy_V_2_ap_vld();
    void thread_p_vy_V_3();
    void thread_p_vy_V_3_ap_vld();
    void thread_p_vy_V_4();
    void thread_p_vy_V_4_ap_vld();
    void thread_p_vy_V_5();
    void thread_p_vy_V_5_ap_vld();
    void thread_p_vy_V_6();
    void thread_p_vy_V_6_ap_vld();
    void thread_p_vy_V_7();
    void thread_p_vy_V_7_ap_vld();
    void thread_p_vy_V_8();
    void thread_p_vy_V_8_ap_vld();
    void thread_p_vz_V_0();
    void thread_p_vz_V_0_ap_vld();
    void thread_p_vz_V_1();
    void thread_p_vz_V_1_ap_vld();
    void thread_p_vz_V_2();
    void thread_p_vz_V_2_ap_vld();
    void thread_p_vz_V_3();
    void thread_p_vz_V_3_ap_vld();
    void thread_p_vz_V_4();
    void thread_p_vz_V_4_ap_vld();
    void thread_p_vz_V_5();
    void thread_p_vz_V_5_ap_vld();
    void thread_p_vz_V_6();
    void thread_p_vz_V_6_ap_vld();
    void thread_p_vz_V_7();
    void thread_p_vz_V_7_ap_vld();
    void thread_p_vz_V_8();
    void thread_p_vz_V_8_ap_vld();
    void thread_p_x_V_0();
    void thread_p_x_V_0_ap_vld();
    void thread_p_x_V_1();
    void thread_p_x_V_1_ap_vld();
    void thread_p_x_V_2();
    void thread_p_x_V_2_ap_vld();
    void thread_p_x_V_3();
    void thread_p_x_V_3_ap_vld();
    void thread_p_x_V_4();
    void thread_p_x_V_4_ap_vld();
    void thread_p_x_V_5();
    void thread_p_x_V_5_ap_vld();
    void thread_p_x_V_6();
    void thread_p_x_V_6_ap_vld();
    void thread_p_x_V_7();
    void thread_p_x_V_7_ap_vld();
    void thread_p_x_V_8();
    void thread_p_x_V_8_ap_vld();
    void thread_p_y_V_0();
    void thread_p_y_V_0_ap_vld();
    void thread_p_y_V_1();
    void thread_p_y_V_1_ap_vld();
    void thread_p_y_V_2();
    void thread_p_y_V_2_ap_vld();
    void thread_p_y_V_3();
    void thread_p_y_V_3_ap_vld();
    void thread_p_y_V_4();
    void thread_p_y_V_4_ap_vld();
    void thread_p_y_V_5();
    void thread_p_y_V_5_ap_vld();
    void thread_p_y_V_6();
    void thread_p_y_V_6_ap_vld();
    void thread_p_y_V_7();
    void thread_p_y_V_7_ap_vld();
    void thread_p_y_V_8();
    void thread_p_y_V_8_ap_vld();
    void thread_p_z_V_0();
    void thread_p_z_V_0_ap_vld();
    void thread_p_z_V_1();
    void thread_p_z_V_1_ap_vld();
    void thread_p_z_V_2();
    void thread_p_z_V_2_ap_vld();
    void thread_p_z_V_3();
    void thread_p_z_V_3_ap_vld();
    void thread_p_z_V_4();
    void thread_p_z_V_4_ap_vld();
    void thread_p_z_V_5();
    void thread_p_z_V_5_ap_vld();
    void thread_p_z_V_6();
    void thread_p_z_V_6_ap_vld();
    void thread_p_z_V_7();
    void thread_p_z_V_7_ap_vld();
    void thread_p_z_V_8();
    void thread_p_z_V_8_ap_vld();
};

}

using namespace ap_rtl;

#endif
