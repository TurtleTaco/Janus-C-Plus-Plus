// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "to_double.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_lv<27> to_double::ap_const_lv27_0 = "000000000000000000000000000";
const bool to_double::ap_const_boolean_1 = true;
const sc_logic to_double::ap_const_logic_0 = sc_dt::Log_0;
const sc_logic to_double::ap_const_logic_1 = sc_dt::Log_1;

to_double::to_double(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_p_vx_V_0);

    SC_METHOD(thread_p_vx_V_0_ap_vld);

    SC_METHOD(thread_p_vx_V_1);

    SC_METHOD(thread_p_vx_V_1_ap_vld);

    SC_METHOD(thread_p_vx_V_2);

    SC_METHOD(thread_p_vx_V_2_ap_vld);

    SC_METHOD(thread_p_vx_V_3);

    SC_METHOD(thread_p_vx_V_3_ap_vld);

    SC_METHOD(thread_p_vx_V_4);

    SC_METHOD(thread_p_vx_V_4_ap_vld);

    SC_METHOD(thread_p_vx_V_5);

    SC_METHOD(thread_p_vx_V_5_ap_vld);

    SC_METHOD(thread_p_vx_V_6);

    SC_METHOD(thread_p_vx_V_6_ap_vld);

    SC_METHOD(thread_p_vx_V_7);

    SC_METHOD(thread_p_vx_V_7_ap_vld);

    SC_METHOD(thread_p_vx_V_8);

    SC_METHOD(thread_p_vx_V_8_ap_vld);

    SC_METHOD(thread_p_vy_V_0);

    SC_METHOD(thread_p_vy_V_0_ap_vld);

    SC_METHOD(thread_p_vy_V_1);

    SC_METHOD(thread_p_vy_V_1_ap_vld);

    SC_METHOD(thread_p_vy_V_2);

    SC_METHOD(thread_p_vy_V_2_ap_vld);

    SC_METHOD(thread_p_vy_V_3);

    SC_METHOD(thread_p_vy_V_3_ap_vld);

    SC_METHOD(thread_p_vy_V_4);

    SC_METHOD(thread_p_vy_V_4_ap_vld);

    SC_METHOD(thread_p_vy_V_5);

    SC_METHOD(thread_p_vy_V_5_ap_vld);

    SC_METHOD(thread_p_vy_V_6);

    SC_METHOD(thread_p_vy_V_6_ap_vld);

    SC_METHOD(thread_p_vy_V_7);

    SC_METHOD(thread_p_vy_V_7_ap_vld);

    SC_METHOD(thread_p_vy_V_8);

    SC_METHOD(thread_p_vy_V_8_ap_vld);

    SC_METHOD(thread_p_vz_V_0);

    SC_METHOD(thread_p_vz_V_0_ap_vld);

    SC_METHOD(thread_p_vz_V_1);

    SC_METHOD(thread_p_vz_V_1_ap_vld);

    SC_METHOD(thread_p_vz_V_2);

    SC_METHOD(thread_p_vz_V_2_ap_vld);

    SC_METHOD(thread_p_vz_V_3);

    SC_METHOD(thread_p_vz_V_3_ap_vld);

    SC_METHOD(thread_p_vz_V_4);

    SC_METHOD(thread_p_vz_V_4_ap_vld);

    SC_METHOD(thread_p_vz_V_5);

    SC_METHOD(thread_p_vz_V_5_ap_vld);

    SC_METHOD(thread_p_vz_V_6);

    SC_METHOD(thread_p_vz_V_6_ap_vld);

    SC_METHOD(thread_p_vz_V_7);

    SC_METHOD(thread_p_vz_V_7_ap_vld);

    SC_METHOD(thread_p_vz_V_8);

    SC_METHOD(thread_p_vz_V_8_ap_vld);

    SC_METHOD(thread_p_x_V_0);

    SC_METHOD(thread_p_x_V_0_ap_vld);

    SC_METHOD(thread_p_x_V_1);

    SC_METHOD(thread_p_x_V_1_ap_vld);

    SC_METHOD(thread_p_x_V_2);

    SC_METHOD(thread_p_x_V_2_ap_vld);

    SC_METHOD(thread_p_x_V_3);

    SC_METHOD(thread_p_x_V_3_ap_vld);

    SC_METHOD(thread_p_x_V_4);

    SC_METHOD(thread_p_x_V_4_ap_vld);

    SC_METHOD(thread_p_x_V_5);

    SC_METHOD(thread_p_x_V_5_ap_vld);

    SC_METHOD(thread_p_x_V_6);

    SC_METHOD(thread_p_x_V_6_ap_vld);

    SC_METHOD(thread_p_x_V_7);

    SC_METHOD(thread_p_x_V_7_ap_vld);

    SC_METHOD(thread_p_x_V_8);

    SC_METHOD(thread_p_x_V_8_ap_vld);

    SC_METHOD(thread_p_y_V_0);

    SC_METHOD(thread_p_y_V_0_ap_vld);

    SC_METHOD(thread_p_y_V_1);

    SC_METHOD(thread_p_y_V_1_ap_vld);

    SC_METHOD(thread_p_y_V_2);

    SC_METHOD(thread_p_y_V_2_ap_vld);

    SC_METHOD(thread_p_y_V_3);

    SC_METHOD(thread_p_y_V_3_ap_vld);

    SC_METHOD(thread_p_y_V_4);

    SC_METHOD(thread_p_y_V_4_ap_vld);

    SC_METHOD(thread_p_y_V_5);

    SC_METHOD(thread_p_y_V_5_ap_vld);

    SC_METHOD(thread_p_y_V_6);

    SC_METHOD(thread_p_y_V_6_ap_vld);

    SC_METHOD(thread_p_y_V_7);

    SC_METHOD(thread_p_y_V_7_ap_vld);

    SC_METHOD(thread_p_y_V_8);

    SC_METHOD(thread_p_y_V_8_ap_vld);

    SC_METHOD(thread_p_z_V_0);

    SC_METHOD(thread_p_z_V_0_ap_vld);

    SC_METHOD(thread_p_z_V_1);

    SC_METHOD(thread_p_z_V_1_ap_vld);

    SC_METHOD(thread_p_z_V_2);

    SC_METHOD(thread_p_z_V_2_ap_vld);

    SC_METHOD(thread_p_z_V_3);

    SC_METHOD(thread_p_z_V_3_ap_vld);

    SC_METHOD(thread_p_z_V_4);

    SC_METHOD(thread_p_z_V_4_ap_vld);

    SC_METHOD(thread_p_z_V_5);

    SC_METHOD(thread_p_z_V_5_ap_vld);

    SC_METHOD(thread_p_z_V_6);

    SC_METHOD(thread_p_z_V_6_ap_vld);

    SC_METHOD(thread_p_z_V_7);

    SC_METHOD(thread_p_z_V_7_ap_vld);

    SC_METHOD(thread_p_z_V_8);

    SC_METHOD(thread_p_z_V_8_ap_vld);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "to_double_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, p_x_V_0, "(port)p_x_V_0");
    sc_trace(mVcdFile, p_x_V_0_ap_vld, "(port)p_x_V_0_ap_vld");
    sc_trace(mVcdFile, p_y_V_0, "(port)p_y_V_0");
    sc_trace(mVcdFile, p_y_V_0_ap_vld, "(port)p_y_V_0_ap_vld");
    sc_trace(mVcdFile, p_z_V_0, "(port)p_z_V_0");
    sc_trace(mVcdFile, p_z_V_0_ap_vld, "(port)p_z_V_0_ap_vld");
    sc_trace(mVcdFile, p_vx_V_0, "(port)p_vx_V_0");
    sc_trace(mVcdFile, p_vx_V_0_ap_vld, "(port)p_vx_V_0_ap_vld");
    sc_trace(mVcdFile, p_vy_V_0, "(port)p_vy_V_0");
    sc_trace(mVcdFile, p_vy_V_0_ap_vld, "(port)p_vy_V_0_ap_vld");
    sc_trace(mVcdFile, p_vz_V_0, "(port)p_vz_V_0");
    sc_trace(mVcdFile, p_vz_V_0_ap_vld, "(port)p_vz_V_0_ap_vld");
    sc_trace(mVcdFile, p_x_V_1, "(port)p_x_V_1");
    sc_trace(mVcdFile, p_x_V_1_ap_vld, "(port)p_x_V_1_ap_vld");
    sc_trace(mVcdFile, p_y_V_1, "(port)p_y_V_1");
    sc_trace(mVcdFile, p_y_V_1_ap_vld, "(port)p_y_V_1_ap_vld");
    sc_trace(mVcdFile, p_z_V_1, "(port)p_z_V_1");
    sc_trace(mVcdFile, p_z_V_1_ap_vld, "(port)p_z_V_1_ap_vld");
    sc_trace(mVcdFile, p_vx_V_1, "(port)p_vx_V_1");
    sc_trace(mVcdFile, p_vx_V_1_ap_vld, "(port)p_vx_V_1_ap_vld");
    sc_trace(mVcdFile, p_vy_V_1, "(port)p_vy_V_1");
    sc_trace(mVcdFile, p_vy_V_1_ap_vld, "(port)p_vy_V_1_ap_vld");
    sc_trace(mVcdFile, p_vz_V_1, "(port)p_vz_V_1");
    sc_trace(mVcdFile, p_vz_V_1_ap_vld, "(port)p_vz_V_1_ap_vld");
    sc_trace(mVcdFile, p_x_V_2, "(port)p_x_V_2");
    sc_trace(mVcdFile, p_x_V_2_ap_vld, "(port)p_x_V_2_ap_vld");
    sc_trace(mVcdFile, p_y_V_2, "(port)p_y_V_2");
    sc_trace(mVcdFile, p_y_V_2_ap_vld, "(port)p_y_V_2_ap_vld");
    sc_trace(mVcdFile, p_z_V_2, "(port)p_z_V_2");
    sc_trace(mVcdFile, p_z_V_2_ap_vld, "(port)p_z_V_2_ap_vld");
    sc_trace(mVcdFile, p_vx_V_2, "(port)p_vx_V_2");
    sc_trace(mVcdFile, p_vx_V_2_ap_vld, "(port)p_vx_V_2_ap_vld");
    sc_trace(mVcdFile, p_vy_V_2, "(port)p_vy_V_2");
    sc_trace(mVcdFile, p_vy_V_2_ap_vld, "(port)p_vy_V_2_ap_vld");
    sc_trace(mVcdFile, p_vz_V_2, "(port)p_vz_V_2");
    sc_trace(mVcdFile, p_vz_V_2_ap_vld, "(port)p_vz_V_2_ap_vld");
    sc_trace(mVcdFile, p_x_V_3, "(port)p_x_V_3");
    sc_trace(mVcdFile, p_x_V_3_ap_vld, "(port)p_x_V_3_ap_vld");
    sc_trace(mVcdFile, p_y_V_3, "(port)p_y_V_3");
    sc_trace(mVcdFile, p_y_V_3_ap_vld, "(port)p_y_V_3_ap_vld");
    sc_trace(mVcdFile, p_z_V_3, "(port)p_z_V_3");
    sc_trace(mVcdFile, p_z_V_3_ap_vld, "(port)p_z_V_3_ap_vld");
    sc_trace(mVcdFile, p_vx_V_3, "(port)p_vx_V_3");
    sc_trace(mVcdFile, p_vx_V_3_ap_vld, "(port)p_vx_V_3_ap_vld");
    sc_trace(mVcdFile, p_vy_V_3, "(port)p_vy_V_3");
    sc_trace(mVcdFile, p_vy_V_3_ap_vld, "(port)p_vy_V_3_ap_vld");
    sc_trace(mVcdFile, p_vz_V_3, "(port)p_vz_V_3");
    sc_trace(mVcdFile, p_vz_V_3_ap_vld, "(port)p_vz_V_3_ap_vld");
    sc_trace(mVcdFile, p_x_V_4, "(port)p_x_V_4");
    sc_trace(mVcdFile, p_x_V_4_ap_vld, "(port)p_x_V_4_ap_vld");
    sc_trace(mVcdFile, p_y_V_4, "(port)p_y_V_4");
    sc_trace(mVcdFile, p_y_V_4_ap_vld, "(port)p_y_V_4_ap_vld");
    sc_trace(mVcdFile, p_z_V_4, "(port)p_z_V_4");
    sc_trace(mVcdFile, p_z_V_4_ap_vld, "(port)p_z_V_4_ap_vld");
    sc_trace(mVcdFile, p_vx_V_4, "(port)p_vx_V_4");
    sc_trace(mVcdFile, p_vx_V_4_ap_vld, "(port)p_vx_V_4_ap_vld");
    sc_trace(mVcdFile, p_vy_V_4, "(port)p_vy_V_4");
    sc_trace(mVcdFile, p_vy_V_4_ap_vld, "(port)p_vy_V_4_ap_vld");
    sc_trace(mVcdFile, p_vz_V_4, "(port)p_vz_V_4");
    sc_trace(mVcdFile, p_vz_V_4_ap_vld, "(port)p_vz_V_4_ap_vld");
    sc_trace(mVcdFile, p_x_V_5, "(port)p_x_V_5");
    sc_trace(mVcdFile, p_x_V_5_ap_vld, "(port)p_x_V_5_ap_vld");
    sc_trace(mVcdFile, p_y_V_5, "(port)p_y_V_5");
    sc_trace(mVcdFile, p_y_V_5_ap_vld, "(port)p_y_V_5_ap_vld");
    sc_trace(mVcdFile, p_z_V_5, "(port)p_z_V_5");
    sc_trace(mVcdFile, p_z_V_5_ap_vld, "(port)p_z_V_5_ap_vld");
    sc_trace(mVcdFile, p_vx_V_5, "(port)p_vx_V_5");
    sc_trace(mVcdFile, p_vx_V_5_ap_vld, "(port)p_vx_V_5_ap_vld");
    sc_trace(mVcdFile, p_vy_V_5, "(port)p_vy_V_5");
    sc_trace(mVcdFile, p_vy_V_5_ap_vld, "(port)p_vy_V_5_ap_vld");
    sc_trace(mVcdFile, p_vz_V_5, "(port)p_vz_V_5");
    sc_trace(mVcdFile, p_vz_V_5_ap_vld, "(port)p_vz_V_5_ap_vld");
    sc_trace(mVcdFile, p_x_V_6, "(port)p_x_V_6");
    sc_trace(mVcdFile, p_x_V_6_ap_vld, "(port)p_x_V_6_ap_vld");
    sc_trace(mVcdFile, p_y_V_6, "(port)p_y_V_6");
    sc_trace(mVcdFile, p_y_V_6_ap_vld, "(port)p_y_V_6_ap_vld");
    sc_trace(mVcdFile, p_z_V_6, "(port)p_z_V_6");
    sc_trace(mVcdFile, p_z_V_6_ap_vld, "(port)p_z_V_6_ap_vld");
    sc_trace(mVcdFile, p_vx_V_6, "(port)p_vx_V_6");
    sc_trace(mVcdFile, p_vx_V_6_ap_vld, "(port)p_vx_V_6_ap_vld");
    sc_trace(mVcdFile, p_vy_V_6, "(port)p_vy_V_6");
    sc_trace(mVcdFile, p_vy_V_6_ap_vld, "(port)p_vy_V_6_ap_vld");
    sc_trace(mVcdFile, p_vz_V_6, "(port)p_vz_V_6");
    sc_trace(mVcdFile, p_vz_V_6_ap_vld, "(port)p_vz_V_6_ap_vld");
    sc_trace(mVcdFile, p_x_V_7, "(port)p_x_V_7");
    sc_trace(mVcdFile, p_x_V_7_ap_vld, "(port)p_x_V_7_ap_vld");
    sc_trace(mVcdFile, p_y_V_7, "(port)p_y_V_7");
    sc_trace(mVcdFile, p_y_V_7_ap_vld, "(port)p_y_V_7_ap_vld");
    sc_trace(mVcdFile, p_z_V_7, "(port)p_z_V_7");
    sc_trace(mVcdFile, p_z_V_7_ap_vld, "(port)p_z_V_7_ap_vld");
    sc_trace(mVcdFile, p_vx_V_7, "(port)p_vx_V_7");
    sc_trace(mVcdFile, p_vx_V_7_ap_vld, "(port)p_vx_V_7_ap_vld");
    sc_trace(mVcdFile, p_vy_V_7, "(port)p_vy_V_7");
    sc_trace(mVcdFile, p_vy_V_7_ap_vld, "(port)p_vy_V_7_ap_vld");
    sc_trace(mVcdFile, p_vz_V_7, "(port)p_vz_V_7");
    sc_trace(mVcdFile, p_vz_V_7_ap_vld, "(port)p_vz_V_7_ap_vld");
    sc_trace(mVcdFile, p_x_V_8, "(port)p_x_V_8");
    sc_trace(mVcdFile, p_x_V_8_ap_vld, "(port)p_x_V_8_ap_vld");
    sc_trace(mVcdFile, p_y_V_8, "(port)p_y_V_8");
    sc_trace(mVcdFile, p_y_V_8_ap_vld, "(port)p_y_V_8_ap_vld");
    sc_trace(mVcdFile, p_z_V_8, "(port)p_z_V_8");
    sc_trace(mVcdFile, p_z_V_8_ap_vld, "(port)p_z_V_8_ap_vld");
    sc_trace(mVcdFile, p_vx_V_8, "(port)p_vx_V_8");
    sc_trace(mVcdFile, p_vx_V_8_ap_vld, "(port)p_vx_V_8_ap_vld");
    sc_trace(mVcdFile, p_vy_V_8, "(port)p_vy_V_8");
    sc_trace(mVcdFile, p_vy_V_8_ap_vld, "(port)p_vy_V_8_ap_vld");
    sc_trace(mVcdFile, p_vz_V_8, "(port)p_vz_V_8");
    sc_trace(mVcdFile, p_vz_V_8_ap_vld, "(port)p_vz_V_8_ap_vld");
#endif

    }
}

to_double::~to_double() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void to_double::thread_p_vx_V_0() {
    p_vx_V_0 = ap_const_lv27_0;
}

void to_double::thread_p_vx_V_0_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vx_V_0_ap_vld = ap_const_logic_1;
    } else {
        p_vx_V_0_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vx_V_1() {
    p_vx_V_1 = ap_const_lv27_0;
}

void to_double::thread_p_vx_V_1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vx_V_1_ap_vld = ap_const_logic_1;
    } else {
        p_vx_V_1_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vx_V_2() {
    p_vx_V_2 = ap_const_lv27_0;
}

void to_double::thread_p_vx_V_2_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vx_V_2_ap_vld = ap_const_logic_1;
    } else {
        p_vx_V_2_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vx_V_3() {
    p_vx_V_3 = ap_const_lv27_0;
}

void to_double::thread_p_vx_V_3_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vx_V_3_ap_vld = ap_const_logic_1;
    } else {
        p_vx_V_3_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vx_V_4() {
    p_vx_V_4 = ap_const_lv27_0;
}

void to_double::thread_p_vx_V_4_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vx_V_4_ap_vld = ap_const_logic_1;
    } else {
        p_vx_V_4_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vx_V_5() {
    p_vx_V_5 = ap_const_lv27_0;
}

void to_double::thread_p_vx_V_5_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vx_V_5_ap_vld = ap_const_logic_1;
    } else {
        p_vx_V_5_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vx_V_6() {
    p_vx_V_6 = ap_const_lv27_0;
}

void to_double::thread_p_vx_V_6_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vx_V_6_ap_vld = ap_const_logic_1;
    } else {
        p_vx_V_6_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vx_V_7() {
    p_vx_V_7 = ap_const_lv27_0;
}

void to_double::thread_p_vx_V_7_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vx_V_7_ap_vld = ap_const_logic_1;
    } else {
        p_vx_V_7_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vx_V_8() {
    p_vx_V_8 = ap_const_lv27_0;
}

void to_double::thread_p_vx_V_8_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vx_V_8_ap_vld = ap_const_logic_1;
    } else {
        p_vx_V_8_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vy_V_0() {
    p_vy_V_0 = ap_const_lv27_0;
}

void to_double::thread_p_vy_V_0_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vy_V_0_ap_vld = ap_const_logic_1;
    } else {
        p_vy_V_0_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vy_V_1() {
    p_vy_V_1 = ap_const_lv27_0;
}

void to_double::thread_p_vy_V_1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vy_V_1_ap_vld = ap_const_logic_1;
    } else {
        p_vy_V_1_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vy_V_2() {
    p_vy_V_2 = ap_const_lv27_0;
}

void to_double::thread_p_vy_V_2_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vy_V_2_ap_vld = ap_const_logic_1;
    } else {
        p_vy_V_2_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vy_V_3() {
    p_vy_V_3 = ap_const_lv27_0;
}

void to_double::thread_p_vy_V_3_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vy_V_3_ap_vld = ap_const_logic_1;
    } else {
        p_vy_V_3_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vy_V_4() {
    p_vy_V_4 = ap_const_lv27_0;
}

void to_double::thread_p_vy_V_4_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vy_V_4_ap_vld = ap_const_logic_1;
    } else {
        p_vy_V_4_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vy_V_5() {
    p_vy_V_5 = ap_const_lv27_0;
}

void to_double::thread_p_vy_V_5_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vy_V_5_ap_vld = ap_const_logic_1;
    } else {
        p_vy_V_5_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vy_V_6() {
    p_vy_V_6 = ap_const_lv27_0;
}

void to_double::thread_p_vy_V_6_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vy_V_6_ap_vld = ap_const_logic_1;
    } else {
        p_vy_V_6_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vy_V_7() {
    p_vy_V_7 = ap_const_lv27_0;
}

void to_double::thread_p_vy_V_7_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vy_V_7_ap_vld = ap_const_logic_1;
    } else {
        p_vy_V_7_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vy_V_8() {
    p_vy_V_8 = ap_const_lv27_0;
}

void to_double::thread_p_vy_V_8_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vy_V_8_ap_vld = ap_const_logic_1;
    } else {
        p_vy_V_8_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vz_V_0() {
    p_vz_V_0 = ap_const_lv27_0;
}

void to_double::thread_p_vz_V_0_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vz_V_0_ap_vld = ap_const_logic_1;
    } else {
        p_vz_V_0_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vz_V_1() {
    p_vz_V_1 = ap_const_lv27_0;
}

void to_double::thread_p_vz_V_1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vz_V_1_ap_vld = ap_const_logic_1;
    } else {
        p_vz_V_1_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vz_V_2() {
    p_vz_V_2 = ap_const_lv27_0;
}

void to_double::thread_p_vz_V_2_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vz_V_2_ap_vld = ap_const_logic_1;
    } else {
        p_vz_V_2_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vz_V_3() {
    p_vz_V_3 = ap_const_lv27_0;
}

void to_double::thread_p_vz_V_3_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vz_V_3_ap_vld = ap_const_logic_1;
    } else {
        p_vz_V_3_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vz_V_4() {
    p_vz_V_4 = ap_const_lv27_0;
}

void to_double::thread_p_vz_V_4_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vz_V_4_ap_vld = ap_const_logic_1;
    } else {
        p_vz_V_4_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vz_V_5() {
    p_vz_V_5 = ap_const_lv27_0;
}

void to_double::thread_p_vz_V_5_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vz_V_5_ap_vld = ap_const_logic_1;
    } else {
        p_vz_V_5_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vz_V_6() {
    p_vz_V_6 = ap_const_lv27_0;
}

void to_double::thread_p_vz_V_6_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vz_V_6_ap_vld = ap_const_logic_1;
    } else {
        p_vz_V_6_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vz_V_7() {
    p_vz_V_7 = ap_const_lv27_0;
}

void to_double::thread_p_vz_V_7_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vz_V_7_ap_vld = ap_const_logic_1;
    } else {
        p_vz_V_7_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_vz_V_8() {
    p_vz_V_8 = ap_const_lv27_0;
}

void to_double::thread_p_vz_V_8_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_vz_V_8_ap_vld = ap_const_logic_1;
    } else {
        p_vz_V_8_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_x_V_0() {
    p_x_V_0 = ap_const_lv27_0;
}

void to_double::thread_p_x_V_0_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_x_V_0_ap_vld = ap_const_logic_1;
    } else {
        p_x_V_0_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_x_V_1() {
    p_x_V_1 = ap_const_lv27_0;
}

void to_double::thread_p_x_V_1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_x_V_1_ap_vld = ap_const_logic_1;
    } else {
        p_x_V_1_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_x_V_2() {
    p_x_V_2 = ap_const_lv27_0;
}

void to_double::thread_p_x_V_2_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_x_V_2_ap_vld = ap_const_logic_1;
    } else {
        p_x_V_2_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_x_V_3() {
    p_x_V_3 = ap_const_lv27_0;
}

void to_double::thread_p_x_V_3_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_x_V_3_ap_vld = ap_const_logic_1;
    } else {
        p_x_V_3_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_x_V_4() {
    p_x_V_4 = ap_const_lv27_0;
}

void to_double::thread_p_x_V_4_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_x_V_4_ap_vld = ap_const_logic_1;
    } else {
        p_x_V_4_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_x_V_5() {
    p_x_V_5 = ap_const_lv27_0;
}

void to_double::thread_p_x_V_5_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_x_V_5_ap_vld = ap_const_logic_1;
    } else {
        p_x_V_5_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_x_V_6() {
    p_x_V_6 = ap_const_lv27_0;
}

void to_double::thread_p_x_V_6_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_x_V_6_ap_vld = ap_const_logic_1;
    } else {
        p_x_V_6_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_x_V_7() {
    p_x_V_7 = ap_const_lv27_0;
}

void to_double::thread_p_x_V_7_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_x_V_7_ap_vld = ap_const_logic_1;
    } else {
        p_x_V_7_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_x_V_8() {
    p_x_V_8 = ap_const_lv27_0;
}

void to_double::thread_p_x_V_8_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_x_V_8_ap_vld = ap_const_logic_1;
    } else {
        p_x_V_8_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_y_V_0() {
    p_y_V_0 = ap_const_lv27_0;
}

void to_double::thread_p_y_V_0_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_y_V_0_ap_vld = ap_const_logic_1;
    } else {
        p_y_V_0_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_y_V_1() {
    p_y_V_1 = ap_const_lv27_0;
}

void to_double::thread_p_y_V_1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_y_V_1_ap_vld = ap_const_logic_1;
    } else {
        p_y_V_1_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_y_V_2() {
    p_y_V_2 = ap_const_lv27_0;
}

void to_double::thread_p_y_V_2_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_y_V_2_ap_vld = ap_const_logic_1;
    } else {
        p_y_V_2_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_y_V_3() {
    p_y_V_3 = ap_const_lv27_0;
}

void to_double::thread_p_y_V_3_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_y_V_3_ap_vld = ap_const_logic_1;
    } else {
        p_y_V_3_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_y_V_4() {
    p_y_V_4 = ap_const_lv27_0;
}

void to_double::thread_p_y_V_4_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_y_V_4_ap_vld = ap_const_logic_1;
    } else {
        p_y_V_4_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_y_V_5() {
    p_y_V_5 = ap_const_lv27_0;
}

void to_double::thread_p_y_V_5_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_y_V_5_ap_vld = ap_const_logic_1;
    } else {
        p_y_V_5_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_y_V_6() {
    p_y_V_6 = ap_const_lv27_0;
}

void to_double::thread_p_y_V_6_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_y_V_6_ap_vld = ap_const_logic_1;
    } else {
        p_y_V_6_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_y_V_7() {
    p_y_V_7 = ap_const_lv27_0;
}

void to_double::thread_p_y_V_7_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_y_V_7_ap_vld = ap_const_logic_1;
    } else {
        p_y_V_7_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_y_V_8() {
    p_y_V_8 = ap_const_lv27_0;
}

void to_double::thread_p_y_V_8_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_y_V_8_ap_vld = ap_const_logic_1;
    } else {
        p_y_V_8_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_z_V_0() {
    p_z_V_0 = ap_const_lv27_0;
}

void to_double::thread_p_z_V_0_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_z_V_0_ap_vld = ap_const_logic_1;
    } else {
        p_z_V_0_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_z_V_1() {
    p_z_V_1 = ap_const_lv27_0;
}

void to_double::thread_p_z_V_1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_z_V_1_ap_vld = ap_const_logic_1;
    } else {
        p_z_V_1_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_z_V_2() {
    p_z_V_2 = ap_const_lv27_0;
}

void to_double::thread_p_z_V_2_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_z_V_2_ap_vld = ap_const_logic_1;
    } else {
        p_z_V_2_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_z_V_3() {
    p_z_V_3 = ap_const_lv27_0;
}

void to_double::thread_p_z_V_3_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_z_V_3_ap_vld = ap_const_logic_1;
    } else {
        p_z_V_3_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_z_V_4() {
    p_z_V_4 = ap_const_lv27_0;
}

void to_double::thread_p_z_V_4_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_z_V_4_ap_vld = ap_const_logic_1;
    } else {
        p_z_V_4_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_z_V_5() {
    p_z_V_5 = ap_const_lv27_0;
}

void to_double::thread_p_z_V_5_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_z_V_5_ap_vld = ap_const_logic_1;
    } else {
        p_z_V_5_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_z_V_6() {
    p_z_V_6 = ap_const_lv27_0;
}

void to_double::thread_p_z_V_6_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_z_V_6_ap_vld = ap_const_logic_1;
    } else {
        p_z_V_6_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_z_V_7() {
    p_z_V_7 = ap_const_lv27_0;
}

void to_double::thread_p_z_V_7_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_z_V_7_ap_vld = ap_const_logic_1;
    } else {
        p_z_V_7_ap_vld = ap_const_logic_0;
    }
}

void to_double::thread_p_z_V_8() {
    p_z_V_8 = ap_const_lv27_0;
}

void to_double::thread_p_z_V_8_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_z_V_8_ap_vld = ap_const_logic_1;
    } else {
        p_z_V_8_ap_vld = ap_const_logic_0;
    }
}

}

