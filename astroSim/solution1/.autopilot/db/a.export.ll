; ModuleID = '/home/linsun/XilinxLab/astroCPP/astroSim/solution1/.autopilot/db/a.o.2.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@p_z_V_8 = global i27 -7842
@p_z_V_7 = global i27 -3249
@p_z_V_6 = global i27 3058
@p_z_V_5 = global i27 1867
@p_z_V_4 = global i27 795
@p_z_V_3 = global i27 -3
@p_z_V_2 = global i27 694
@p_z_V_1 = global i27 -357
@p_z_V_0 = global i27 -3
@p_z_V = global [9 x i27] [i27 -3, i27 -357, i27 694, i27 -3, i27 795, i27 1867, i27 3058, i27 -3249, i27 -7842]
@p_y_V_8 = global i27 -144033
@p_y_V_7 = global i27 144889
@p_y_V_6 = global i27 -164680
@p_y_V_5 = global i27 -48843
@p_y_V_4 = global i27 7385
@p_y_V_3 = global i27 9095
@p_y_V_2 = global i27 2138
@p_y_V_1 = global i27 -7094
@p_y_V_0 = global i27 94
@p_y_V = global [9 x i27] [i27 94, i27 -7094, i27 2138, i27 9095, i27 7385, i27 -48843, i27 -164680, i27 144889, i27 -144033]
@p_x_V_8 = global i27 468957
@p_x_V_7 = global i27 292320
@p_x_V_6 = global i27 -4913
@p_x_V_5 = global i27 -74457
@p_x_V_4 = global i27 -26227
@p_x_V_3 = global i27 13605
@p_x_V_2 = global i27 -11553
@p_x_V_1 = global i27 -2506
@p_x_V_0 = global i27 35
@p_x_V = global [9 x i27] [i27 35, i27 -2506, i27 -11553, i27 13605, i27 -26227, i27 -74457, i27 -4913, i27 292320, i27 468957]
@p_vz_V_8 = global i27 -79
@p_vz_V_7 = global i27 33
@p_vz_V_6 = global i27 -197
@p_vz_V_5 = global i27 -63
@p_vz_V_4 = global i27 -170
@p_vz_V_3 = global i27 -1
@p_vz_V_2 = global i27 -63
@p_vz_V_1 = global i27 -2445
@p_vz_V_0 = global i27 0
@p_vz_V = global [9 x i27] [i27 0, i27 -2445, i27 -63, i27 -1, i27 -170, i27 -63, i27 -197, i27 33, i27 -79]
@p_vy_V_8 = global i27 2875
@p_vy_V_7 = global i27 3181
@p_vy_V_6 = global i27 -176
@p_vy_V_5 = global i27 -5669
@p_vy_V_4 = global i27 -11699
@p_vy_V_3 = global i27 13599
@p_vy_V_2 = global i27 -19053
@p_vy_V_1 = global i27 -7597
@p_vy_V_0 = global i27 5
@p_vy_V = global [9 x i27] [i27 5, i27 -7597, i27 -19053, i27 13599, i27 -11699, i27 -5669, i27 -176, i27 3181, i27 2875]
@p_vx_V_8 = global i27 857
@p_vx_V_7 = global i27 -1692
@p_vx_V_6 = global i27 5019
@p_vx_V_5 = global i27 3857
@p_vx_V_4 = global i27 -3072
@p_vx_V_3 = global i27 -9330
@p_vx_V_2 = global i27 -3453
@p_vx_V_1 = global i27 19875
@p_vx_V_0 = global i27 -6
@p_vx_V = global [9 x i27] [i27 -6, i27 19875, i27 -3453, i27 -9330, i27 -3072, i27 3857, i27 5019, i27 -1692, i27 857]
@p_m_V_8 = constant i27 0
@p_m_V_7 = constant i27 0
@p_m_V_6 = constant i27 4
@p_m_V_5 = constant i27 15
@p_m_V_4 = constant i27 0
@p_m_V_3 = constant i27 0
@p_m_V_2 = constant i27 0
@p_m_V_1 = constant i27 0
@p_m_V_0 = constant i27 16384
@p_m_V = constant [9 x i27] [i27 16384, i27 0, i27 0, i27 0, i27 0, i27 15, i27 4, i27 0, i27 0]
@p_az_V_8 = global i27 0
@p_az_V_7 = global i27 0
@p_az_V_6 = global i27 0
@p_az_V_5 = global i27 0
@p_az_V_4 = global i27 0
@p_az_V_3 = global i27 0
@p_az_V_2 = global i27 0
@p_az_V_1 = global i27 0
@p_az_V_0 = global i27 0
@p_az_V = global [9 x i27] zeroinitializer
@p_ay_V_8 = global i27 0
@p_ay_V_7 = global i27 0
@p_ay_V_6 = global i27 0
@p_ay_V_5 = global i27 0
@p_ay_V_4 = global i27 0
@p_ay_V_3 = global i27 0
@p_ay_V_2 = global i27 0
@p_ay_V_1 = global i27 0
@p_ay_V_0 = global i27 0
@p_ay_V = global [9 x i27] zeroinitializer
@p_ax_V_8 = global i27 0
@p_ax_V_7 = global i27 0
@p_ax_V_6 = global i27 0
@p_ax_V_5 = global i27 0
@p_ax_V_4 = global i27 0
@p_ax_V_3 = global i27 0
@p_ax_V_2 = global i27 0
@p_ax_V_1 = global i27 0
@p_ax_V_0 = global i27 0
@p_ax_V = global [9 x i27] zeroinitializer
@llvm_global_ctors_1 = appending global [1 x void ()*] [void ()* @_GLOBAL__I_a]
@llvm_global_ctors_0 = appending global [1 x i32] [i32 65535]
@astroSim_str = internal unnamed_addr constant [9 x i8] c"astroSim\00"
@p_str274 = private unnamed_addr constant [12 x i8] c"hls_label_6\00", align 1
@p_str273 = private unnamed_addr constant [7 x i8] c"LOOP_X\00", align 1
@p_str271 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

define internal fastcc void @to_double() {
  store i27 0, i27* @p_x_V_0, align 16
  store i27 0, i27* @p_y_V_0, align 16
  store i27 0, i27* @p_z_V_0, align 16
  store i27 0, i27* @p_vx_V_0, align 16
  store i27 0, i27* @p_vy_V_0, align 16
  store i27 0, i27* @p_vz_V_0, align 16
  store i27 0, i27* @p_x_V_1, align 8
  store i27 0, i27* @p_y_V_1, align 4
  store i27 0, i27* @p_z_V_1, align 8
  store i27 0, i27* @p_vx_V_1, align 4
  store i27 0, i27* @p_vy_V_1, align 8
  store i27 0, i27* @p_vz_V_1, align 4
  store i27 0, i27* @p_x_V_2, align 8
  store i27 0, i27* @p_y_V_2, align 8
  store i27 0, i27* @p_z_V_2, align 8
  store i27 0, i27* @p_vx_V_2, align 8
  store i27 0, i27* @p_vy_V_2, align 8
  store i27 0, i27* @p_vz_V_2, align 8
  store i27 0, i27* @p_x_V_3, align 8
  store i27 0, i27* @p_y_V_3, align 4
  store i27 0, i27* @p_z_V_3, align 8
  store i27 0, i27* @p_vx_V_3, align 4
  store i27 0, i27* @p_vy_V_3, align 8
  store i27 0, i27* @p_vz_V_3, align 4
  store i27 0, i27* @p_x_V_4, align 16
  store i27 0, i27* @p_y_V_4, align 16
  store i27 0, i27* @p_z_V_4, align 16
  store i27 0, i27* @p_vx_V_4, align 16
  store i27 0, i27* @p_vy_V_4, align 16
  store i27 0, i27* @p_vz_V_4, align 16
  store i27 0, i27* @p_x_V_5, align 8
  store i27 0, i27* @p_y_V_5, align 4
  store i27 0, i27* @p_z_V_5, align 8
  store i27 0, i27* @p_vx_V_5, align 4
  store i27 0, i27* @p_vy_V_5, align 8
  store i27 0, i27* @p_vz_V_5, align 4
  store i27 0, i27* @p_x_V_6, align 8
  store i27 0, i27* @p_y_V_6, align 8
  store i27 0, i27* @p_z_V_6, align 8
  store i27 0, i27* @p_vx_V_6, align 8
  store i27 0, i27* @p_vy_V_6, align 8
  store i27 0, i27* @p_vz_V_6, align 8
  store i27 0, i27* @p_x_V_7, align 8
  store i27 0, i27* @p_y_V_7, align 4
  store i27 0, i27* @p_z_V_7, align 8
  store i27 0, i27* @p_vx_V_7, align 4
  store i27 0, i27* @p_vy_V_7, align 8
  store i27 0, i27* @p_vz_V_7, align 4
  store i27 0, i27* @p_x_V_8, align 16
  store i27 0, i27* @p_y_V_8, align 16
  store i27 0, i27* @p_z_V_8, align 16
  store i27 0, i27* @p_vx_V_8, align 16
  store i27 0, i27* @p_vy_V_8, align 16
  store i27 0, i27* @p_vz_V_8, align 16
  ret void
}

declare i64 @llvm.part.set.i64.i11(i64, i11, i32, i32) nounwind readnone

declare i50 @llvm.part.set.i50.i26(i50, i26, i32, i32) nounwind readnone

declare i64 @llvm.part.select.i64(i64, i32, i32) nounwind readnone

declare i48 @llvm.part.select.i48(i48, i32, i32) nounwind readnone

declare i41 @llvm.part.select.i41(i41, i32, i32) nounwind readnone

declare i25 @llvm.part.select.i25(i25, i32, i32) nounwind readnone

declare void @llvm.dbg.value(metadata, i64, metadata) nounwind readnone

define internal fastcc void @gravity() nounwind uwtable {
._crit_edge.0.0_ifconv:
  %p_x_V_0_load = load i27* @p_x_V_0, align 16
  %p_x_V_1_load = load i27* @p_x_V_1, align 8
  %p_Val2_12_0_1 = sub i27 %p_x_V_0_load, %p_x_V_1_load
  %p_y_V_0_load = load i27* @p_y_V_0, align 16
  %p_y_V_1_load = load i27* @p_y_V_1, align 4
  %p_Val2_15_0_1 = sub i27 %p_y_V_0_load, %p_y_V_1_load
  %p_z_V_0_load = load i27* @p_z_V_0, align 16
  %p_z_V_1_load = load i27* @p_z_V_1, align 8
  %p_Val2_18_0_1 = sub i27 %p_z_V_0_load, %p_z_V_1_load
  %OP1_V_5_0_1_cast = sext i27 %p_Val2_12_0_1 to i41
  %OP1_V_6_0_1_cast = sext i27 %p_Val2_15_0_1 to i41
  %tmp_2820_0_1 = mul i41 %OP1_V_5_0_1_cast, %OP1_V_5_0_1_cast
  %tmp_2919_0_1 = mul i41 %OP1_V_6_0_1_cast, %OP1_V_6_0_1_cast
  %p_Val2_20_0_1 = add i41 %tmp_2919_0_1, %tmp_2820_0_1
  %OP1_V_7_0_1_cast = sext i27 %p_Val2_18_0_1 to i41
  %tmp_3118_0_1_cast = mul i41 %OP1_V_7_0_1_cast, %OP1_V_7_0_1_cast
  %p_Val2_21_0_1 = add i41 %p_Val2_20_0_1, %tmp_3118_0_1_cast
  %tmp_1 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_0_1, i32 14, i32 28)
  %x_in_V_read_assign = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_1, i33 0)
  %sqrtX_out_V_write_as = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign) nounwind
  %tmp_584 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_0_1, i32 14, i32 40)
  %OP1_V_0_1_cast_cast = sext i27 %tmp_584 to i42
  %tmp_585 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as, i32 10, i32 24)
  %OP2_V_3_0_1_cast_cas = zext i15 %tmp_585 to i42
  %tmp_37_0_1 = mul i42 %OP2_V_3_0_1_cast_cas, %OP1_V_0_1_cast_cast
  %tmp_38_0_1 = icmp eq i42 %tmp_37_0_1, 0
  %dp_4_0_s = sext i42 %tmp_37_0_1 to i64
  %dp_4_0_1 = sitofp i64 %dp_4_0_s to double
  %res_V_0_1 = bitcast double %dp_4_0_1 to i64
  %p_Result_0_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_0_1, i32 52, i32 62)
  %exp_V_5_0_1 = add i11 -28, %p_Result_0_1
  %p_Result_43_0_1 = call i64 @llvm.part.set.i64.i11(i64 %res_V_0_1, i11 %exp_V_5_0_1, i32 52, i32 62) nounwind
  %dp_0_1 = bitcast i64 %p_Result_43_0_1 to double
  %p_0_i_0_1 = select i1 %tmp_38_0_1, double 0.000000e+00, double %dp_0_1
  %tmp_39_0_1 = fdiv double -1.000000e+00, %p_0_i_0_1
  %prefact_0_1 = fmul double %tmp_39_0_1, 0.000000e+00
  %ireg_V_0_1 = bitcast double %prefact_0_1 to i64
  %tmp_586 = trunc i64 %ireg_V_0_1 to i63
  %tmp_587 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_0_1, i32 63)
  %p_Result_40_0_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_0_1, i32 52, i32 62)
  %tmp_42_0_1 = zext i11 %p_Result_40_0_1 to i12
  %tmp_588 = trunc i64 %ireg_V_0_1 to i52
  %tmp = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_588)
  %p_Result_45_0_1 = zext i53 %tmp to i54
  %man_V_1_0_1 = sub i54 0, %p_Result_45_0_1
  %man_V_2_0_1 = select i1 %tmp_587, i54 %man_V_1_0_1, i54 %p_Result_45_0_1
  %tmp_44_0_1 = icmp eq i63 %tmp_586, 0
  %F2_0_1 = sub i12 1075, %tmp_42_0_1
  %tmp_46_0_1 = icmp sgt i12 %F2_0_1, 14
  %tmp_47_0_1 = add i12 -14, %F2_0_1
  %tmp_48_0_1 = sub i12 14, %F2_0_1
  %sh_amt_0_1 = select i1 %tmp_46_0_1, i12 %tmp_47_0_1, i12 %tmp_48_0_1
  %sh_amt_0_1_cast = sext i12 %sh_amt_0_1 to i32
  %tmp_49_0_1 = icmp eq i12 %F2_0_1, 14
  %tmp_589 = trunc i54 %man_V_2_0_1 to i27
  %tmp_51_0_1 = icmp ult i12 %sh_amt_0_1, 54
  %tmp_53_0_1 = icmp ult i12 %sh_amt_0_1, 27
  %tmp_54_0_1 = zext i32 %sh_amt_0_1_cast to i54
  %tmp_55_0_1 = ashr i54 %man_V_2_0_1, %tmp_54_0_1
  %tmp_590 = trunc i54 %tmp_55_0_1 to i27
  %storemerge_0_1 = select i1 %tmp_587, i27 -1, i27 0
  %tmp_57_0_1 = sext i27 %tmp_589 to i32
  %tmp_58_0_1 = shl i32 %tmp_57_0_1, %sh_amt_0_1_cast
  %tmp_591 = trunc i32 %tmp_58_0_1 to i27
  %sel_tmp1 = xor i1 %tmp_44_0_1, true
  %sel_tmp2 = and i1 %tmp_49_0_1, %sel_tmp1
  %sel_tmp6_demorgan = or i1 %tmp_44_0_1, %tmp_49_0_1
  %sel_tmp6 = xor i1 %sel_tmp6_demorgan, true
  %sel_tmp7 = and i1 %tmp_46_0_1, %sel_tmp6
  %sel_tmp8 = xor i1 %tmp_51_0_1, true
  %sel_tmp9 = and i1 %sel_tmp7, %sel_tmp8
  %sel_tmp = and i1 %sel_tmp7, %tmp_51_0_1
  %sel_tmp21_demorgan = or i1 %sel_tmp6_demorgan, %tmp_46_0_1
  %sel_tmp3 = xor i1 %sel_tmp21_demorgan, true
  %sel_tmp4 = and i1 %tmp_53_0_1, %sel_tmp3
  %newSel = select i1 %sel_tmp4, i27 %tmp_591, i27 %tmp_590
  %or_cond = or i1 %sel_tmp4, %sel_tmp
  %newSel1 = select i1 %sel_tmp9, i27 %storemerge_0_1, i27 %tmp_589
  %or_cond1 = or i1 %sel_tmp9, %sel_tmp2
  %newSel2 = select i1 %or_cond, i27 %newSel, i27 %newSel1
  %or_cond2 = or i1 %or_cond, %or_cond1
  %newSel3 = select i1 %or_cond2, i27 %newSel2, i27 0
  %OP1_V_1_0_1_cast = sext i27 %newSel3 to i41
  %p_Val2_29_0_1 = mul i41 %OP1_V_1_0_1_cast, %OP1_V_5_0_1_cast
  %p_Val2_32_0_1 = mul i41 %OP1_V_1_0_1_cast, %OP1_V_6_0_1_cast
  %p_Val2_35_0_1 = mul i41 %OP1_V_1_0_1_cast, %OP1_V_7_0_1_cast
  %p_x_V_2_load = load i27* @p_x_V_2, align 8
  %p_Val2_12_0_2 = sub i27 %p_x_V_0_load, %p_x_V_2_load
  %p_y_V_2_load = load i27* @p_y_V_2, align 8
  %p_Val2_15_0_2 = sub i27 %p_y_V_0_load, %p_y_V_2_load
  %p_z_V_2_load = load i27* @p_z_V_2, align 8
  %p_Val2_18_0_2 = sub i27 %p_z_V_0_load, %p_z_V_2_load
  %tmp_2 = sext i27 %p_Val2_12_0_2 to i41
  %tmp_3 = sext i27 %p_Val2_15_0_2 to i41
  %tmp_2820_0_2 = mul i41 %tmp_2, %tmp_2
  %tmp_2919_0_2 = mul i41 %tmp_3, %tmp_3
  %p_Val2_20_0_2 = add i41 %tmp_2919_0_2, %tmp_2820_0_2
  %tmp_4 = sext i27 %p_Val2_18_0_2 to i41
  %tmp_3118_0_2_cast = mul i41 %tmp_4, %tmp_4
  %p_Val2_21_0_2 = add i41 %p_Val2_20_0_2, %tmp_3118_0_2_cast
  %tmp_5 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_0_2, i32 14, i32 28)
  %x_in_V_read_assign_1 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_5, i33 0)
  %sqrtX_out_V_write_as_1 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_1) nounwind
  %tmp_592 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_0_2, i32 14, i32 40)
  %OP1_V_0_2_cast_cast = sext i27 %tmp_592 to i42
  %tmp_593 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_1, i32 10, i32 24)
  %OP2_V_3_0_2_cast_cas = zext i15 %tmp_593 to i42
  %tmp_37_0_2 = mul i42 %OP2_V_3_0_2_cast_cas, %OP1_V_0_2_cast_cast
  %tmp_38_0_2 = icmp eq i42 %tmp_37_0_2, 0
  %dp_4_0_9 = sext i42 %tmp_37_0_2 to i64
  %dp_4_0_2 = sitofp i64 %dp_4_0_9 to double
  %res_V_0_2 = bitcast double %dp_4_0_2 to i64
  %p_Result_0_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_0_2, i32 52, i32 62)
  %exp_V_5_0_2 = add i11 -28, %p_Result_0_2
  %p_Result_43_0_2 = call i64 @llvm.part.set.i64.i11(i64 %res_V_0_2, i11 %exp_V_5_0_2, i32 52, i32 62) nounwind
  %dp_0_2 = bitcast i64 %p_Result_43_0_2 to double
  %p_0_i_0_2 = select i1 %tmp_38_0_2, double 0.000000e+00, double %dp_0_2
  %tmp_39_0_2 = fdiv double -1.000000e+00, %p_0_i_0_2
  %prefact_0_2 = fmul double %tmp_39_0_2, 0.000000e+00
  %ireg_V_0_2 = bitcast double %prefact_0_2 to i64
  %tmp_594 = trunc i64 %ireg_V_0_2 to i63
  %tmp_595 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_0_2, i32 63)
  %p_Result_40_0_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_0_2, i32 52, i32 62)
  %tmp_42_0_2 = zext i11 %p_Result_40_0_2 to i12
  %tmp_596 = trunc i64 %ireg_V_0_2 to i52
  %tmp_s = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_596)
  %p_Result_45_0_2 = zext i53 %tmp_s to i54
  %man_V_1_0_2 = sub i54 0, %p_Result_45_0_2
  %man_V_2_0_2 = select i1 %tmp_595, i54 %man_V_1_0_2, i54 %p_Result_45_0_2
  %tmp_44_0_2 = icmp eq i63 %tmp_594, 0
  %F2_0_2 = sub i12 1075, %tmp_42_0_2
  %tmp_46_0_2 = icmp sgt i12 %F2_0_2, 14
  %tmp_47_0_2 = add i12 -14, %F2_0_2
  %tmp_48_0_2 = sub i12 14, %F2_0_2
  %sh_amt_0_2 = select i1 %tmp_46_0_2, i12 %tmp_47_0_2, i12 %tmp_48_0_2
  %sh_amt_0_2_cast = sext i12 %sh_amt_0_2 to i32
  %tmp_49_0_2 = icmp eq i12 %F2_0_2, 14
  %tmp_597 = trunc i54 %man_V_2_0_2 to i27
  %tmp_51_0_2 = icmp ult i12 %sh_amt_0_2, 54
  %tmp_53_0_2 = icmp ult i12 %sh_amt_0_2, 27
  %tmp_54_0_2 = zext i32 %sh_amt_0_2_cast to i54
  %tmp_55_0_2 = ashr i54 %man_V_2_0_2, %tmp_54_0_2
  %tmp_598 = trunc i54 %tmp_55_0_2 to i27
  %storemerge_0_2 = select i1 %tmp_595, i27 -1, i27 0
  %tmp_57_0_2 = sext i27 %tmp_597 to i32
  %tmp_58_0_2 = shl i32 %tmp_57_0_2, %sh_amt_0_2_cast
  %tmp_599 = trunc i32 %tmp_58_0_2 to i27
  %sel_tmp5 = xor i1 %tmp_44_0_2, true
  %sel_tmp10 = and i1 %tmp_49_0_2, %sel_tmp5
  %sel_tmp31_demorgan = or i1 %tmp_44_0_2, %tmp_49_0_2
  %sel_tmp11 = xor i1 %sel_tmp31_demorgan, true
  %sel_tmp12 = and i1 %tmp_46_0_2, %sel_tmp11
  %sel_tmp13 = xor i1 %tmp_51_0_2, true
  %sel_tmp14 = and i1 %sel_tmp12, %sel_tmp13
  %sel_tmp15 = and i1 %sel_tmp12, %tmp_51_0_2
  %sel_tmp46_demorgan = or i1 %sel_tmp31_demorgan, %tmp_46_0_2
  %sel_tmp16 = xor i1 %sel_tmp46_demorgan, true
  %sel_tmp17 = and i1 %tmp_53_0_2, %sel_tmp16
  %newSel4 = select i1 %sel_tmp17, i27 %tmp_599, i27 %tmp_598
  %or_cond3 = or i1 %sel_tmp17, %sel_tmp15
  %newSel5 = select i1 %sel_tmp14, i27 %storemerge_0_2, i27 %tmp_597
  %or_cond4 = or i1 %sel_tmp14, %sel_tmp10
  %newSel6 = select i1 %or_cond3, i27 %newSel4, i27 %newSel5
  %or_cond5 = or i1 %or_cond3, %or_cond4
  %newSel7 = select i1 %or_cond5, i27 %newSel6, i27 0
  %tmp_6 = sext i27 %newSel7 to i41
  %tmp_7 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_29_0_1, i32 14, i32 40)
  %tmp_61_0_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_7, i14 0)
  %tmp_6223_0_2_cast = mul i41 %tmp_6, %tmp_2
  %p_Val2_30_0_2 = add i41 %tmp_61_0_2, %tmp_6223_0_2_cast
  %tmp_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_32_0_1, i32 14, i32 40)
  %tmp_66_0_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_8, i14 0)
  %tmp_6724_0_2_cast = mul i41 %tmp_6, %tmp_3
  %p_Val2_33_0_2 = add i41 %tmp_66_0_2, %tmp_6724_0_2_cast
  %tmp_9 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_35_0_1, i32 14, i32 40)
  %tmp_71_0_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_9, i14 0)
  %tmp_7225_0_2_cast = mul i41 %tmp_6, %tmp_4
  %p_Val2_36_0_2 = add i41 %tmp_71_0_2, %tmp_7225_0_2_cast
  %p_x_V_3_load = load i27* @p_x_V_3, align 8
  %p_Val2_12_0_3 = sub i27 %p_x_V_0_load, %p_x_V_3_load
  %p_y_V_3_load = load i27* @p_y_V_3, align 4
  %p_Val2_15_0_3 = sub i27 %p_y_V_0_load, %p_y_V_3_load
  %p_z_V_3_load = load i27* @p_z_V_3, align 8
  %p_Val2_18_0_3 = sub i27 %p_z_V_0_load, %p_z_V_3_load
  %tmp_10 = sext i27 %p_Val2_12_0_3 to i41
  %tmp_11 = sext i27 %p_Val2_15_0_3 to i41
  %tmp_2820_0_3 = mul i41 %tmp_10, %tmp_10
  %tmp_2919_0_3 = mul i41 %tmp_11, %tmp_11
  %p_Val2_20_0_3 = add i41 %tmp_2919_0_3, %tmp_2820_0_3
  %tmp_12 = sext i27 %p_Val2_18_0_3 to i41
  %tmp_3118_0_3_cast = mul i41 %tmp_12, %tmp_12
  %p_Val2_21_0_3 = add i41 %p_Val2_20_0_3, %tmp_3118_0_3_cast
  %tmp_13 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_0_3, i32 14, i32 28)
  %x_in_V_read_assign_2 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_13, i33 0)
  %sqrtX_out_V_write_as_2 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_2) nounwind
  %tmp_600 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_0_3, i32 14, i32 40)
  %OP1_V_0_3_cast_cast = sext i27 %tmp_600 to i42
  %tmp_601 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_2, i32 10, i32 24)
  %OP2_V_3_0_3_cast_cas = zext i15 %tmp_601 to i42
  %tmp_37_0_3 = mul i42 %OP2_V_3_0_3_cast_cas, %OP1_V_0_3_cast_cast
  %tmp_38_0_3 = icmp eq i42 %tmp_37_0_3, 0
  %dp_4_0_10 = sext i42 %tmp_37_0_3 to i64
  %dp_4_0_3 = sitofp i64 %dp_4_0_10 to double
  %res_V_0_3 = bitcast double %dp_4_0_3 to i64
  %p_Result_0_3 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_0_3, i32 52, i32 62)
  %exp_V_5_0_3 = add i11 -28, %p_Result_0_3
  %p_Result_43_0_3 = call i64 @llvm.part.set.i64.i11(i64 %res_V_0_3, i11 %exp_V_5_0_3, i32 52, i32 62) nounwind
  %dp_0_3 = bitcast i64 %p_Result_43_0_3 to double
  %p_0_i_0_3 = select i1 %tmp_38_0_3, double 0.000000e+00, double %dp_0_3
  %tmp_39_0_3 = fdiv double -1.000000e+00, %p_0_i_0_3
  %prefact_0_3 = fmul double %tmp_39_0_3, 0.000000e+00
  %ireg_V_0_3 = bitcast double %prefact_0_3 to i64
  %tmp_602 = trunc i64 %ireg_V_0_3 to i63
  %tmp_603 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_0_3, i32 63)
  %p_Result_40_0_3 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_0_3, i32 52, i32 62)
  %tmp_42_0_3 = zext i11 %p_Result_40_0_3 to i12
  %tmp_604 = trunc i64 %ireg_V_0_3 to i52
  %tmp_14 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_604)
  %p_Result_45_0_3 = zext i53 %tmp_14 to i54
  %man_V_1_0_3 = sub i54 0, %p_Result_45_0_3
  %man_V_2_0_3 = select i1 %tmp_603, i54 %man_V_1_0_3, i54 %p_Result_45_0_3
  %tmp_44_0_3 = icmp eq i63 %tmp_602, 0
  %F2_0_3 = sub i12 1075, %tmp_42_0_3
  %tmp_46_0_3 = icmp sgt i12 %F2_0_3, 14
  %tmp_47_0_3 = add i12 -14, %F2_0_3
  %tmp_48_0_3 = sub i12 14, %F2_0_3
  %sh_amt_0_3 = select i1 %tmp_46_0_3, i12 %tmp_47_0_3, i12 %tmp_48_0_3
  %sh_amt_0_3_cast = sext i12 %sh_amt_0_3 to i32
  %tmp_49_0_3 = icmp eq i12 %F2_0_3, 14
  %tmp_605 = trunc i54 %man_V_2_0_3 to i27
  %tmp_51_0_3 = icmp ult i12 %sh_amt_0_3, 54
  %tmp_53_0_3 = icmp ult i12 %sh_amt_0_3, 27
  %tmp_54_0_3 = zext i32 %sh_amt_0_3_cast to i54
  %tmp_55_0_3 = ashr i54 %man_V_2_0_3, %tmp_54_0_3
  %tmp_606 = trunc i54 %tmp_55_0_3 to i27
  %storemerge_0_3 = select i1 %tmp_603, i27 -1, i27 0
  %tmp_57_0_3 = sext i27 %tmp_605 to i32
  %tmp_58_0_3 = shl i32 %tmp_57_0_3, %sh_amt_0_3_cast
  %tmp_607 = trunc i32 %tmp_58_0_3 to i27
  %sel_tmp18 = xor i1 %tmp_44_0_3, true
  %sel_tmp19 = and i1 %tmp_49_0_3, %sel_tmp18
  %sel_tmp56_demorgan = or i1 %tmp_44_0_3, %tmp_49_0_3
  %sel_tmp20 = xor i1 %sel_tmp56_demorgan, true
  %sel_tmp21 = and i1 %tmp_46_0_3, %sel_tmp20
  %sel_tmp22 = xor i1 %tmp_51_0_3, true
  %sel_tmp23 = and i1 %sel_tmp21, %sel_tmp22
  %sel_tmp24 = and i1 %sel_tmp21, %tmp_51_0_3
  %sel_tmp71_demorgan = or i1 %sel_tmp56_demorgan, %tmp_46_0_3
  %sel_tmp25 = xor i1 %sel_tmp71_demorgan, true
  %sel_tmp26 = and i1 %tmp_53_0_3, %sel_tmp25
  %newSel8 = select i1 %sel_tmp26, i27 %tmp_607, i27 %tmp_606
  %or_cond6 = or i1 %sel_tmp26, %sel_tmp24
  %newSel9 = select i1 %sel_tmp23, i27 %storemerge_0_3, i27 %tmp_605
  %or_cond7 = or i1 %sel_tmp23, %sel_tmp19
  %newSel10 = select i1 %or_cond6, i27 %newSel8, i27 %newSel9
  %or_cond8 = or i1 %or_cond6, %or_cond7
  %newSel11 = select i1 %or_cond8, i27 %newSel10, i27 0
  %tmp_15 = sext i27 %newSel11 to i41
  %tmp_16 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_0_2, i32 14, i32 40)
  %tmp_61_0_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_16, i14 0)
  %tmp_6223_0_3_cast = mul i41 %tmp_15, %tmp_10
  %p_Val2_30_0_3 = add i41 %tmp_61_0_3, %tmp_6223_0_3_cast
  %tmp_17 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_0_2, i32 14, i32 40)
  %tmp_66_0_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_17, i14 0)
  %tmp_6724_0_3_cast = mul i41 %tmp_15, %tmp_11
  %p_Val2_33_0_3 = add i41 %tmp_66_0_3, %tmp_6724_0_3_cast
  %tmp_18 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_0_2, i32 14, i32 40)
  %tmp_71_0_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_18, i14 0)
  %tmp_7225_0_3_cast = mul i41 %tmp_15, %tmp_12
  %p_Val2_36_0_3 = add i41 %tmp_71_0_3, %tmp_7225_0_3_cast
  %p_x_V_4_load = load i27* @p_x_V_4, align 16
  %p_Val2_12_0_4 = sub i27 %p_x_V_0_load, %p_x_V_4_load
  %p_y_V_4_load = load i27* @p_y_V_4, align 16
  %p_Val2_15_0_4 = sub i27 %p_y_V_0_load, %p_y_V_4_load
  %p_z_V_4_load = load i27* @p_z_V_4, align 16
  %p_Val2_18_0_4 = sub i27 %p_z_V_0_load, %p_z_V_4_load
  %tmp_19 = sext i27 %p_Val2_12_0_4 to i41
  %tmp_20 = sext i27 %p_Val2_15_0_4 to i41
  %tmp_2820_0_4 = mul i41 %tmp_19, %tmp_19
  %tmp_2919_0_4 = mul i41 %tmp_20, %tmp_20
  %p_Val2_20_0_4 = add i41 %tmp_2919_0_4, %tmp_2820_0_4
  %tmp_21 = sext i27 %p_Val2_18_0_4 to i41
  %tmp_3118_0_4_cast = mul i41 %tmp_21, %tmp_21
  %p_Val2_21_0_4 = add i41 %p_Val2_20_0_4, %tmp_3118_0_4_cast
  %tmp_22 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_0_4, i32 14, i32 28)
  %x_in_V_read_assign_3 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_22, i33 0)
  %sqrtX_out_V_write_as_3 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_3) nounwind
  %tmp_608 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_0_4, i32 14, i32 40)
  %OP1_V_0_4_cast_cast = sext i27 %tmp_608 to i42
  %tmp_609 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_3, i32 10, i32 24)
  %OP2_V_3_0_4_cast_cas = zext i15 %tmp_609 to i42
  %tmp_37_0_4 = mul i42 %OP2_V_3_0_4_cast_cas, %OP1_V_0_4_cast_cast
  %tmp_38_0_4 = icmp eq i42 %tmp_37_0_4, 0
  %dp_4_0_11 = sext i42 %tmp_37_0_4 to i64
  %dp_4_0_4 = sitofp i64 %dp_4_0_11 to double
  %res_V_0_4 = bitcast double %dp_4_0_4 to i64
  %p_Result_0_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_0_4, i32 52, i32 62)
  %exp_V_5_0_4 = add i11 -28, %p_Result_0_4
  %p_Result_43_0_4 = call i64 @llvm.part.set.i64.i11(i64 %res_V_0_4, i11 %exp_V_5_0_4, i32 52, i32 62) nounwind
  %dp_0_4 = bitcast i64 %p_Result_43_0_4 to double
  %p_0_i_0_4 = select i1 %tmp_38_0_4, double 0.000000e+00, double %dp_0_4
  %tmp_39_0_4 = fdiv double -1.000000e+00, %p_0_i_0_4
  %prefact_0_4 = fmul double %tmp_39_0_4, 0.000000e+00
  %ireg_V_0_4 = bitcast double %prefact_0_4 to i64
  %tmp_610 = trunc i64 %ireg_V_0_4 to i63
  %tmp_611 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_0_4, i32 63)
  %p_Result_40_0_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_0_4, i32 52, i32 62)
  %tmp_42_0_4 = zext i11 %p_Result_40_0_4 to i12
  %tmp_612 = trunc i64 %ireg_V_0_4 to i52
  %tmp_23 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_612)
  %p_Result_45_0_4 = zext i53 %tmp_23 to i54
  %man_V_1_0_4 = sub i54 0, %p_Result_45_0_4
  %man_V_2_0_4 = select i1 %tmp_611, i54 %man_V_1_0_4, i54 %p_Result_45_0_4
  %tmp_44_0_4 = icmp eq i63 %tmp_610, 0
  %F2_0_4 = sub i12 1075, %tmp_42_0_4
  %tmp_46_0_4 = icmp sgt i12 %F2_0_4, 14
  %tmp_47_0_4 = add i12 -14, %F2_0_4
  %tmp_48_0_4 = sub i12 14, %F2_0_4
  %sh_amt_0_4 = select i1 %tmp_46_0_4, i12 %tmp_47_0_4, i12 %tmp_48_0_4
  %sh_amt_0_4_cast = sext i12 %sh_amt_0_4 to i32
  %tmp_49_0_4 = icmp eq i12 %F2_0_4, 14
  %tmp_613 = trunc i54 %man_V_2_0_4 to i27
  %tmp_51_0_4 = icmp ult i12 %sh_amt_0_4, 54
  %tmp_53_0_4 = icmp ult i12 %sh_amt_0_4, 27
  %tmp_54_0_4 = zext i32 %sh_amt_0_4_cast to i54
  %tmp_55_0_4 = ashr i54 %man_V_2_0_4, %tmp_54_0_4
  %tmp_614 = trunc i54 %tmp_55_0_4 to i27
  %storemerge_0_4 = select i1 %tmp_611, i27 -1, i27 0
  %tmp_57_0_4 = sext i27 %tmp_613 to i32
  %tmp_58_0_4 = shl i32 %tmp_57_0_4, %sh_amt_0_4_cast
  %tmp_615 = trunc i32 %tmp_58_0_4 to i27
  %sel_tmp27 = xor i1 %tmp_44_0_4, true
  %sel_tmp28 = and i1 %tmp_49_0_4, %sel_tmp27
  %sel_tmp81_demorgan = or i1 %tmp_44_0_4, %tmp_49_0_4
  %sel_tmp29 = xor i1 %sel_tmp81_demorgan, true
  %sel_tmp30 = and i1 %tmp_46_0_4, %sel_tmp29
  %sel_tmp31 = xor i1 %tmp_51_0_4, true
  %sel_tmp32 = and i1 %sel_tmp30, %sel_tmp31
  %sel_tmp33 = and i1 %sel_tmp30, %tmp_51_0_4
  %sel_tmp96_demorgan = or i1 %sel_tmp81_demorgan, %tmp_46_0_4
  %sel_tmp34 = xor i1 %sel_tmp96_demorgan, true
  %sel_tmp35 = and i1 %tmp_53_0_4, %sel_tmp34
  %newSel12 = select i1 %sel_tmp35, i27 %tmp_615, i27 %tmp_614
  %or_cond9 = or i1 %sel_tmp35, %sel_tmp33
  %newSel13 = select i1 %sel_tmp32, i27 %storemerge_0_4, i27 %tmp_613
  %or_cond10 = or i1 %sel_tmp32, %sel_tmp28
  %newSel14 = select i1 %or_cond9, i27 %newSel12, i27 %newSel13
  %or_cond11 = or i1 %or_cond9, %or_cond10
  %newSel15 = select i1 %or_cond11, i27 %newSel14, i27 0
  %tmp_24 = sext i27 %newSel15 to i41
  %tmp_25 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_0_3, i32 14, i32 40)
  %tmp_61_0_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_25, i14 0)
  %tmp_6223_0_4_cast = mul i41 %tmp_24, %tmp_19
  %p_Val2_30_0_4 = add i41 %tmp_61_0_4, %tmp_6223_0_4_cast
  %tmp_26 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_0_3, i32 14, i32 40)
  %tmp_66_0_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_26, i14 0)
  %tmp_6724_0_4_cast = mul i41 %tmp_24, %tmp_20
  %p_Val2_33_0_4 = add i41 %tmp_66_0_4, %tmp_6724_0_4_cast
  %tmp_27 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_0_3, i32 14, i32 40)
  %tmp_71_0_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_27, i14 0)
  %tmp_7225_0_4_cast = mul i41 %tmp_24, %tmp_21
  %p_Val2_36_0_4 = add i41 %tmp_71_0_4, %tmp_7225_0_4_cast
  %p_x_V_5_load = load i27* @p_x_V_5, align 8
  %p_Val2_12_0_5 = sub i27 %p_x_V_0_load, %p_x_V_5_load
  %p_y_V_5_load = load i27* @p_y_V_5, align 4
  %p_Val2_15_0_5 = sub i27 %p_y_V_0_load, %p_y_V_5_load
  %p_z_V_5_load = load i27* @p_z_V_5, align 8
  %p_Val2_18_0_5 = sub i27 %p_z_V_0_load, %p_z_V_5_load
  %tmp_28 = sext i27 %p_Val2_12_0_5 to i41
  %tmp_29 = sext i27 %p_Val2_15_0_5 to i41
  %tmp_2820_0_5 = mul i41 %tmp_28, %tmp_28
  %tmp_2919_0_5 = mul i41 %tmp_29, %tmp_29
  %p_Val2_20_0_5 = add i41 %tmp_2919_0_5, %tmp_2820_0_5
  %tmp_30 = sext i27 %p_Val2_18_0_5 to i41
  %tmp_3118_0_5_cast = mul i41 %tmp_30, %tmp_30
  %p_Val2_21_0_5 = add i41 %p_Val2_20_0_5, %tmp_3118_0_5_cast
  %tmp_31 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_0_5, i32 14, i32 28)
  %x_in_V_read_assign_4 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_31, i33 0)
  %sqrtX_out_V_write_as_4 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_4) nounwind
  %tmp_616 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_0_5, i32 14, i32 40)
  %OP1_V_0_5_cast_cast = sext i27 %tmp_616 to i42
  %tmp_617 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_4, i32 10, i32 24)
  %OP2_V_3_0_5_cast_cas = zext i15 %tmp_617 to i42
  %tmp_37_0_5 = mul i42 %OP2_V_3_0_5_cast_cas, %OP1_V_0_5_cast_cast
  %tmp_38_0_5 = icmp eq i42 %tmp_37_0_5, 0
  %dp_4_0_12 = sext i42 %tmp_37_0_5 to i64
  %dp_4_0_5 = sitofp i64 %dp_4_0_12 to double
  %res_V_0_5 = bitcast double %dp_4_0_5 to i64
  %p_Result_0_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_0_5, i32 52, i32 62)
  %exp_V_5_0_5 = add i11 -28, %p_Result_0_5
  %p_Result_43_0_5 = call i64 @llvm.part.set.i64.i11(i64 %res_V_0_5, i11 %exp_V_5_0_5, i32 52, i32 62) nounwind
  %dp_0_5 = bitcast i64 %p_Result_43_0_5 to double
  %p_0_i_0_5 = select i1 %tmp_38_0_5, double 0.000000e+00, double %dp_0_5
  %tmp_39_0_5 = fdiv double -1.000000e+00, %p_0_i_0_5
  %prefact_0_5 = fmul double %tmp_39_0_5, 0x3F4E000000000000
  %ireg_V_0_5 = bitcast double %prefact_0_5 to i64
  %tmp_618 = trunc i64 %ireg_V_0_5 to i63
  %tmp_619 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_0_5, i32 63)
  %p_Result_40_0_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_0_5, i32 52, i32 62)
  %tmp_42_0_5 = zext i11 %p_Result_40_0_5 to i12
  %tmp_620 = trunc i64 %ireg_V_0_5 to i52
  %tmp_32 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_620)
  %p_Result_45_0_5 = zext i53 %tmp_32 to i54
  %man_V_1_0_5 = sub i54 0, %p_Result_45_0_5
  %man_V_2_0_5 = select i1 %tmp_619, i54 %man_V_1_0_5, i54 %p_Result_45_0_5
  %tmp_44_0_5 = icmp eq i63 %tmp_618, 0
  %F2_0_5 = sub i12 1075, %tmp_42_0_5
  %tmp_46_0_5 = icmp sgt i12 %F2_0_5, 14
  %tmp_47_0_5 = add i12 -14, %F2_0_5
  %tmp_48_0_5 = sub i12 14, %F2_0_5
  %sh_amt_0_5 = select i1 %tmp_46_0_5, i12 %tmp_47_0_5, i12 %tmp_48_0_5
  %sh_amt_0_5_cast = sext i12 %sh_amt_0_5 to i32
  %tmp_49_0_5 = icmp eq i12 %F2_0_5, 14
  %tmp_621 = trunc i54 %man_V_2_0_5 to i27
  %tmp_51_0_5 = icmp ult i12 %sh_amt_0_5, 54
  %tmp_53_0_5 = icmp ult i12 %sh_amt_0_5, 27
  %tmp_54_0_5 = zext i32 %sh_amt_0_5_cast to i54
  %tmp_55_0_5 = ashr i54 %man_V_2_0_5, %tmp_54_0_5
  %tmp_622 = trunc i54 %tmp_55_0_5 to i27
  %storemerge_0_5 = select i1 %tmp_619, i27 -1, i27 0
  %tmp_57_0_5 = sext i27 %tmp_621 to i32
  %tmp_58_0_5 = shl i32 %tmp_57_0_5, %sh_amt_0_5_cast
  %tmp_623 = trunc i32 %tmp_58_0_5 to i27
  %sel_tmp36 = xor i1 %tmp_44_0_5, true
  %sel_tmp37 = and i1 %tmp_49_0_5, %sel_tmp36
  %sel_tmp106_demorgan = or i1 %tmp_44_0_5, %tmp_49_0_5
  %sel_tmp38 = xor i1 %sel_tmp106_demorgan, true
  %sel_tmp39 = and i1 %tmp_46_0_5, %sel_tmp38
  %sel_tmp40 = xor i1 %tmp_51_0_5, true
  %sel_tmp41 = and i1 %sel_tmp39, %sel_tmp40
  %sel_tmp42 = and i1 %sel_tmp39, %tmp_51_0_5
  %sel_tmp121_demorgan = or i1 %sel_tmp106_demorgan, %tmp_46_0_5
  %sel_tmp43 = xor i1 %sel_tmp121_demorgan, true
  %sel_tmp44 = and i1 %tmp_53_0_5, %sel_tmp43
  %newSel16 = select i1 %sel_tmp44, i27 %tmp_623, i27 %tmp_622
  %or_cond12 = or i1 %sel_tmp44, %sel_tmp42
  %newSel17 = select i1 %sel_tmp41, i27 %storemerge_0_5, i27 %tmp_621
  %or_cond13 = or i1 %sel_tmp41, %sel_tmp37
  %newSel18 = select i1 %or_cond12, i27 %newSel16, i27 %newSel17
  %or_cond14 = or i1 %or_cond12, %or_cond13
  %newSel19 = select i1 %or_cond14, i27 %newSel18, i27 0
  %tmp_33 = sext i27 %newSel19 to i41
  %tmp_34 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_0_4, i32 14, i32 40)
  %tmp_61_0_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_34, i14 0)
  %tmp_6223_0_5_cast = mul i41 %tmp_33, %tmp_28
  %p_Val2_30_0_5 = add i41 %tmp_61_0_5, %tmp_6223_0_5_cast
  %tmp_35 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_0_4, i32 14, i32 40)
  %tmp_66_0_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_35, i14 0)
  %tmp_6724_0_5_cast = mul i41 %tmp_33, %tmp_29
  %p_Val2_33_0_5 = add i41 %tmp_66_0_5, %tmp_6724_0_5_cast
  %tmp_36 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_0_4, i32 14, i32 40)
  %tmp_71_0_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_36, i14 0)
  %tmp_7225_0_5_cast = mul i41 %tmp_33, %tmp_30
  %p_Val2_36_0_5 = add i41 %tmp_71_0_5, %tmp_7225_0_5_cast
  %p_x_V_6_load = load i27* @p_x_V_6, align 8
  %p_Val2_12_0_6 = sub i27 %p_x_V_0_load, %p_x_V_6_load
  %p_y_V_6_load = load i27* @p_y_V_6, align 8
  %p_Val2_15_0_6 = sub i27 %p_y_V_0_load, %p_y_V_6_load
  %p_z_V_6_load = load i27* @p_z_V_6, align 8
  %p_Val2_18_0_6 = sub i27 %p_z_V_0_load, %p_z_V_6_load
  %tmp_37 = sext i27 %p_Val2_12_0_6 to i41
  %tmp_38 = sext i27 %p_Val2_15_0_6 to i41
  %tmp_2820_0_6 = mul i41 %tmp_37, %tmp_37
  %tmp_2919_0_6 = mul i41 %tmp_38, %tmp_38
  %p_Val2_20_0_6 = add i41 %tmp_2919_0_6, %tmp_2820_0_6
  %tmp_39 = sext i27 %p_Val2_18_0_6 to i41
  %tmp_3118_0_6_cast = mul i41 %tmp_39, %tmp_39
  %p_Val2_21_0_6 = add i41 %p_Val2_20_0_6, %tmp_3118_0_6_cast
  %tmp_40 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_0_6, i32 14, i32 28)
  %x_in_V_read_assign_5 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_40, i33 0)
  %sqrtX_out_V_write_as_5 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_5) nounwind
  %tmp_624 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_0_6, i32 14, i32 40)
  %OP1_V_0_6_cast_cast = sext i27 %tmp_624 to i42
  %tmp_625 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_5, i32 10, i32 24)
  %OP2_V_3_0_6_cast_cas = zext i15 %tmp_625 to i42
  %tmp_37_0_6 = mul i42 %OP2_V_3_0_6_cast_cas, %OP1_V_0_6_cast_cast
  %tmp_38_0_6 = icmp eq i42 %tmp_37_0_6, 0
  %dp_4_0_13 = sext i42 %tmp_37_0_6 to i64
  %dp_4_0_6 = sitofp i64 %dp_4_0_13 to double
  %res_V_0_6 = bitcast double %dp_4_0_6 to i64
  %p_Result_0_6 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_0_6, i32 52, i32 62)
  %exp_V_5_0_6 = add i11 -28, %p_Result_0_6
  %p_Result_43_0_6 = call i64 @llvm.part.set.i64.i11(i64 %res_V_0_6, i11 %exp_V_5_0_6, i32 52, i32 62) nounwind
  %dp_0_6 = bitcast i64 %p_Result_43_0_6 to double
  %p_0_i_0_6 = select i1 %tmp_38_0_6, double 0.000000e+00, double %dp_0_6
  %tmp_39_0_6 = fdiv double -1.000000e+00, %p_0_i_0_6
  %prefact_0_6 = fmul double %tmp_39_0_6, 0x3F30000000000000
  %ireg_V_0_6 = bitcast double %prefact_0_6 to i64
  %tmp_626 = trunc i64 %ireg_V_0_6 to i63
  %tmp_627 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_0_6, i32 63)
  %p_Result_40_0_6 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_0_6, i32 52, i32 62)
  %tmp_42_0_6 = zext i11 %p_Result_40_0_6 to i12
  %tmp_628 = trunc i64 %ireg_V_0_6 to i52
  %tmp_41 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_628)
  %p_Result_45_0_6 = zext i53 %tmp_41 to i54
  %man_V_1_0_6 = sub i54 0, %p_Result_45_0_6
  %man_V_2_0_6 = select i1 %tmp_627, i54 %man_V_1_0_6, i54 %p_Result_45_0_6
  %tmp_44_0_6 = icmp eq i63 %tmp_626, 0
  %F2_0_6 = sub i12 1075, %tmp_42_0_6
  %tmp_46_0_6 = icmp sgt i12 %F2_0_6, 14
  %tmp_47_0_6 = add i12 -14, %F2_0_6
  %tmp_48_0_6 = sub i12 14, %F2_0_6
  %sh_amt_0_6 = select i1 %tmp_46_0_6, i12 %tmp_47_0_6, i12 %tmp_48_0_6
  %sh_amt_0_6_cast = sext i12 %sh_amt_0_6 to i32
  %tmp_49_0_6 = icmp eq i12 %F2_0_6, 14
  %tmp_629 = trunc i54 %man_V_2_0_6 to i27
  %tmp_51_0_6 = icmp ult i12 %sh_amt_0_6, 54
  %tmp_53_0_6 = icmp ult i12 %sh_amt_0_6, 27
  %tmp_54_0_6 = zext i32 %sh_amt_0_6_cast to i54
  %tmp_55_0_6 = ashr i54 %man_V_2_0_6, %tmp_54_0_6
  %tmp_630 = trunc i54 %tmp_55_0_6 to i27
  %storemerge_0_6 = select i1 %tmp_627, i27 -1, i27 0
  %tmp_57_0_6 = sext i27 %tmp_629 to i32
  %tmp_58_0_6 = shl i32 %tmp_57_0_6, %sh_amt_0_6_cast
  %tmp_631 = trunc i32 %tmp_58_0_6 to i27
  %sel_tmp45 = xor i1 %tmp_44_0_6, true
  %sel_tmp46 = and i1 %tmp_49_0_6, %sel_tmp45
  %sel_tmp131_demorgan = or i1 %tmp_44_0_6, %tmp_49_0_6
  %sel_tmp47 = xor i1 %sel_tmp131_demorgan, true
  %sel_tmp48 = and i1 %tmp_46_0_6, %sel_tmp47
  %sel_tmp49 = xor i1 %tmp_51_0_6, true
  %sel_tmp50 = and i1 %sel_tmp48, %sel_tmp49
  %sel_tmp51 = and i1 %sel_tmp48, %tmp_51_0_6
  %sel_tmp146_demorgan = or i1 %sel_tmp131_demorgan, %tmp_46_0_6
  %sel_tmp52 = xor i1 %sel_tmp146_demorgan, true
  %sel_tmp53 = and i1 %tmp_53_0_6, %sel_tmp52
  %newSel20 = select i1 %sel_tmp53, i27 %tmp_631, i27 %tmp_630
  %or_cond15 = or i1 %sel_tmp53, %sel_tmp51
  %newSel21 = select i1 %sel_tmp50, i27 %storemerge_0_6, i27 %tmp_629
  %or_cond16 = or i1 %sel_tmp50, %sel_tmp46
  %newSel22 = select i1 %or_cond15, i27 %newSel20, i27 %newSel21
  %or_cond17 = or i1 %or_cond15, %or_cond16
  %newSel23 = select i1 %or_cond17, i27 %newSel22, i27 0
  %tmp_42 = sext i27 %newSel23 to i41
  %tmp_43 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_0_5, i32 14, i32 40)
  %tmp_61_0_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_43, i14 0)
  %tmp_6223_0_6_cast = mul i41 %tmp_42, %tmp_37
  %p_Val2_30_0_6 = add i41 %tmp_61_0_6, %tmp_6223_0_6_cast
  %tmp_44 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_0_5, i32 14, i32 40)
  %tmp_66_0_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_44, i14 0)
  %tmp_6724_0_6_cast = mul i41 %tmp_42, %tmp_38
  %p_Val2_33_0_6 = add i41 %tmp_66_0_6, %tmp_6724_0_6_cast
  %tmp_45 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_0_5, i32 14, i32 40)
  %tmp_71_0_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_45, i14 0)
  %tmp_7225_0_6_cast = mul i41 %tmp_42, %tmp_39
  %p_Val2_36_0_6 = add i41 %tmp_71_0_6, %tmp_7225_0_6_cast
  %p_x_V_7_load = load i27* @p_x_V_7, align 8
  %p_Val2_12_0_7 = sub i27 %p_x_V_0_load, %p_x_V_7_load
  %p_y_V_7_load = load i27* @p_y_V_7, align 4
  %p_Val2_15_0_7 = sub i27 %p_y_V_0_load, %p_y_V_7_load
  %p_z_V_7_load = load i27* @p_z_V_7, align 8
  %p_Val2_18_0_7 = sub i27 %p_z_V_0_load, %p_z_V_7_load
  %tmp_46 = sext i27 %p_Val2_12_0_7 to i41
  %tmp_47 = sext i27 %p_Val2_15_0_7 to i41
  %tmp_2820_0_7 = mul i41 %tmp_46, %tmp_46
  %tmp_2919_0_7 = mul i41 %tmp_47, %tmp_47
  %p_Val2_20_0_7 = add i41 %tmp_2919_0_7, %tmp_2820_0_7
  %tmp_48 = sext i27 %p_Val2_18_0_7 to i41
  %tmp_3118_0_7_cast = mul i41 %tmp_48, %tmp_48
  %p_Val2_21_0_7 = add i41 %p_Val2_20_0_7, %tmp_3118_0_7_cast
  %tmp_49 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_0_7, i32 14, i32 28)
  %x_in_V_read_assign_6 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_49, i33 0)
  %sqrtX_out_V_write_as_6 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_6) nounwind
  %tmp_632 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_0_7, i32 14, i32 40)
  %OP1_V_0_7_cast_cast = sext i27 %tmp_632 to i42
  %tmp_633 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_6, i32 10, i32 24)
  %OP2_V_3_0_7_cast_cas = zext i15 %tmp_633 to i42
  %tmp_37_0_7 = mul i42 %OP2_V_3_0_7_cast_cas, %OP1_V_0_7_cast_cast
  %tmp_38_0_7 = icmp eq i42 %tmp_37_0_7, 0
  %dp_4_0_14 = sext i42 %tmp_37_0_7 to i64
  %dp_4_0_7 = sitofp i64 %dp_4_0_14 to double
  %res_V_0_7 = bitcast double %dp_4_0_7 to i64
  %p_Result_0_7 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_0_7, i32 52, i32 62)
  %exp_V_5_0_7 = add i11 -28, %p_Result_0_7
  %p_Result_43_0_7 = call i64 @llvm.part.set.i64.i11(i64 %res_V_0_7, i11 %exp_V_5_0_7, i32 52, i32 62) nounwind
  %dp_0_7 = bitcast i64 %p_Result_43_0_7 to double
  %p_0_i_0_7 = select i1 %tmp_38_0_7, double 0.000000e+00, double %dp_0_7
  %tmp_39_0_7 = fdiv double -1.000000e+00, %p_0_i_0_7
  %prefact_0_7 = fmul double %tmp_39_0_7, 0.000000e+00
  %ireg_V_0_7 = bitcast double %prefact_0_7 to i64
  %tmp_634 = trunc i64 %ireg_V_0_7 to i63
  %tmp_635 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_0_7, i32 63)
  %p_Result_40_0_7 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_0_7, i32 52, i32 62)
  %tmp_42_0_7 = zext i11 %p_Result_40_0_7 to i12
  %tmp_636 = trunc i64 %ireg_V_0_7 to i52
  %tmp_50 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_636)
  %p_Result_45_0_7 = zext i53 %tmp_50 to i54
  %man_V_1_0_7 = sub i54 0, %p_Result_45_0_7
  %man_V_2_0_7 = select i1 %tmp_635, i54 %man_V_1_0_7, i54 %p_Result_45_0_7
  %tmp_44_0_7 = icmp eq i63 %tmp_634, 0
  %F2_0_7 = sub i12 1075, %tmp_42_0_7
  %tmp_46_0_7 = icmp sgt i12 %F2_0_7, 14
  %tmp_47_0_7 = add i12 -14, %F2_0_7
  %tmp_48_0_7 = sub i12 14, %F2_0_7
  %sh_amt_0_7 = select i1 %tmp_46_0_7, i12 %tmp_47_0_7, i12 %tmp_48_0_7
  %sh_amt_0_7_cast = sext i12 %sh_amt_0_7 to i32
  %tmp_49_0_7 = icmp eq i12 %F2_0_7, 14
  %tmp_637 = trunc i54 %man_V_2_0_7 to i27
  %tmp_51_0_7 = icmp ult i12 %sh_amt_0_7, 54
  %tmp_53_0_7 = icmp ult i12 %sh_amt_0_7, 27
  %tmp_54_0_7 = zext i32 %sh_amt_0_7_cast to i54
  %tmp_55_0_7 = ashr i54 %man_V_2_0_7, %tmp_54_0_7
  %tmp_638 = trunc i54 %tmp_55_0_7 to i27
  %storemerge_0_7 = select i1 %tmp_635, i27 -1, i27 0
  %tmp_57_0_7 = sext i27 %tmp_637 to i32
  %tmp_58_0_7 = shl i32 %tmp_57_0_7, %sh_amt_0_7_cast
  %tmp_639 = trunc i32 %tmp_58_0_7 to i27
  %sel_tmp54 = xor i1 %tmp_44_0_7, true
  %sel_tmp55 = and i1 %tmp_49_0_7, %sel_tmp54
  %sel_tmp156_demorgan = or i1 %tmp_44_0_7, %tmp_49_0_7
  %sel_tmp56 = xor i1 %sel_tmp156_demorgan, true
  %sel_tmp57 = and i1 %tmp_46_0_7, %sel_tmp56
  %sel_tmp58 = xor i1 %tmp_51_0_7, true
  %sel_tmp59 = and i1 %sel_tmp57, %sel_tmp58
  %sel_tmp60 = and i1 %sel_tmp57, %tmp_51_0_7
  %sel_tmp171_demorgan = or i1 %sel_tmp156_demorgan, %tmp_46_0_7
  %sel_tmp61 = xor i1 %sel_tmp171_demorgan, true
  %sel_tmp62 = and i1 %tmp_53_0_7, %sel_tmp61
  %newSel24 = select i1 %sel_tmp62, i27 %tmp_639, i27 %tmp_638
  %or_cond18 = or i1 %sel_tmp62, %sel_tmp60
  %newSel25 = select i1 %sel_tmp59, i27 %storemerge_0_7, i27 %tmp_637
  %or_cond19 = or i1 %sel_tmp59, %sel_tmp55
  %newSel26 = select i1 %or_cond18, i27 %newSel24, i27 %newSel25
  %or_cond20 = or i1 %or_cond18, %or_cond19
  %newSel27 = select i1 %or_cond20, i27 %newSel26, i27 0
  %tmp_51 = sext i27 %newSel27 to i41
  %tmp_52 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_0_6, i32 14, i32 40)
  %tmp_61_0_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_52, i14 0)
  %tmp_6223_0_7_cast = mul i41 %tmp_51, %tmp_46
  %p_Val2_30_0_7 = add i41 %tmp_61_0_7, %tmp_6223_0_7_cast
  %tmp_53 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_0_6, i32 14, i32 40)
  %tmp_66_0_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_53, i14 0)
  %tmp_6724_0_7_cast = mul i41 %tmp_51, %tmp_47
  %p_Val2_33_0_7 = add i41 %tmp_66_0_7, %tmp_6724_0_7_cast
  %tmp_54 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_0_6, i32 14, i32 40)
  %tmp_71_0_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_54, i14 0)
  %tmp_7225_0_7_cast = mul i41 %tmp_51, %tmp_48
  %p_Val2_36_0_7 = add i41 %tmp_71_0_7, %tmp_7225_0_7_cast
  %p_x_V_8_load = load i27* @p_x_V_8, align 16
  %p_Val2_12_0_8 = sub i27 %p_x_V_0_load, %p_x_V_8_load
  %p_y_V_8_load = load i27* @p_y_V_8, align 16
  %p_Val2_15_0_8 = sub i27 %p_y_V_0_load, %p_y_V_8_load
  %p_z_V_8_load = load i27* @p_z_V_8, align 16
  %p_Val2_18_0_8 = sub i27 %p_z_V_0_load, %p_z_V_8_load
  %tmp_55 = sext i27 %p_Val2_12_0_8 to i41
  %tmp_56 = sext i27 %p_Val2_15_0_8 to i41
  %tmp_2820_0_8 = mul i41 %tmp_55, %tmp_55
  %tmp_2919_0_8 = mul i41 %tmp_56, %tmp_56
  %p_Val2_20_0_8 = add i41 %tmp_2919_0_8, %tmp_2820_0_8
  %tmp_57 = sext i27 %p_Val2_18_0_8 to i41
  %tmp_3118_0_8_cast = mul i41 %tmp_57, %tmp_57
  %p_Val2_21_0_8 = add i41 %p_Val2_20_0_8, %tmp_3118_0_8_cast
  %tmp_58 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_0_8, i32 14, i32 28)
  %x_in_V_read_assign_7 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_58, i33 0)
  %sqrtX_out_V_write_as_7 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_7) nounwind
  %tmp_640 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_0_8, i32 14, i32 40)
  %OP1_V_0_8_cast_cast = sext i27 %tmp_640 to i42
  %tmp_641 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_7, i32 10, i32 24)
  %OP2_V_3_0_8_cast_cas = zext i15 %tmp_641 to i42
  %tmp_37_0_8 = mul i42 %OP2_V_3_0_8_cast_cas, %OP1_V_0_8_cast_cast
  %tmp_38_0_8 = icmp eq i42 %tmp_37_0_8, 0
  %dp_4_0_15 = sext i42 %tmp_37_0_8 to i64
  %dp_4_0_8 = sitofp i64 %dp_4_0_15 to double
  %res_V_0_8 = bitcast double %dp_4_0_8 to i64
  %p_Result_0_8 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_0_8, i32 52, i32 62)
  %exp_V_5_0_8 = add i11 -28, %p_Result_0_8
  %p_Result_43_0_8 = call i64 @llvm.part.set.i64.i11(i64 %res_V_0_8, i11 %exp_V_5_0_8, i32 52, i32 62) nounwind
  %dp_0_8 = bitcast i64 %p_Result_43_0_8 to double
  %p_0_i_0_8 = select i1 %tmp_38_0_8, double 0.000000e+00, double %dp_0_8
  %tmp_39_0_8 = fdiv double -1.000000e+00, %p_0_i_0_8
  %prefact_0_8 = fmul double %tmp_39_0_8, 0.000000e+00
  %ireg_V_0_8 = bitcast double %prefact_0_8 to i64
  %tmp_642 = trunc i64 %ireg_V_0_8 to i63
  %tmp_643 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_0_8, i32 63)
  %p_Result_40_0_8 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_0_8, i32 52, i32 62)
  %tmp_42_0_8 = zext i11 %p_Result_40_0_8 to i12
  %tmp_644 = trunc i64 %ireg_V_0_8 to i52
  %tmp_59 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_644)
  %p_Result_45_0_8 = zext i53 %tmp_59 to i54
  %man_V_1_0_8 = sub i54 0, %p_Result_45_0_8
  %man_V_2_0_8 = select i1 %tmp_643, i54 %man_V_1_0_8, i54 %p_Result_45_0_8
  %tmp_44_0_8 = icmp eq i63 %tmp_642, 0
  %F2_0_8 = sub i12 1075, %tmp_42_0_8
  %tmp_46_0_8 = icmp sgt i12 %F2_0_8, 14
  %tmp_47_0_8 = add i12 -14, %F2_0_8
  %tmp_48_0_8 = sub i12 14, %F2_0_8
  %sh_amt_0_8 = select i1 %tmp_46_0_8, i12 %tmp_47_0_8, i12 %tmp_48_0_8
  %sh_amt_0_8_cast = sext i12 %sh_amt_0_8 to i32
  %tmp_49_0_8 = icmp eq i12 %F2_0_8, 14
  %tmp_645 = trunc i54 %man_V_2_0_8 to i27
  %tmp_51_0_8 = icmp ult i12 %sh_amt_0_8, 54
  %tmp_53_0_8 = icmp ult i12 %sh_amt_0_8, 27
  %tmp_54_0_8 = zext i32 %sh_amt_0_8_cast to i54
  %tmp_55_0_8 = ashr i54 %man_V_2_0_8, %tmp_54_0_8
  %tmp_646 = trunc i54 %tmp_55_0_8 to i27
  %storemerge_0_8 = select i1 %tmp_643, i27 -1, i27 0
  %tmp_57_0_8 = sext i27 %tmp_645 to i32
  %tmp_58_0_8 = shl i32 %tmp_57_0_8, %sh_amt_0_8_cast
  %tmp_647 = trunc i32 %tmp_58_0_8 to i27
  %sel_tmp63 = xor i1 %tmp_44_0_8, true
  %sel_tmp64 = and i1 %tmp_49_0_8, %sel_tmp63
  %sel_tmp181_demorgan = or i1 %tmp_44_0_8, %tmp_49_0_8
  %sel_tmp65 = xor i1 %sel_tmp181_demorgan, true
  %sel_tmp66 = and i1 %tmp_46_0_8, %sel_tmp65
  %sel_tmp67 = xor i1 %tmp_51_0_8, true
  %sel_tmp68 = and i1 %sel_tmp66, %sel_tmp67
  %sel_tmp69 = and i1 %sel_tmp66, %tmp_51_0_8
  %sel_tmp196_demorgan = or i1 %sel_tmp181_demorgan, %tmp_46_0_8
  %sel_tmp70 = xor i1 %sel_tmp196_demorgan, true
  %sel_tmp71 = and i1 %tmp_53_0_8, %sel_tmp70
  %newSel28 = select i1 %sel_tmp71, i27 %tmp_647, i27 %tmp_646
  %or_cond21 = or i1 %sel_tmp71, %sel_tmp69
  %newSel29 = select i1 %sel_tmp68, i27 %storemerge_0_8, i27 %tmp_645
  %or_cond22 = or i1 %sel_tmp68, %sel_tmp64
  %newSel30 = select i1 %or_cond21, i27 %newSel28, i27 %newSel29
  %or_cond23 = or i1 %or_cond21, %or_cond22
  %newSel31 = select i1 %or_cond23, i27 %newSel30, i27 0
  %tmp_60 = sext i27 %newSel31 to i41
  %tmp_61 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_0_7, i32 14, i32 40)
  %tmp_61_0_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_61, i14 0)
  %tmp_6223_0_8_cast = mul i41 %tmp_60, %tmp_55
  %p_Val2_30_0_8 = add i41 %tmp_61_0_8, %tmp_6223_0_8_cast
  %tmp_64_0_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_0_8, i32 14, i32 40)
  store i27 %tmp_64_0_8, i27* @p_ax_V_0, align 16
  %tmp_62 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_0_7, i32 14, i32 40)
  %tmp_66_0_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_62, i14 0)
  %tmp_6724_0_8_cast = mul i41 %tmp_60, %tmp_56
  %p_Val2_33_0_8 = add i41 %tmp_66_0_8, %tmp_6724_0_8_cast
  %tmp_69_0_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_0_8, i32 14, i32 40)
  store i27 %tmp_69_0_8, i27* @p_ay_V_0, align 16
  %tmp_63 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_0_7, i32 14, i32 40)
  %tmp_71_0_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_63, i14 0)
  %tmp_7225_0_8_cast = mul i41 %tmp_60, %tmp_57
  %p_Val2_36_0_8 = add i41 %tmp_71_0_8, %tmp_7225_0_8_cast
  %tmp_74_0_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_0_8, i32 14, i32 40)
  store i27 %tmp_74_0_8, i27* @p_az_V_0, align 16
  %p_Val2_12_1 = sub i27 %p_x_V_1_load, %p_x_V_0_load
  %p_Val2_15_1 = sub i27 %p_y_V_1_load, %p_y_V_0_load
  %p_Val2_18_1 = sub i27 %p_z_V_1_load, %p_z_V_0_load
  %OP1_V_5_1_cast = sext i27 %p_Val2_12_1 to i41
  %OP1_V_6_1_cast = sext i27 %p_Val2_15_1 to i41
  %tmp_2820_1 = mul i41 %OP1_V_5_1_cast, %OP1_V_5_1_cast
  %tmp_2919_1 = mul i41 %OP1_V_6_1_cast, %OP1_V_6_1_cast
  %p_Val2_20_1 = add i41 %tmp_2919_1, %tmp_2820_1
  %OP1_V_7_1_cast = sext i27 %p_Val2_18_1 to i41
  %tmp_3118_1_cast = mul i41 %OP1_V_7_1_cast, %OP1_V_7_1_cast
  %p_Val2_21_1 = add i41 %p_Val2_20_1, %tmp_3118_1_cast
  %tmp_64 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_1, i32 14, i32 28)
  %x_in_V_read_assign_8 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_64, i33 0)
  %sqrtX_out_V_write_as_8 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_8) nounwind
  %tmp_648 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_1, i32 14, i32 40)
  %OP1_V_cast_cast = sext i27 %tmp_648 to i42
  %tmp_649 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_8, i32 10, i32 24)
  %OP2_V_3_1_cast_cast = zext i15 %tmp_649 to i42
  %tmp_37_1 = mul i42 %OP2_V_3_1_cast_cast, %OP1_V_cast_cast
  %tmp_38_1 = icmp eq i42 %tmp_37_1, 0
  %dp_4_s = sext i42 %tmp_37_1 to i64
  %dp_4_1 = sitofp i64 %dp_4_s to double
  %res_V_s = bitcast double %dp_4_1 to i64
  %p_Result_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_s, i32 52, i32 62)
  %exp_V_5_1 = add i11 -28, %p_Result_1
  %p_Result_43_1 = call i64 @llvm.part.set.i64.i11(i64 %res_V_s, i11 %exp_V_5_1, i32 52, i32 62) nounwind
  %dp_1 = bitcast i64 %p_Result_43_1 to double
  %p_0_i_1 = select i1 %tmp_38_1, double 0.000000e+00, double %dp_1
  %tmp_39_1 = fdiv double -1.000000e+00, %p_0_i_1
  %ireg_V_1 = bitcast double %tmp_39_1 to i64
  %tmp_650 = trunc i64 %ireg_V_1 to i63
  %tmp_651 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_1, i32 63)
  %p_Result_40_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_1, i32 52, i32 62)
  %tmp_42_1 = zext i11 %p_Result_40_1 to i12
  %tmp_652 = trunc i64 %ireg_V_1 to i52
  %tmp_65 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_652)
  %p_Result_45_1 = zext i53 %tmp_65 to i54
  %man_V_1_1 = sub i54 0, %p_Result_45_1
  %man_V_2_1 = select i1 %tmp_651, i54 %man_V_1_1, i54 %p_Result_45_1
  %tmp_44_1 = icmp eq i63 %tmp_650, 0
  %F2_1 = sub i12 1075, %tmp_42_1
  %tmp_46_1 = icmp sgt i12 %F2_1, 14
  %tmp_47_1 = add i12 -14, %F2_1
  %tmp_48_1 = sub i12 14, %F2_1
  %sh_amt_1 = select i1 %tmp_46_1, i12 %tmp_47_1, i12 %tmp_48_1
  %sh_amt_1_cast = sext i12 %sh_amt_1 to i32
  %tmp_49_1 = icmp eq i12 %F2_1, 14
  %tmp_653 = trunc i54 %man_V_2_1 to i27
  %tmp_51_1 = icmp ult i12 %sh_amt_1, 54
  %tmp_53_1 = icmp ult i12 %sh_amt_1, 27
  %tmp_54_1 = zext i32 %sh_amt_1_cast to i54
  %tmp_55_1 = ashr i54 %man_V_2_1, %tmp_54_1
  %tmp_654 = trunc i54 %tmp_55_1 to i27
  %storemerge_1 = select i1 %tmp_651, i27 -1, i27 0
  %tmp_57_1 = sext i27 %tmp_653 to i32
  %tmp_58_1 = shl i32 %tmp_57_1, %sh_amt_1_cast
  %tmp_655 = trunc i32 %tmp_58_1 to i27
  %sel_tmp72 = xor i1 %tmp_44_1, true
  %sel_tmp73 = and i1 %tmp_49_1, %sel_tmp72
  %sel_tmp206_demorgan = or i1 %tmp_44_1, %tmp_49_1
  %sel_tmp74 = xor i1 %sel_tmp206_demorgan, true
  %sel_tmp75 = and i1 %tmp_46_1, %sel_tmp74
  %sel_tmp76 = xor i1 %tmp_51_1, true
  %sel_tmp77 = and i1 %sel_tmp75, %sel_tmp76
  %sel_tmp78 = and i1 %sel_tmp75, %tmp_51_1
  %sel_tmp221_demorgan = or i1 %sel_tmp206_demorgan, %tmp_46_1
  %sel_tmp79 = xor i1 %sel_tmp221_demorgan, true
  %sel_tmp80 = and i1 %tmp_53_1, %sel_tmp79
  %newSel32 = select i1 %sel_tmp80, i27 %tmp_655, i27 %tmp_654
  %or_cond24 = or i1 %sel_tmp80, %sel_tmp78
  %newSel33 = select i1 %sel_tmp77, i27 %storemerge_1, i27 %tmp_653
  %or_cond25 = or i1 %sel_tmp77, %sel_tmp73
  %newSel34 = select i1 %or_cond24, i27 %newSel32, i27 %newSel33
  %or_cond26 = or i1 %or_cond24, %or_cond25
  %newSel35 = select i1 %or_cond26, i27 %newSel34, i27 0
  %OP1_V_1_1_cast = sext i27 %newSel35 to i41
  %p_Val2_29_1 = mul i41 %OP1_V_1_1_cast, %OP1_V_5_1_cast
  %p_Val2_32_1 = mul i41 %OP1_V_1_1_cast, %OP1_V_6_1_cast
  %p_Val2_35_1 = mul i41 %OP1_V_1_1_cast, %OP1_V_7_1_cast
  %p_Val2_12_1_2 = sub i27 %p_x_V_1_load, %p_x_V_2_load
  %p_Val2_15_1_2 = sub i27 %p_y_V_1_load, %p_y_V_2_load
  %p_Val2_18_1_2 = sub i27 %p_z_V_1_load, %p_z_V_2_load
  %tmp_66 = sext i27 %p_Val2_12_1_2 to i41
  %tmp_67 = sext i27 %p_Val2_15_1_2 to i41
  %tmp_2820_1_2 = mul i41 %tmp_66, %tmp_66
  %tmp_2919_1_2 = mul i41 %tmp_67, %tmp_67
  %p_Val2_20_1_2 = add i41 %tmp_2919_1_2, %tmp_2820_1_2
  %tmp_68 = sext i27 %p_Val2_18_1_2 to i41
  %tmp_3118_1_2_cast = mul i41 %tmp_68, %tmp_68
  %p_Val2_21_1_2 = add i41 %p_Val2_20_1_2, %tmp_3118_1_2_cast
  %tmp_69 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_1_2, i32 14, i32 28)
  %x_in_V_read_assign_9 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_69, i33 0)
  %sqrtX_out_V_write_as_9 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_9) nounwind
  %tmp_656 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_1_2, i32 14, i32 40)
  %OP1_V_130_2_cast_cas = sext i27 %tmp_656 to i42
  %tmp_657 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_9, i32 10, i32 24)
  %OP2_V_3_1_2_cast_cas = zext i15 %tmp_657 to i42
  %tmp_37_1_2 = mul i42 %OP2_V_3_1_2_cast_cas, %OP1_V_130_2_cast_cas
  %tmp_38_1_2 = icmp eq i42 %tmp_37_1_2, 0
  %dp_4_1_s = sext i42 %tmp_37_1_2 to i64
  %dp_4_1_2 = sitofp i64 %dp_4_1_s to double
  %res_V_131_2 = bitcast double %dp_4_1_2 to i64
  %p_Result_1_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_131_2, i32 52, i32 62)
  %exp_V_5_1_2 = add i11 -28, %p_Result_1_2
  %p_Result_43_1_2 = call i64 @llvm.part.set.i64.i11(i64 %res_V_131_2, i11 %exp_V_5_1_2, i32 52, i32 62) nounwind
  %dp_1_2 = bitcast i64 %p_Result_43_1_2 to double
  %p_0_i_1_2 = select i1 %tmp_38_1_2, double 0.000000e+00, double %dp_1_2
  %tmp_39_1_2 = fdiv double -1.000000e+00, %p_0_i_1_2
  %prefact_1_2 = fmul double %tmp_39_1_2, 0.000000e+00
  %ireg_V_1_2 = bitcast double %prefact_1_2 to i64
  %tmp_658 = trunc i64 %ireg_V_1_2 to i63
  %tmp_659 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_1_2, i32 63)
  %p_Result_40_1_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_1_2, i32 52, i32 62)
  %tmp_42_1_2 = zext i11 %p_Result_40_1_2 to i12
  %tmp_660 = trunc i64 %ireg_V_1_2 to i52
  %tmp_70 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_660)
  %p_Result_45_1_2 = zext i53 %tmp_70 to i54
  %man_V_1_1_2 = sub i54 0, %p_Result_45_1_2
  %man_V_2_1_2 = select i1 %tmp_659, i54 %man_V_1_1_2, i54 %p_Result_45_1_2
  %tmp_44_1_2 = icmp eq i63 %tmp_658, 0
  %F2_1_2 = sub i12 1075, %tmp_42_1_2
  %tmp_46_1_2 = icmp sgt i12 %F2_1_2, 14
  %tmp_47_1_2 = add i12 -14, %F2_1_2
  %tmp_48_1_2 = sub i12 14, %F2_1_2
  %sh_amt_1_2 = select i1 %tmp_46_1_2, i12 %tmp_47_1_2, i12 %tmp_48_1_2
  %sh_amt_1_2_cast = sext i12 %sh_amt_1_2 to i32
  %tmp_49_1_2 = icmp eq i12 %F2_1_2, 14
  %tmp_661 = trunc i54 %man_V_2_1_2 to i27
  %tmp_51_1_2 = icmp ult i12 %sh_amt_1_2, 54
  %tmp_53_1_2 = icmp ult i12 %sh_amt_1_2, 27
  %tmp_54_1_2 = zext i32 %sh_amt_1_2_cast to i54
  %tmp_55_1_2 = ashr i54 %man_V_2_1_2, %tmp_54_1_2
  %tmp_662 = trunc i54 %tmp_55_1_2 to i27
  %storemerge_1_2 = select i1 %tmp_659, i27 -1, i27 0
  %tmp_57_1_2 = sext i27 %tmp_661 to i32
  %tmp_58_1_2 = shl i32 %tmp_57_1_2, %sh_amt_1_2_cast
  %tmp_663 = trunc i32 %tmp_58_1_2 to i27
  %sel_tmp81 = xor i1 %tmp_44_1_2, true
  %sel_tmp82 = and i1 %tmp_49_1_2, %sel_tmp81
  %sel_tmp231_demorgan = or i1 %tmp_44_1_2, %tmp_49_1_2
  %sel_tmp83 = xor i1 %sel_tmp231_demorgan, true
  %sel_tmp84 = and i1 %tmp_46_1_2, %sel_tmp83
  %sel_tmp85 = xor i1 %tmp_51_1_2, true
  %sel_tmp86 = and i1 %sel_tmp84, %sel_tmp85
  %sel_tmp87 = and i1 %sel_tmp84, %tmp_51_1_2
  %sel_tmp246_demorgan = or i1 %sel_tmp231_demorgan, %tmp_46_1_2
  %sel_tmp88 = xor i1 %sel_tmp246_demorgan, true
  %sel_tmp89 = and i1 %tmp_53_1_2, %sel_tmp88
  %newSel36 = select i1 %sel_tmp89, i27 %tmp_663, i27 %tmp_662
  %or_cond27 = or i1 %sel_tmp89, %sel_tmp87
  %newSel37 = select i1 %sel_tmp86, i27 %storemerge_1_2, i27 %tmp_661
  %or_cond28 = or i1 %sel_tmp86, %sel_tmp82
  %newSel38 = select i1 %or_cond27, i27 %newSel36, i27 %newSel37
  %or_cond29 = or i1 %or_cond27, %or_cond28
  %newSel39 = select i1 %or_cond29, i27 %newSel38, i27 0
  %tmp_71 = sext i27 %newSel39 to i41
  %tmp_72 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_29_1, i32 14, i32 40)
  %tmp_61_1_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_72, i14 0)
  %tmp_6223_1_2_cast = mul i41 %tmp_71, %tmp_66
  %p_Val2_30_1_2 = add i41 %tmp_61_1_2, %tmp_6223_1_2_cast
  %tmp_73 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_32_1, i32 14, i32 40)
  %tmp_66_1_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_73, i14 0)
  %tmp_6724_1_2_cast = mul i41 %tmp_71, %tmp_67
  %p_Val2_33_1_2 = add i41 %tmp_66_1_2, %tmp_6724_1_2_cast
  %tmp_74 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_35_1, i32 14, i32 40)
  %tmp_71_1_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_74, i14 0)
  %tmp_7225_1_2_cast = mul i41 %tmp_71, %tmp_68
  %p_Val2_36_1_2 = add i41 %tmp_71_1_2, %tmp_7225_1_2_cast
  %p_Val2_12_1_3 = sub i27 %p_x_V_1_load, %p_x_V_3_load
  %p_Val2_15_1_3 = sub i27 %p_y_V_1_load, %p_y_V_3_load
  %p_Val2_18_1_3 = sub i27 %p_z_V_1_load, %p_z_V_3_load
  %tmp_75 = sext i27 %p_Val2_12_1_3 to i41
  %tmp_76 = sext i27 %p_Val2_15_1_3 to i41
  %tmp_2820_1_3 = mul i41 %tmp_75, %tmp_75
  %tmp_2919_1_3 = mul i41 %tmp_76, %tmp_76
  %p_Val2_20_1_3 = add i41 %tmp_2919_1_3, %tmp_2820_1_3
  %tmp_77 = sext i27 %p_Val2_18_1_3 to i41
  %tmp_3118_1_3_cast = mul i41 %tmp_77, %tmp_77
  %p_Val2_21_1_3 = add i41 %p_Val2_20_1_3, %tmp_3118_1_3_cast
  %tmp_78 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_1_3, i32 14, i32 28)
  %x_in_V_read_assign_s = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_78, i33 0)
  %sqrtX_out_V_write_as_71 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_s) nounwind
  %tmp_664 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_1_3, i32 14, i32 40)
  %OP1_V_130_3_cast_cas = sext i27 %tmp_664 to i42
  %tmp_665 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_71, i32 10, i32 24)
  %OP2_V_3_1_3_cast_cas = zext i15 %tmp_665 to i42
  %tmp_37_1_3 = mul i42 %OP2_V_3_1_3_cast_cas, %OP1_V_130_3_cast_cas
  %tmp_38_1_3 = icmp eq i42 %tmp_37_1_3, 0
  %dp_4_1_1 = sext i42 %tmp_37_1_3 to i64
  %dp_4_1_3 = sitofp i64 %dp_4_1_1 to double
  %res_V_131_3 = bitcast double %dp_4_1_3 to i64
  %p_Result_1_3 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_131_3, i32 52, i32 62)
  %exp_V_5_1_3 = add i11 -28, %p_Result_1_3
  %p_Result_43_1_3 = call i64 @llvm.part.set.i64.i11(i64 %res_V_131_3, i11 %exp_V_5_1_3, i32 52, i32 62) nounwind
  %dp_1_3 = bitcast i64 %p_Result_43_1_3 to double
  %p_0_i_1_3 = select i1 %tmp_38_1_3, double 0.000000e+00, double %dp_1_3
  %tmp_39_1_3 = fdiv double -1.000000e+00, %p_0_i_1_3
  %prefact_1_3 = fmul double %tmp_39_1_3, 0.000000e+00
  %ireg_V_1_3 = bitcast double %prefact_1_3 to i64
  %tmp_666 = trunc i64 %ireg_V_1_3 to i63
  %tmp_667 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_1_3, i32 63)
  %p_Result_40_1_3 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_1_3, i32 52, i32 62)
  %tmp_42_1_3 = zext i11 %p_Result_40_1_3 to i12
  %tmp_668 = trunc i64 %ireg_V_1_3 to i52
  %tmp_79 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_668)
  %p_Result_45_1_3 = zext i53 %tmp_79 to i54
  %man_V_1_1_3 = sub i54 0, %p_Result_45_1_3
  %man_V_2_1_3 = select i1 %tmp_667, i54 %man_V_1_1_3, i54 %p_Result_45_1_3
  %tmp_44_1_3 = icmp eq i63 %tmp_666, 0
  %F2_1_3 = sub i12 1075, %tmp_42_1_3
  %tmp_46_1_3 = icmp sgt i12 %F2_1_3, 14
  %tmp_47_1_3 = add i12 -14, %F2_1_3
  %tmp_48_1_3 = sub i12 14, %F2_1_3
  %sh_amt_1_3 = select i1 %tmp_46_1_3, i12 %tmp_47_1_3, i12 %tmp_48_1_3
  %sh_amt_1_3_cast = sext i12 %sh_amt_1_3 to i32
  %tmp_49_1_3 = icmp eq i12 %F2_1_3, 14
  %tmp_669 = trunc i54 %man_V_2_1_3 to i27
  %tmp_51_1_3 = icmp ult i12 %sh_amt_1_3, 54
  %tmp_53_1_3 = icmp ult i12 %sh_amt_1_3, 27
  %tmp_54_1_3 = zext i32 %sh_amt_1_3_cast to i54
  %tmp_55_1_3 = ashr i54 %man_V_2_1_3, %tmp_54_1_3
  %tmp_670 = trunc i54 %tmp_55_1_3 to i27
  %storemerge_1_3 = select i1 %tmp_667, i27 -1, i27 0
  %tmp_57_1_3 = sext i27 %tmp_669 to i32
  %tmp_58_1_3 = shl i32 %tmp_57_1_3, %sh_amt_1_3_cast
  %tmp_671 = trunc i32 %tmp_58_1_3 to i27
  %sel_tmp90 = xor i1 %tmp_44_1_3, true
  %sel_tmp91 = and i1 %tmp_49_1_3, %sel_tmp90
  %sel_tmp256_demorgan = or i1 %tmp_44_1_3, %tmp_49_1_3
  %sel_tmp92 = xor i1 %sel_tmp256_demorgan, true
  %sel_tmp93 = and i1 %tmp_46_1_3, %sel_tmp92
  %sel_tmp94 = xor i1 %tmp_51_1_3, true
  %sel_tmp95 = and i1 %sel_tmp93, %sel_tmp94
  %sel_tmp96 = and i1 %sel_tmp93, %tmp_51_1_3
  %sel_tmp271_demorgan = or i1 %sel_tmp256_demorgan, %tmp_46_1_3
  %sel_tmp97 = xor i1 %sel_tmp271_demorgan, true
  %sel_tmp98 = and i1 %tmp_53_1_3, %sel_tmp97
  %newSel40 = select i1 %sel_tmp98, i27 %tmp_671, i27 %tmp_670
  %or_cond30 = or i1 %sel_tmp98, %sel_tmp96
  %newSel41 = select i1 %sel_tmp95, i27 %storemerge_1_3, i27 %tmp_669
  %or_cond31 = or i1 %sel_tmp95, %sel_tmp91
  %newSel42 = select i1 %or_cond30, i27 %newSel40, i27 %newSel41
  %or_cond32 = or i1 %or_cond30, %or_cond31
  %newSel43 = select i1 %or_cond32, i27 %newSel42, i27 0
  %tmp_80 = sext i27 %newSel43 to i41
  %tmp_81 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_1_2, i32 14, i32 40)
  %tmp_61_1_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_81, i14 0)
  %tmp_6223_1_3_cast = mul i41 %tmp_80, %tmp_75
  %p_Val2_30_1_3 = add i41 %tmp_61_1_3, %tmp_6223_1_3_cast
  %tmp_82 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_1_2, i32 14, i32 40)
  %tmp_66_1_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_82, i14 0)
  %tmp_6724_1_3_cast = mul i41 %tmp_80, %tmp_76
  %p_Val2_33_1_3 = add i41 %tmp_66_1_3, %tmp_6724_1_3_cast
  %tmp_83 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_1_2, i32 14, i32 40)
  %tmp_71_1_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_83, i14 0)
  %tmp_7225_1_3_cast = mul i41 %tmp_80, %tmp_77
  %p_Val2_36_1_3 = add i41 %tmp_71_1_3, %tmp_7225_1_3_cast
  %p_Val2_12_1_4 = sub i27 %p_x_V_1_load, %p_x_V_4_load
  %p_Val2_15_1_4 = sub i27 %p_y_V_1_load, %p_y_V_4_load
  %p_Val2_18_1_4 = sub i27 %p_z_V_1_load, %p_z_V_4_load
  %tmp_84 = sext i27 %p_Val2_12_1_4 to i41
  %tmp_85 = sext i27 %p_Val2_15_1_4 to i41
  %tmp_2820_1_4 = mul i41 %tmp_84, %tmp_84
  %tmp_2919_1_4 = mul i41 %tmp_85, %tmp_85
  %p_Val2_20_1_4 = add i41 %tmp_2919_1_4, %tmp_2820_1_4
  %tmp_86 = sext i27 %p_Val2_18_1_4 to i41
  %tmp_3118_1_4_cast = mul i41 %tmp_86, %tmp_86
  %p_Val2_21_1_4 = add i41 %p_Val2_20_1_4, %tmp_3118_1_4_cast
  %tmp_87 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_1_4, i32 14, i32 28)
  %x_in_V_read_assign_10 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_87, i33 0)
  %sqrtX_out_V_write_as_10 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_10) nounwind
  %tmp_672 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_1_4, i32 14, i32 40)
  %OP1_V_130_4_cast_cas = sext i27 %tmp_672 to i42
  %tmp_673 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_10, i32 10, i32 24)
  %OP2_V_3_1_4_cast_cas = zext i15 %tmp_673 to i42
  %tmp_37_1_4 = mul i42 %OP2_V_3_1_4_cast_cas, %OP1_V_130_4_cast_cas
  %tmp_38_1_4 = icmp eq i42 %tmp_37_1_4, 0
  %dp_4_1_9 = sext i42 %tmp_37_1_4 to i64
  %dp_4_1_4 = sitofp i64 %dp_4_1_9 to double
  %res_V_131_4 = bitcast double %dp_4_1_4 to i64
  %p_Result_1_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_131_4, i32 52, i32 62)
  %exp_V_5_1_4 = add i11 -28, %p_Result_1_4
  %p_Result_43_1_4 = call i64 @llvm.part.set.i64.i11(i64 %res_V_131_4, i11 %exp_V_5_1_4, i32 52, i32 62) nounwind
  %dp_1_4 = bitcast i64 %p_Result_43_1_4 to double
  %p_0_i_1_4 = select i1 %tmp_38_1_4, double 0.000000e+00, double %dp_1_4
  %tmp_39_1_4 = fdiv double -1.000000e+00, %p_0_i_1_4
  %prefact_1_4 = fmul double %tmp_39_1_4, 0.000000e+00
  %ireg_V_1_4 = bitcast double %prefact_1_4 to i64
  %tmp_674 = trunc i64 %ireg_V_1_4 to i63
  %tmp_675 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_1_4, i32 63)
  %p_Result_40_1_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_1_4, i32 52, i32 62)
  %tmp_42_1_4 = zext i11 %p_Result_40_1_4 to i12
  %tmp_676 = trunc i64 %ireg_V_1_4 to i52
  %tmp_88 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_676)
  %p_Result_45_1_4 = zext i53 %tmp_88 to i54
  %man_V_1_1_4 = sub i54 0, %p_Result_45_1_4
  %man_V_2_1_4 = select i1 %tmp_675, i54 %man_V_1_1_4, i54 %p_Result_45_1_4
  %tmp_44_1_4 = icmp eq i63 %tmp_674, 0
  %F2_1_4 = sub i12 1075, %tmp_42_1_4
  %tmp_46_1_4 = icmp sgt i12 %F2_1_4, 14
  %tmp_47_1_4 = add i12 -14, %F2_1_4
  %tmp_48_1_4 = sub i12 14, %F2_1_4
  %sh_amt_1_4 = select i1 %tmp_46_1_4, i12 %tmp_47_1_4, i12 %tmp_48_1_4
  %sh_amt_1_4_cast = sext i12 %sh_amt_1_4 to i32
  %tmp_49_1_4 = icmp eq i12 %F2_1_4, 14
  %tmp_677 = trunc i54 %man_V_2_1_4 to i27
  %tmp_51_1_4 = icmp ult i12 %sh_amt_1_4, 54
  %tmp_53_1_4 = icmp ult i12 %sh_amt_1_4, 27
  %tmp_54_1_4 = zext i32 %sh_amt_1_4_cast to i54
  %tmp_55_1_4 = ashr i54 %man_V_2_1_4, %tmp_54_1_4
  %tmp_678 = trunc i54 %tmp_55_1_4 to i27
  %storemerge_1_4 = select i1 %tmp_675, i27 -1, i27 0
  %tmp_57_1_4 = sext i27 %tmp_677 to i32
  %tmp_58_1_4 = shl i32 %tmp_57_1_4, %sh_amt_1_4_cast
  %tmp_679 = trunc i32 %tmp_58_1_4 to i27
  %sel_tmp99 = xor i1 %tmp_44_1_4, true
  %sel_tmp100 = and i1 %tmp_49_1_4, %sel_tmp99
  %sel_tmp281_demorgan = or i1 %tmp_44_1_4, %tmp_49_1_4
  %sel_tmp101 = xor i1 %sel_tmp281_demorgan, true
  %sel_tmp102 = and i1 %tmp_46_1_4, %sel_tmp101
  %sel_tmp103 = xor i1 %tmp_51_1_4, true
  %sel_tmp104 = and i1 %sel_tmp102, %sel_tmp103
  %sel_tmp105 = and i1 %sel_tmp102, %tmp_51_1_4
  %sel_tmp296_demorgan = or i1 %sel_tmp281_demorgan, %tmp_46_1_4
  %sel_tmp106 = xor i1 %sel_tmp296_demorgan, true
  %sel_tmp107 = and i1 %tmp_53_1_4, %sel_tmp106
  %newSel44 = select i1 %sel_tmp107, i27 %tmp_679, i27 %tmp_678
  %or_cond33 = or i1 %sel_tmp107, %sel_tmp105
  %newSel45 = select i1 %sel_tmp104, i27 %storemerge_1_4, i27 %tmp_677
  %or_cond34 = or i1 %sel_tmp104, %sel_tmp100
  %newSel46 = select i1 %or_cond33, i27 %newSel44, i27 %newSel45
  %or_cond35 = or i1 %or_cond33, %or_cond34
  %newSel47 = select i1 %or_cond35, i27 %newSel46, i27 0
  %tmp_89 = sext i27 %newSel47 to i41
  %tmp_90 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_1_3, i32 14, i32 40)
  %tmp_61_1_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_90, i14 0)
  %tmp_6223_1_4_cast = mul i41 %tmp_89, %tmp_84
  %p_Val2_30_1_4 = add i41 %tmp_61_1_4, %tmp_6223_1_4_cast
  %tmp_91 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_1_3, i32 14, i32 40)
  %tmp_66_1_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_91, i14 0)
  %tmp_6724_1_4_cast = mul i41 %tmp_89, %tmp_85
  %p_Val2_33_1_4 = add i41 %tmp_66_1_4, %tmp_6724_1_4_cast
  %tmp_92 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_1_3, i32 14, i32 40)
  %tmp_71_1_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_92, i14 0)
  %tmp_7225_1_4_cast = mul i41 %tmp_89, %tmp_86
  %p_Val2_36_1_4 = add i41 %tmp_71_1_4, %tmp_7225_1_4_cast
  %p_Val2_12_1_5 = sub i27 %p_x_V_1_load, %p_x_V_5_load
  %p_Val2_15_1_5 = sub i27 %p_y_V_1_load, %p_y_V_5_load
  %p_Val2_18_1_5 = sub i27 %p_z_V_1_load, %p_z_V_5_load
  %tmp_93 = sext i27 %p_Val2_12_1_5 to i41
  %tmp_94 = sext i27 %p_Val2_15_1_5 to i41
  %tmp_2820_1_5 = mul i41 %tmp_93, %tmp_93
  %tmp_2919_1_5 = mul i41 %tmp_94, %tmp_94
  %p_Val2_20_1_5 = add i41 %tmp_2919_1_5, %tmp_2820_1_5
  %tmp_95 = sext i27 %p_Val2_18_1_5 to i41
  %tmp_3118_1_5_cast = mul i41 %tmp_95, %tmp_95
  %p_Val2_21_1_5 = add i41 %p_Val2_20_1_5, %tmp_3118_1_5_cast
  %tmp_96 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_1_5, i32 14, i32 28)
  %x_in_V_read_assign_11 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_96, i33 0)
  %sqrtX_out_V_write_as_11 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_11) nounwind
  %tmp_680 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_1_5, i32 14, i32 40)
  %OP1_V_130_5_cast_cas = sext i27 %tmp_680 to i42
  %tmp_681 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_11, i32 10, i32 24)
  %OP2_V_3_1_5_cast_cas = zext i15 %tmp_681 to i42
  %tmp_37_1_5 = mul i42 %OP2_V_3_1_5_cast_cas, %OP1_V_130_5_cast_cas
  %tmp_38_1_5 = icmp eq i42 %tmp_37_1_5, 0
  %dp_4_1_10 = sext i42 %tmp_37_1_5 to i64
  %dp_4_1_5 = sitofp i64 %dp_4_1_10 to double
  %res_V_131_5 = bitcast double %dp_4_1_5 to i64
  %p_Result_1_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_131_5, i32 52, i32 62)
  %exp_V_5_1_5 = add i11 -28, %p_Result_1_5
  %p_Result_43_1_5 = call i64 @llvm.part.set.i64.i11(i64 %res_V_131_5, i11 %exp_V_5_1_5, i32 52, i32 62) nounwind
  %dp_1_5 = bitcast i64 %p_Result_43_1_5 to double
  %p_0_i_1_5 = select i1 %tmp_38_1_5, double 0.000000e+00, double %dp_1_5
  %tmp_39_1_5 = fdiv double -1.000000e+00, %p_0_i_1_5
  %prefact_1_5 = fmul double %tmp_39_1_5, 0x3F4E000000000000
  %ireg_V_1_5 = bitcast double %prefact_1_5 to i64
  %tmp_682 = trunc i64 %ireg_V_1_5 to i63
  %tmp_683 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_1_5, i32 63)
  %p_Result_40_1_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_1_5, i32 52, i32 62)
  %tmp_42_1_5 = zext i11 %p_Result_40_1_5 to i12
  %tmp_684 = trunc i64 %ireg_V_1_5 to i52
  %tmp_97 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_684)
  %p_Result_45_1_5 = zext i53 %tmp_97 to i54
  %man_V_1_1_5 = sub i54 0, %p_Result_45_1_5
  %man_V_2_1_5 = select i1 %tmp_683, i54 %man_V_1_1_5, i54 %p_Result_45_1_5
  %tmp_44_1_5 = icmp eq i63 %tmp_682, 0
  %F2_1_5 = sub i12 1075, %tmp_42_1_5
  %tmp_46_1_5 = icmp sgt i12 %F2_1_5, 14
  %tmp_47_1_5 = add i12 -14, %F2_1_5
  %tmp_48_1_5 = sub i12 14, %F2_1_5
  %sh_amt_1_5 = select i1 %tmp_46_1_5, i12 %tmp_47_1_5, i12 %tmp_48_1_5
  %sh_amt_1_5_cast = sext i12 %sh_amt_1_5 to i32
  %tmp_49_1_5 = icmp eq i12 %F2_1_5, 14
  %tmp_685 = trunc i54 %man_V_2_1_5 to i27
  %tmp_51_1_5 = icmp ult i12 %sh_amt_1_5, 54
  %tmp_53_1_5 = icmp ult i12 %sh_amt_1_5, 27
  %tmp_54_1_5 = zext i32 %sh_amt_1_5_cast to i54
  %tmp_55_1_5 = ashr i54 %man_V_2_1_5, %tmp_54_1_5
  %tmp_686 = trunc i54 %tmp_55_1_5 to i27
  %storemerge_1_5 = select i1 %tmp_683, i27 -1, i27 0
  %tmp_57_1_5 = sext i27 %tmp_685 to i32
  %tmp_58_1_5 = shl i32 %tmp_57_1_5, %sh_amt_1_5_cast
  %tmp_687 = trunc i32 %tmp_58_1_5 to i27
  %sel_tmp108 = xor i1 %tmp_44_1_5, true
  %sel_tmp109 = and i1 %tmp_49_1_5, %sel_tmp108
  %sel_tmp306_demorgan = or i1 %tmp_44_1_5, %tmp_49_1_5
  %sel_tmp110 = xor i1 %sel_tmp306_demorgan, true
  %sel_tmp111 = and i1 %tmp_46_1_5, %sel_tmp110
  %sel_tmp112 = xor i1 %tmp_51_1_5, true
  %sel_tmp113 = and i1 %sel_tmp111, %sel_tmp112
  %sel_tmp114 = and i1 %sel_tmp111, %tmp_51_1_5
  %sel_tmp321_demorgan = or i1 %sel_tmp306_demorgan, %tmp_46_1_5
  %sel_tmp115 = xor i1 %sel_tmp321_demorgan, true
  %sel_tmp116 = and i1 %tmp_53_1_5, %sel_tmp115
  %newSel48 = select i1 %sel_tmp116, i27 %tmp_687, i27 %tmp_686
  %or_cond36 = or i1 %sel_tmp116, %sel_tmp114
  %newSel49 = select i1 %sel_tmp113, i27 %storemerge_1_5, i27 %tmp_685
  %or_cond37 = or i1 %sel_tmp113, %sel_tmp109
  %newSel50 = select i1 %or_cond36, i27 %newSel48, i27 %newSel49
  %or_cond38 = or i1 %or_cond36, %or_cond37
  %newSel51 = select i1 %or_cond38, i27 %newSel50, i27 0
  %tmp_98 = sext i27 %newSel51 to i41
  %tmp_99 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_1_4, i32 14, i32 40)
  %tmp_61_1_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_99, i14 0)
  %tmp_6223_1_5_cast = mul i41 %tmp_98, %tmp_93
  %p_Val2_30_1_5 = add i41 %tmp_61_1_5, %tmp_6223_1_5_cast
  %tmp_100 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_1_4, i32 14, i32 40)
  %tmp_66_1_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_100, i14 0)
  %tmp_6724_1_5_cast = mul i41 %tmp_98, %tmp_94
  %p_Val2_33_1_5 = add i41 %tmp_66_1_5, %tmp_6724_1_5_cast
  %tmp_101 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_1_4, i32 14, i32 40)
  %tmp_71_1_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_101, i14 0)
  %tmp_7225_1_5_cast = mul i41 %tmp_98, %tmp_95
  %p_Val2_36_1_5 = add i41 %tmp_71_1_5, %tmp_7225_1_5_cast
  %p_Val2_12_1_6 = sub i27 %p_x_V_1_load, %p_x_V_6_load
  %p_Val2_15_1_6 = sub i27 %p_y_V_1_load, %p_y_V_6_load
  %p_Val2_18_1_6 = sub i27 %p_z_V_1_load, %p_z_V_6_load
  %tmp_102 = sext i27 %p_Val2_12_1_6 to i41
  %tmp_103 = sext i27 %p_Val2_15_1_6 to i41
  %tmp_2820_1_6 = mul i41 %tmp_102, %tmp_102
  %tmp_2919_1_6 = mul i41 %tmp_103, %tmp_103
  %p_Val2_20_1_6 = add i41 %tmp_2919_1_6, %tmp_2820_1_6
  %tmp_104 = sext i27 %p_Val2_18_1_6 to i41
  %tmp_3118_1_6_cast = mul i41 %tmp_104, %tmp_104
  %p_Val2_21_1_6 = add i41 %p_Val2_20_1_6, %tmp_3118_1_6_cast
  %tmp_105 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_1_6, i32 14, i32 28)
  %x_in_V_read_assign_12 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_105, i33 0)
  %sqrtX_out_V_write_as_12 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_12) nounwind
  %tmp_688 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_1_6, i32 14, i32 40)
  %OP1_V_130_6_cast_cas = sext i27 %tmp_688 to i42
  %tmp_689 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_12, i32 10, i32 24)
  %OP2_V_3_1_6_cast_cas = zext i15 %tmp_689 to i42
  %tmp_37_1_6 = mul i42 %OP2_V_3_1_6_cast_cas, %OP1_V_130_6_cast_cas
  %tmp_38_1_6 = icmp eq i42 %tmp_37_1_6, 0
  %dp_4_1_11 = sext i42 %tmp_37_1_6 to i64
  %dp_4_1_6 = sitofp i64 %dp_4_1_11 to double
  %res_V_131_6 = bitcast double %dp_4_1_6 to i64
  %p_Result_1_6 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_131_6, i32 52, i32 62)
  %exp_V_5_1_6 = add i11 -28, %p_Result_1_6
  %p_Result_43_1_6 = call i64 @llvm.part.set.i64.i11(i64 %res_V_131_6, i11 %exp_V_5_1_6, i32 52, i32 62) nounwind
  %dp_1_6 = bitcast i64 %p_Result_43_1_6 to double
  %p_0_i_1_6 = select i1 %tmp_38_1_6, double 0.000000e+00, double %dp_1_6
  %tmp_39_1_6 = fdiv double -1.000000e+00, %p_0_i_1_6
  %prefact_1_6 = fmul double %tmp_39_1_6, 0x3F30000000000000
  %ireg_V_1_6 = bitcast double %prefact_1_6 to i64
  %tmp_690 = trunc i64 %ireg_V_1_6 to i63
  %tmp_691 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_1_6, i32 63)
  %p_Result_40_1_6 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_1_6, i32 52, i32 62)
  %tmp_42_1_6 = zext i11 %p_Result_40_1_6 to i12
  %tmp_692 = trunc i64 %ireg_V_1_6 to i52
  %tmp_106 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_692)
  %p_Result_45_1_6 = zext i53 %tmp_106 to i54
  %man_V_1_1_6 = sub i54 0, %p_Result_45_1_6
  %man_V_2_1_6 = select i1 %tmp_691, i54 %man_V_1_1_6, i54 %p_Result_45_1_6
  %tmp_44_1_6 = icmp eq i63 %tmp_690, 0
  %F2_1_6 = sub i12 1075, %tmp_42_1_6
  %tmp_46_1_6 = icmp sgt i12 %F2_1_6, 14
  %tmp_47_1_6 = add i12 -14, %F2_1_6
  %tmp_48_1_6 = sub i12 14, %F2_1_6
  %sh_amt_1_6 = select i1 %tmp_46_1_6, i12 %tmp_47_1_6, i12 %tmp_48_1_6
  %sh_amt_1_6_cast = sext i12 %sh_amt_1_6 to i32
  %tmp_49_1_6 = icmp eq i12 %F2_1_6, 14
  %tmp_693 = trunc i54 %man_V_2_1_6 to i27
  %tmp_51_1_6 = icmp ult i12 %sh_amt_1_6, 54
  %tmp_53_1_6 = icmp ult i12 %sh_amt_1_6, 27
  %tmp_54_1_6 = zext i32 %sh_amt_1_6_cast to i54
  %tmp_55_1_6 = ashr i54 %man_V_2_1_6, %tmp_54_1_6
  %tmp_694 = trunc i54 %tmp_55_1_6 to i27
  %storemerge_1_6 = select i1 %tmp_691, i27 -1, i27 0
  %tmp_57_1_6 = sext i27 %tmp_693 to i32
  %tmp_58_1_6 = shl i32 %tmp_57_1_6, %sh_amt_1_6_cast
  %tmp_695 = trunc i32 %tmp_58_1_6 to i27
  %sel_tmp117 = xor i1 %tmp_44_1_6, true
  %sel_tmp118 = and i1 %tmp_49_1_6, %sel_tmp117
  %sel_tmp331_demorgan = or i1 %tmp_44_1_6, %tmp_49_1_6
  %sel_tmp119 = xor i1 %sel_tmp331_demorgan, true
  %sel_tmp120 = and i1 %tmp_46_1_6, %sel_tmp119
  %sel_tmp121 = xor i1 %tmp_51_1_6, true
  %sel_tmp122 = and i1 %sel_tmp120, %sel_tmp121
  %sel_tmp123 = and i1 %sel_tmp120, %tmp_51_1_6
  %sel_tmp346_demorgan = or i1 %sel_tmp331_demorgan, %tmp_46_1_6
  %sel_tmp124 = xor i1 %sel_tmp346_demorgan, true
  %sel_tmp125 = and i1 %tmp_53_1_6, %sel_tmp124
  %newSel52 = select i1 %sel_tmp125, i27 %tmp_695, i27 %tmp_694
  %or_cond39 = or i1 %sel_tmp125, %sel_tmp123
  %newSel53 = select i1 %sel_tmp122, i27 %storemerge_1_6, i27 %tmp_693
  %or_cond40 = or i1 %sel_tmp122, %sel_tmp118
  %newSel54 = select i1 %or_cond39, i27 %newSel52, i27 %newSel53
  %or_cond41 = or i1 %or_cond39, %or_cond40
  %newSel55 = select i1 %or_cond41, i27 %newSel54, i27 0
  %tmp_107 = sext i27 %newSel55 to i41
  %tmp_108 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_1_5, i32 14, i32 40)
  %tmp_61_1_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_108, i14 0)
  %tmp_6223_1_6_cast = mul i41 %tmp_107, %tmp_102
  %p_Val2_30_1_6 = add i41 %tmp_61_1_6, %tmp_6223_1_6_cast
  %tmp_109 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_1_5, i32 14, i32 40)
  %tmp_66_1_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_109, i14 0)
  %tmp_6724_1_6_cast = mul i41 %tmp_107, %tmp_103
  %p_Val2_33_1_6 = add i41 %tmp_66_1_6, %tmp_6724_1_6_cast
  %tmp_110 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_1_5, i32 14, i32 40)
  %tmp_71_1_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_110, i14 0)
  %tmp_7225_1_6_cast = mul i41 %tmp_107, %tmp_104
  %p_Val2_36_1_6 = add i41 %tmp_71_1_6, %tmp_7225_1_6_cast
  %p_Val2_12_1_7 = sub i27 %p_x_V_1_load, %p_x_V_7_load
  %p_Val2_15_1_7 = sub i27 %p_y_V_1_load, %p_y_V_7_load
  %p_Val2_18_1_7 = sub i27 %p_z_V_1_load, %p_z_V_7_load
  %tmp_111 = sext i27 %p_Val2_12_1_7 to i41
  %tmp_112 = sext i27 %p_Val2_15_1_7 to i41
  %tmp_2820_1_7 = mul i41 %tmp_111, %tmp_111
  %tmp_2919_1_7 = mul i41 %tmp_112, %tmp_112
  %p_Val2_20_1_7 = add i41 %tmp_2919_1_7, %tmp_2820_1_7
  %tmp_113 = sext i27 %p_Val2_18_1_7 to i41
  %tmp_3118_1_7_cast = mul i41 %tmp_113, %tmp_113
  %p_Val2_21_1_7 = add i41 %p_Val2_20_1_7, %tmp_3118_1_7_cast
  %tmp_114 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_1_7, i32 14, i32 28)
  %x_in_V_read_assign_13 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_114, i33 0)
  %sqrtX_out_V_write_as_13 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_13) nounwind
  %tmp_696 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_1_7, i32 14, i32 40)
  %OP1_V_130_7_cast_cas = sext i27 %tmp_696 to i42
  %tmp_697 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_13, i32 10, i32 24)
  %OP2_V_3_1_7_cast_cas = zext i15 %tmp_697 to i42
  %tmp_37_1_7 = mul i42 %OP2_V_3_1_7_cast_cas, %OP1_V_130_7_cast_cas
  %tmp_38_1_7 = icmp eq i42 %tmp_37_1_7, 0
  %dp_4_1_12 = sext i42 %tmp_37_1_7 to i64
  %dp_4_1_7 = sitofp i64 %dp_4_1_12 to double
  %res_V_131_7 = bitcast double %dp_4_1_7 to i64
  %p_Result_1_7 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_131_7, i32 52, i32 62)
  %exp_V_5_1_7 = add i11 -28, %p_Result_1_7
  %p_Result_43_1_7 = call i64 @llvm.part.set.i64.i11(i64 %res_V_131_7, i11 %exp_V_5_1_7, i32 52, i32 62) nounwind
  %dp_1_7 = bitcast i64 %p_Result_43_1_7 to double
  %p_0_i_1_7 = select i1 %tmp_38_1_7, double 0.000000e+00, double %dp_1_7
  %tmp_39_1_7 = fdiv double -1.000000e+00, %p_0_i_1_7
  %prefact_1_7 = fmul double %tmp_39_1_7, 0.000000e+00
  %ireg_V_1_7 = bitcast double %prefact_1_7 to i64
  %tmp_698 = trunc i64 %ireg_V_1_7 to i63
  %tmp_699 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_1_7, i32 63)
  %p_Result_40_1_7 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_1_7, i32 52, i32 62)
  %tmp_42_1_7 = zext i11 %p_Result_40_1_7 to i12
  %tmp_700 = trunc i64 %ireg_V_1_7 to i52
  %tmp_115 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_700)
  %p_Result_45_1_7 = zext i53 %tmp_115 to i54
  %man_V_1_1_7 = sub i54 0, %p_Result_45_1_7
  %man_V_2_1_7 = select i1 %tmp_699, i54 %man_V_1_1_7, i54 %p_Result_45_1_7
  %tmp_44_1_7 = icmp eq i63 %tmp_698, 0
  %F2_1_7 = sub i12 1075, %tmp_42_1_7
  %tmp_46_1_7 = icmp sgt i12 %F2_1_7, 14
  %tmp_47_1_7 = add i12 -14, %F2_1_7
  %tmp_48_1_7 = sub i12 14, %F2_1_7
  %sh_amt_1_7 = select i1 %tmp_46_1_7, i12 %tmp_47_1_7, i12 %tmp_48_1_7
  %sh_amt_1_7_cast = sext i12 %sh_amt_1_7 to i32
  %tmp_49_1_7 = icmp eq i12 %F2_1_7, 14
  %tmp_701 = trunc i54 %man_V_2_1_7 to i27
  %tmp_51_1_7 = icmp ult i12 %sh_amt_1_7, 54
  %tmp_53_1_7 = icmp ult i12 %sh_amt_1_7, 27
  %tmp_54_1_7 = zext i32 %sh_amt_1_7_cast to i54
  %tmp_55_1_7 = ashr i54 %man_V_2_1_7, %tmp_54_1_7
  %tmp_702 = trunc i54 %tmp_55_1_7 to i27
  %storemerge_1_7 = select i1 %tmp_699, i27 -1, i27 0
  %tmp_57_1_7 = sext i27 %tmp_701 to i32
  %tmp_58_1_7 = shl i32 %tmp_57_1_7, %sh_amt_1_7_cast
  %tmp_703 = trunc i32 %tmp_58_1_7 to i27
  %sel_tmp126 = xor i1 %tmp_44_1_7, true
  %sel_tmp127 = and i1 %tmp_49_1_7, %sel_tmp126
  %sel_tmp356_demorgan = or i1 %tmp_44_1_7, %tmp_49_1_7
  %sel_tmp128 = xor i1 %sel_tmp356_demorgan, true
  %sel_tmp129 = and i1 %tmp_46_1_7, %sel_tmp128
  %sel_tmp130 = xor i1 %tmp_51_1_7, true
  %sel_tmp131 = and i1 %sel_tmp129, %sel_tmp130
  %sel_tmp132 = and i1 %sel_tmp129, %tmp_51_1_7
  %sel_tmp371_demorgan = or i1 %sel_tmp356_demorgan, %tmp_46_1_7
  %sel_tmp133 = xor i1 %sel_tmp371_demorgan, true
  %sel_tmp134 = and i1 %tmp_53_1_7, %sel_tmp133
  %newSel56 = select i1 %sel_tmp134, i27 %tmp_703, i27 %tmp_702
  %or_cond42 = or i1 %sel_tmp134, %sel_tmp132
  %newSel57 = select i1 %sel_tmp131, i27 %storemerge_1_7, i27 %tmp_701
  %or_cond43 = or i1 %sel_tmp131, %sel_tmp127
  %newSel58 = select i1 %or_cond42, i27 %newSel56, i27 %newSel57
  %or_cond44 = or i1 %or_cond42, %or_cond43
  %newSel59 = select i1 %or_cond44, i27 %newSel58, i27 0
  %tmp_116 = sext i27 %newSel59 to i41
  %tmp_117 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_1_6, i32 14, i32 40)
  %tmp_61_1_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_117, i14 0)
  %tmp_6223_1_7_cast = mul i41 %tmp_116, %tmp_111
  %p_Val2_30_1_7 = add i41 %tmp_61_1_7, %tmp_6223_1_7_cast
  %tmp_118 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_1_6, i32 14, i32 40)
  %tmp_66_1_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_118, i14 0)
  %tmp_6724_1_7_cast = mul i41 %tmp_116, %tmp_112
  %p_Val2_33_1_7 = add i41 %tmp_66_1_7, %tmp_6724_1_7_cast
  %tmp_119 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_1_6, i32 14, i32 40)
  %tmp_71_1_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_119, i14 0)
  %tmp_7225_1_7_cast = mul i41 %tmp_116, %tmp_113
  %p_Val2_36_1_7 = add i41 %tmp_71_1_7, %tmp_7225_1_7_cast
  %p_Val2_12_1_8 = sub i27 %p_x_V_1_load, %p_x_V_8_load
  %p_Val2_15_1_8 = sub i27 %p_y_V_1_load, %p_y_V_8_load
  %p_Val2_18_1_8 = sub i27 %p_z_V_1_load, %p_z_V_8_load
  %tmp_120 = sext i27 %p_Val2_12_1_8 to i41
  %tmp_121 = sext i27 %p_Val2_15_1_8 to i41
  %tmp_2820_1_8 = mul i41 %tmp_120, %tmp_120
  %tmp_2919_1_8 = mul i41 %tmp_121, %tmp_121
  %p_Val2_20_1_8 = add i41 %tmp_2919_1_8, %tmp_2820_1_8
  %tmp_122 = sext i27 %p_Val2_18_1_8 to i41
  %tmp_3118_1_8_cast = mul i41 %tmp_122, %tmp_122
  %p_Val2_21_1_8 = add i41 %p_Val2_20_1_8, %tmp_3118_1_8_cast
  %tmp_123 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_1_8, i32 14, i32 28)
  %x_in_V_read_assign_14 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_123, i33 0)
  %sqrtX_out_V_write_as_14 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_14) nounwind
  %tmp_704 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_1_8, i32 14, i32 40)
  %OP1_V_130_8_cast_cas = sext i27 %tmp_704 to i42
  %tmp_705 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_14, i32 10, i32 24)
  %OP2_V_3_1_8_cast_cas = zext i15 %tmp_705 to i42
  %tmp_37_1_8 = mul i42 %OP2_V_3_1_8_cast_cas, %OP1_V_130_8_cast_cas
  %tmp_38_1_8 = icmp eq i42 %tmp_37_1_8, 0
  %dp_4_1_13 = sext i42 %tmp_37_1_8 to i64
  %dp_4_1_8 = sitofp i64 %dp_4_1_13 to double
  %res_V_131_8 = bitcast double %dp_4_1_8 to i64
  %p_Result_1_8 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_131_8, i32 52, i32 62)
  %exp_V_5_1_8 = add i11 -28, %p_Result_1_8
  %p_Result_43_1_8 = call i64 @llvm.part.set.i64.i11(i64 %res_V_131_8, i11 %exp_V_5_1_8, i32 52, i32 62) nounwind
  %dp_1_8 = bitcast i64 %p_Result_43_1_8 to double
  %p_0_i_1_8 = select i1 %tmp_38_1_8, double 0.000000e+00, double %dp_1_8
  %tmp_39_1_8 = fdiv double -1.000000e+00, %p_0_i_1_8
  %prefact_1_8 = fmul double %tmp_39_1_8, 0.000000e+00
  %ireg_V_1_8 = bitcast double %prefact_1_8 to i64
  %tmp_706 = trunc i64 %ireg_V_1_8 to i63
  %tmp_707 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_1_8, i32 63)
  %p_Result_40_1_8 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_1_8, i32 52, i32 62)
  %tmp_42_1_8 = zext i11 %p_Result_40_1_8 to i12
  %tmp_708 = trunc i64 %ireg_V_1_8 to i52
  %tmp_124 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_708)
  %p_Result_45_1_8 = zext i53 %tmp_124 to i54
  %man_V_1_1_8 = sub i54 0, %p_Result_45_1_8
  %man_V_2_1_8 = select i1 %tmp_707, i54 %man_V_1_1_8, i54 %p_Result_45_1_8
  %tmp_44_1_8 = icmp eq i63 %tmp_706, 0
  %F2_1_8 = sub i12 1075, %tmp_42_1_8
  %tmp_46_1_8 = icmp sgt i12 %F2_1_8, 14
  %tmp_47_1_8 = add i12 -14, %F2_1_8
  %tmp_48_1_8 = sub i12 14, %F2_1_8
  %sh_amt_1_8 = select i1 %tmp_46_1_8, i12 %tmp_47_1_8, i12 %tmp_48_1_8
  %sh_amt_1_8_cast = sext i12 %sh_amt_1_8 to i32
  %tmp_49_1_8 = icmp eq i12 %F2_1_8, 14
  %tmp_709 = trunc i54 %man_V_2_1_8 to i27
  %tmp_51_1_8 = icmp ult i12 %sh_amt_1_8, 54
  %tmp_53_1_8 = icmp ult i12 %sh_amt_1_8, 27
  %tmp_54_1_8 = zext i32 %sh_amt_1_8_cast to i54
  %tmp_55_1_8 = ashr i54 %man_V_2_1_8, %tmp_54_1_8
  %tmp_710 = trunc i54 %tmp_55_1_8 to i27
  %storemerge_1_8 = select i1 %tmp_707, i27 -1, i27 0
  %tmp_57_1_8 = sext i27 %tmp_709 to i32
  %tmp_58_1_8 = shl i32 %tmp_57_1_8, %sh_amt_1_8_cast
  %tmp_711 = trunc i32 %tmp_58_1_8 to i27
  %sel_tmp135 = xor i1 %tmp_44_1_8, true
  %sel_tmp136 = and i1 %tmp_49_1_8, %sel_tmp135
  %sel_tmp381_demorgan = or i1 %tmp_44_1_8, %tmp_49_1_8
  %sel_tmp137 = xor i1 %sel_tmp381_demorgan, true
  %sel_tmp138 = and i1 %tmp_46_1_8, %sel_tmp137
  %sel_tmp139 = xor i1 %tmp_51_1_8, true
  %sel_tmp140 = and i1 %sel_tmp138, %sel_tmp139
  %sel_tmp141 = and i1 %sel_tmp138, %tmp_51_1_8
  %sel_tmp396_demorgan = or i1 %sel_tmp381_demorgan, %tmp_46_1_8
  %sel_tmp142 = xor i1 %sel_tmp396_demorgan, true
  %sel_tmp143 = and i1 %tmp_53_1_8, %sel_tmp142
  %newSel60 = select i1 %sel_tmp143, i27 %tmp_711, i27 %tmp_710
  %or_cond45 = or i1 %sel_tmp143, %sel_tmp141
  %newSel61 = select i1 %sel_tmp140, i27 %storemerge_1_8, i27 %tmp_709
  %or_cond46 = or i1 %sel_tmp140, %sel_tmp136
  %newSel62 = select i1 %or_cond45, i27 %newSel60, i27 %newSel61
  %or_cond47 = or i1 %or_cond45, %or_cond46
  %newSel63 = select i1 %or_cond47, i27 %newSel62, i27 0
  %tmp_125 = sext i27 %newSel63 to i41
  %tmp_126 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_1_7, i32 14, i32 40)
  %tmp_61_1_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_126, i14 0)
  %tmp_6223_1_8_cast = mul i41 %tmp_125, %tmp_120
  %p_Val2_30_1_8 = add i41 %tmp_61_1_8, %tmp_6223_1_8_cast
  %tmp_64_1_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_1_8, i32 14, i32 40)
  store i27 %tmp_64_1_8, i27* @p_ax_V_1, align 8
  %tmp_127 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_1_7, i32 14, i32 40)
  %tmp_66_1_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_127, i14 0)
  %tmp_6724_1_8_cast = mul i41 %tmp_125, %tmp_121
  %p_Val2_33_1_8 = add i41 %tmp_66_1_8, %tmp_6724_1_8_cast
  %tmp_69_1_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_1_8, i32 14, i32 40)
  store i27 %tmp_69_1_8, i27* @p_ay_V_1, align 4
  %tmp_128 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_1_7, i32 14, i32 40)
  %tmp_71_1_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_128, i14 0)
  %tmp_7225_1_8_cast = mul i41 %tmp_125, %tmp_122
  %p_Val2_36_1_8 = add i41 %tmp_71_1_8, %tmp_7225_1_8_cast
  %tmp_74_1_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_1_8, i32 14, i32 40)
  store i27 %tmp_74_1_8, i27* @p_az_V_1, align 8
  %p_Val2_12_2 = sub i27 %p_x_V_2_load, %p_x_V_0_load
  %p_Val2_15_2 = sub i27 %p_y_V_2_load, %p_y_V_0_load
  %p_Val2_18_2 = sub i27 %p_z_V_2_load, %p_z_V_0_load
  %OP1_V_5_2_cast = sext i27 %p_Val2_12_2 to i41
  %OP1_V_6_2_cast = sext i27 %p_Val2_15_2 to i41
  %tmp_2820_2 = mul i41 %OP1_V_5_2_cast, %OP1_V_5_2_cast
  %tmp_2919_2 = mul i41 %OP1_V_6_2_cast, %OP1_V_6_2_cast
  %p_Val2_20_2 = add i41 %tmp_2919_2, %tmp_2820_2
  %OP1_V_7_2_cast = sext i27 %p_Val2_18_2 to i41
  %tmp_3118_2_cast = mul i41 %OP1_V_7_2_cast, %OP1_V_7_2_cast
  %p_Val2_21_2 = add i41 %p_Val2_20_2, %tmp_3118_2_cast
  %tmp_129 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_2, i32 14, i32 28)
  %x_in_V_read_assign_15 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_129, i33 0)
  %sqrtX_out_V_write_as_15 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_15) nounwind
  %tmp_712 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_2, i32 14, i32 40)
  %OP1_V_2_cast_cast = sext i27 %tmp_712 to i42
  %tmp_713 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_15, i32 10, i32 24)
  %OP2_V_3_2_cast_cast = zext i15 %tmp_713 to i42
  %tmp_37_2 = mul i42 %OP2_V_3_2_cast_cast, %OP1_V_2_cast_cast
  %tmp_38_2 = icmp eq i42 %tmp_37_2, 0
  %dp_4_9 = sext i42 %tmp_37_2 to i64
  %dp_4_2 = sitofp i64 %dp_4_9 to double
  %res_V_2 = bitcast double %dp_4_2 to i64
  %p_Result_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_2, i32 52, i32 62)
  %exp_V_5_2 = add i11 -28, %p_Result_2
  %p_Result_43_2 = call i64 @llvm.part.set.i64.i11(i64 %res_V_2, i11 %exp_V_5_2, i32 52, i32 62) nounwind
  %dp_s = bitcast i64 %p_Result_43_2 to double
  %p_0_i_2 = select i1 %tmp_38_2, double 0.000000e+00, double %dp_s
  %tmp_39_2 = fdiv double -1.000000e+00, %p_0_i_2
  %ireg_V_2 = bitcast double %tmp_39_2 to i64
  %tmp_714 = trunc i64 %ireg_V_2 to i63
  %tmp_715 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_2, i32 63)
  %p_Result_40_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_2, i32 52, i32 62)
  %tmp_42_2 = zext i11 %p_Result_40_2 to i12
  %tmp_716 = trunc i64 %ireg_V_2 to i52
  %tmp_130 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_716)
  %p_Result_45_2 = zext i53 %tmp_130 to i54
  %man_V_1_2 = sub i54 0, %p_Result_45_2
  %man_V_2_2 = select i1 %tmp_715, i54 %man_V_1_2, i54 %p_Result_45_2
  %tmp_44_2 = icmp eq i63 %tmp_714, 0
  %F2_2 = sub i12 1075, %tmp_42_2
  %tmp_46_2 = icmp sgt i12 %F2_2, 14
  %tmp_47_2 = add i12 -14, %F2_2
  %tmp_48_2 = sub i12 14, %F2_2
  %sh_amt_2 = select i1 %tmp_46_2, i12 %tmp_47_2, i12 %tmp_48_2
  %sh_amt_2_cast = sext i12 %sh_amt_2 to i32
  %tmp_49_2 = icmp eq i12 %F2_2, 14
  %tmp_717 = trunc i54 %man_V_2_2 to i27
  %tmp_51_2 = icmp ult i12 %sh_amt_2, 54
  %tmp_53_2 = icmp ult i12 %sh_amt_2, 27
  %tmp_54_2 = zext i32 %sh_amt_2_cast to i54
  %tmp_55_2 = ashr i54 %man_V_2_2, %tmp_54_2
  %tmp_718 = trunc i54 %tmp_55_2 to i27
  %storemerge_2 = select i1 %tmp_715, i27 -1, i27 0
  %tmp_57_2 = sext i27 %tmp_717 to i32
  %tmp_58_2 = shl i32 %tmp_57_2, %sh_amt_2_cast
  %tmp_719 = trunc i32 %tmp_58_2 to i27
  %sel_tmp144 = xor i1 %tmp_44_2, true
  %sel_tmp145 = and i1 %tmp_49_2, %sel_tmp144
  %sel_tmp406_demorgan = or i1 %tmp_44_2, %tmp_49_2
  %sel_tmp146 = xor i1 %sel_tmp406_demorgan, true
  %sel_tmp147 = and i1 %tmp_46_2, %sel_tmp146
  %sel_tmp148 = xor i1 %tmp_51_2, true
  %sel_tmp149 = and i1 %sel_tmp147, %sel_tmp148
  %sel_tmp150 = and i1 %sel_tmp147, %tmp_51_2
  %sel_tmp421_demorgan = or i1 %sel_tmp406_demorgan, %tmp_46_2
  %sel_tmp151 = xor i1 %sel_tmp421_demorgan, true
  %sel_tmp152 = and i1 %tmp_53_2, %sel_tmp151
  %newSel64 = select i1 %sel_tmp152, i27 %tmp_719, i27 %tmp_718
  %or_cond48 = or i1 %sel_tmp152, %sel_tmp150
  %newSel65 = select i1 %sel_tmp149, i27 %storemerge_2, i27 %tmp_717
  %or_cond49 = or i1 %sel_tmp149, %sel_tmp145
  %newSel66 = select i1 %or_cond48, i27 %newSel64, i27 %newSel65
  %or_cond50 = or i1 %or_cond48, %or_cond49
  %newSel67 = select i1 %or_cond50, i27 %newSel66, i27 0
  %OP1_V_1_2_cast = sext i27 %newSel67 to i41
  %p_Val2_29_2 = mul i41 %OP1_V_1_2_cast, %OP1_V_5_2_cast
  %p_Val2_32_2 = mul i41 %OP1_V_1_2_cast, %OP1_V_6_2_cast
  %p_Val2_35_2 = mul i41 %OP1_V_1_2_cast, %OP1_V_7_2_cast
  %p_Val2_12_2_1 = sub i27 %p_x_V_2_load, %p_x_V_1_load
  %p_Val2_15_2_1 = sub i27 %p_y_V_2_load, %p_y_V_1_load
  %p_Val2_18_2_1 = sub i27 %p_z_V_2_load, %p_z_V_1_load
  %tmp_131 = sext i27 %p_Val2_12_2_1 to i41
  %tmp_132 = sext i27 %p_Val2_15_2_1 to i41
  %tmp_2820_2_1 = mul i41 %tmp_131, %tmp_131
  %tmp_2919_2_1 = mul i41 %tmp_132, %tmp_132
  %p_Val2_20_2_1 = add i41 %tmp_2919_2_1, %tmp_2820_2_1
  %tmp_188 = sext i27 %p_Val2_18_2_1 to i41
  %tmp_3118_2_1_cast = mul i41 %tmp_188, %tmp_188
  %p_Val2_21_2_1 = add i41 %p_Val2_20_2_1, %tmp_3118_2_1_cast
  %tmp_189 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_2_1, i32 14, i32 28)
  %x_in_V_read_assign_16 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_189, i33 0)
  %sqrtX_out_V_write_as_16 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_16) nounwind
  %tmp_720 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_2_1, i32 14, i32 40)
  %OP1_V_2_1_cast_cast = sext i27 %tmp_720 to i42
  %tmp_721 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_16, i32 10, i32 24)
  %OP2_V_3_2_1_cast_cas = zext i15 %tmp_721 to i42
  %tmp_37_2_1 = mul i42 %OP2_V_3_2_1_cast_cas, %OP1_V_2_1_cast_cast
  %tmp_38_2_1 = icmp eq i42 %tmp_37_2_1, 0
  %dp_4_2_s = sext i42 %tmp_37_2_1 to i64
  %dp_4_2_1 = sitofp i64 %dp_4_2_s to double
  %res_V_2_1 = bitcast double %dp_4_2_1 to i64
  %p_Result_2_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_2_1, i32 52, i32 62)
  %exp_V_5_2_1 = add i11 -28, %p_Result_2_1
  %p_Result_43_2_1 = call i64 @llvm.part.set.i64.i11(i64 %res_V_2_1, i11 %exp_V_5_2_1, i32 52, i32 62) nounwind
  %dp_233_1 = bitcast i64 %p_Result_43_2_1 to double
  %p_0_i_2_1 = select i1 %tmp_38_2_1, double 0.000000e+00, double %dp_233_1
  %tmp_39_2_1 = fdiv double -1.000000e+00, %p_0_i_2_1
  %prefact_2_1 = fmul double %tmp_39_2_1, 0.000000e+00
  %ireg_V_2_1 = bitcast double %prefact_2_1 to i64
  %tmp_722 = trunc i64 %ireg_V_2_1 to i63
  %tmp_723 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_2_1, i32 63)
  %p_Result_40_2_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_2_1, i32 52, i32 62)
  %tmp_42_2_1 = zext i11 %p_Result_40_2_1 to i12
  %tmp_724 = trunc i64 %ireg_V_2_1 to i52
  %tmp_133 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_724)
  %p_Result_45_2_1 = zext i53 %tmp_133 to i54
  %man_V_1_2_1 = sub i54 0, %p_Result_45_2_1
  %man_V_2_2_1 = select i1 %tmp_723, i54 %man_V_1_2_1, i54 %p_Result_45_2_1
  %tmp_44_2_1 = icmp eq i63 %tmp_722, 0
  %F2_2_1 = sub i12 1075, %tmp_42_2_1
  %tmp_46_2_1 = icmp sgt i12 %F2_2_1, 14
  %tmp_47_2_1 = add i12 -14, %F2_2_1
  %tmp_48_2_1 = sub i12 14, %F2_2_1
  %sh_amt_2_1 = select i1 %tmp_46_2_1, i12 %tmp_47_2_1, i12 %tmp_48_2_1
  %sh_amt_2_1_cast = sext i12 %sh_amt_2_1 to i32
  %tmp_49_2_1 = icmp eq i12 %F2_2_1, 14
  %tmp_725 = trunc i54 %man_V_2_2_1 to i27
  %tmp_51_2_1 = icmp ult i12 %sh_amt_2_1, 54
  %tmp_53_2_1 = icmp ult i12 %sh_amt_2_1, 27
  %tmp_54_2_1 = zext i32 %sh_amt_2_1_cast to i54
  %tmp_55_2_1 = ashr i54 %man_V_2_2_1, %tmp_54_2_1
  %tmp_726 = trunc i54 %tmp_55_2_1 to i27
  %storemerge_2_1 = select i1 %tmp_723, i27 -1, i27 0
  %tmp_57_2_1 = sext i27 %tmp_725 to i32
  %tmp_58_2_1 = shl i32 %tmp_57_2_1, %sh_amt_2_1_cast
  %tmp_727 = trunc i32 %tmp_58_2_1 to i27
  %sel_tmp153 = xor i1 %tmp_44_2_1, true
  %sel_tmp154 = and i1 %tmp_49_2_1, %sel_tmp153
  %sel_tmp431_demorgan = or i1 %tmp_44_2_1, %tmp_49_2_1
  %sel_tmp155 = xor i1 %sel_tmp431_demorgan, true
  %sel_tmp156 = and i1 %tmp_46_2_1, %sel_tmp155
  %sel_tmp157 = xor i1 %tmp_51_2_1, true
  %sel_tmp158 = and i1 %sel_tmp156, %sel_tmp157
  %sel_tmp159 = and i1 %sel_tmp156, %tmp_51_2_1
  %sel_tmp446_demorgan = or i1 %sel_tmp431_demorgan, %tmp_46_2_1
  %sel_tmp160 = xor i1 %sel_tmp446_demorgan, true
  %sel_tmp161 = and i1 %tmp_53_2_1, %sel_tmp160
  %newSel68 = select i1 %sel_tmp161, i27 %tmp_727, i27 %tmp_726
  %or_cond51 = or i1 %sel_tmp161, %sel_tmp159
  %newSel69 = select i1 %sel_tmp158, i27 %storemerge_2_1, i27 %tmp_725
  %or_cond52 = or i1 %sel_tmp158, %sel_tmp154
  %newSel70 = select i1 %or_cond51, i27 %newSel68, i27 %newSel69
  %or_cond53 = or i1 %or_cond51, %or_cond52
  %newSel71 = select i1 %or_cond53, i27 %newSel70, i27 0
  %tmp_190 = sext i27 %newSel71 to i41
  %tmp_191 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_29_2, i32 14, i32 40)
  %tmp_61_2_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_191, i14 0)
  %tmp_6223_2_1_cast = mul i41 %tmp_190, %tmp_131
  %p_Val2_30_2_1 = add i41 %tmp_61_2_1, %tmp_6223_2_1_cast
  %tmp_192 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_32_2, i32 14, i32 40)
  %tmp_66_2_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_192, i14 0)
  %tmp_6724_2_1_cast = mul i41 %tmp_190, %tmp_132
  %p_Val2_33_2_1 = add i41 %tmp_66_2_1, %tmp_6724_2_1_cast
  %tmp_193 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_35_2, i32 14, i32 40)
  %tmp_71_2_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_193, i14 0)
  %tmp_7225_2_1_cast = mul i41 %tmp_190, %tmp_188
  %p_Val2_36_2_1 = add i41 %tmp_71_2_1, %tmp_7225_2_1_cast
  %p_Val2_12_2_3 = sub i27 %p_x_V_2_load, %p_x_V_3_load
  %p_Val2_15_2_3 = sub i27 %p_y_V_2_load, %p_y_V_3_load
  %p_Val2_18_2_3 = sub i27 %p_z_V_2_load, %p_z_V_3_load
  %tmp_194 = sext i27 %p_Val2_12_2_3 to i41
  %tmp_195 = sext i27 %p_Val2_15_2_3 to i41
  %tmp_2820_2_3 = mul i41 %tmp_194, %tmp_194
  %tmp_2919_2_3 = mul i41 %tmp_195, %tmp_195
  %p_Val2_20_2_3 = add i41 %tmp_2919_2_3, %tmp_2820_2_3
  %tmp_196 = sext i27 %p_Val2_18_2_3 to i41
  %tmp_3118_2_3_cast = mul i41 %tmp_196, %tmp_196
  %p_Val2_21_2_3 = add i41 %p_Val2_20_2_3, %tmp_3118_2_3_cast
  %tmp_197 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_2_3, i32 14, i32 28)
  %x_in_V_read_assign_17 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_197, i33 0)
  %sqrtX_out_V_write_as_17 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_17) nounwind
  %tmp_728 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_2_3, i32 14, i32 40)
  %OP1_V_2_3_cast_cast = sext i27 %tmp_728 to i42
  %tmp_729 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_17, i32 10, i32 24)
  %OP2_V_3_2_3_cast_cas = zext i15 %tmp_729 to i42
  %tmp_37_2_3 = mul i42 %OP2_V_3_2_3_cast_cas, %OP1_V_2_3_cast_cast
  %tmp_38_2_3 = icmp eq i42 %tmp_37_2_3, 0
  %dp_4_2_2 = sext i42 %tmp_37_2_3 to i64
  %dp_4_2_3 = sitofp i64 %dp_4_2_2 to double
  %res_V_2_3 = bitcast double %dp_4_2_3 to i64
  %p_Result_2_3 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_2_3, i32 52, i32 62)
  %exp_V_5_2_3 = add i11 -28, %p_Result_2_3
  %p_Result_43_2_3 = call i64 @llvm.part.set.i64.i11(i64 %res_V_2_3, i11 %exp_V_5_2_3, i32 52, i32 62) nounwind
  %dp_233_3 = bitcast i64 %p_Result_43_2_3 to double
  %p_0_i_2_3 = select i1 %tmp_38_2_3, double 0.000000e+00, double %dp_233_3
  %tmp_39_2_3 = fdiv double -1.000000e+00, %p_0_i_2_3
  %prefact_2_3 = fmul double %tmp_39_2_3, 0.000000e+00
  %ireg_V_2_3 = bitcast double %prefact_2_3 to i64
  %tmp_730 = trunc i64 %ireg_V_2_3 to i63
  %tmp_731 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_2_3, i32 63)
  %p_Result_40_2_3 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_2_3, i32 52, i32 62)
  %tmp_42_2_3 = zext i11 %p_Result_40_2_3 to i12
  %tmp_732 = trunc i64 %ireg_V_2_3 to i52
  %tmp_134 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_732)
  %p_Result_45_2_3 = zext i53 %tmp_134 to i54
  %man_V_1_2_3 = sub i54 0, %p_Result_45_2_3
  %man_V_2_2_3 = select i1 %tmp_731, i54 %man_V_1_2_3, i54 %p_Result_45_2_3
  %tmp_44_2_3 = icmp eq i63 %tmp_730, 0
  %F2_2_3 = sub i12 1075, %tmp_42_2_3
  %tmp_46_2_3 = icmp sgt i12 %F2_2_3, 14
  %tmp_47_2_3 = add i12 -14, %F2_2_3
  %tmp_48_2_3 = sub i12 14, %F2_2_3
  %sh_amt_2_3 = select i1 %tmp_46_2_3, i12 %tmp_47_2_3, i12 %tmp_48_2_3
  %sh_amt_2_3_cast = sext i12 %sh_amt_2_3 to i32
  %tmp_49_2_3 = icmp eq i12 %F2_2_3, 14
  %tmp_733 = trunc i54 %man_V_2_2_3 to i27
  %tmp_51_2_3 = icmp ult i12 %sh_amt_2_3, 54
  %tmp_53_2_3 = icmp ult i12 %sh_amt_2_3, 27
  %tmp_54_2_3 = zext i32 %sh_amt_2_3_cast to i54
  %tmp_55_2_3 = ashr i54 %man_V_2_2_3, %tmp_54_2_3
  %tmp_734 = trunc i54 %tmp_55_2_3 to i27
  %storemerge_2_3 = select i1 %tmp_731, i27 -1, i27 0
  %tmp_57_2_3 = sext i27 %tmp_733 to i32
  %tmp_58_2_3 = shl i32 %tmp_57_2_3, %sh_amt_2_3_cast
  %tmp_735 = trunc i32 %tmp_58_2_3 to i27
  %sel_tmp162 = xor i1 %tmp_44_2_3, true
  %sel_tmp163 = and i1 %tmp_49_2_3, %sel_tmp162
  %sel_tmp456_demorgan = or i1 %tmp_44_2_3, %tmp_49_2_3
  %sel_tmp164 = xor i1 %sel_tmp456_demorgan, true
  %sel_tmp165 = and i1 %tmp_46_2_3, %sel_tmp164
  %sel_tmp166 = xor i1 %tmp_51_2_3, true
  %sel_tmp167 = and i1 %sel_tmp165, %sel_tmp166
  %sel_tmp168 = and i1 %sel_tmp165, %tmp_51_2_3
  %sel_tmp471_demorgan = or i1 %sel_tmp456_demorgan, %tmp_46_2_3
  %sel_tmp169 = xor i1 %sel_tmp471_demorgan, true
  %sel_tmp170 = and i1 %tmp_53_2_3, %sel_tmp169
  %newSel72 = select i1 %sel_tmp170, i27 %tmp_735, i27 %tmp_734
  %or_cond54 = or i1 %sel_tmp170, %sel_tmp168
  %newSel73 = select i1 %sel_tmp167, i27 %storemerge_2_3, i27 %tmp_733
  %or_cond55 = or i1 %sel_tmp167, %sel_tmp163
  %newSel74 = select i1 %or_cond54, i27 %newSel72, i27 %newSel73
  %or_cond56 = or i1 %or_cond54, %or_cond55
  %newSel75 = select i1 %or_cond56, i27 %newSel74, i27 0
  %tmp_198 = sext i27 %newSel75 to i41
  %tmp_199 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_2_1, i32 14, i32 40)
  %tmp_61_2_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_199, i14 0)
  %tmp_6223_2_3_cast = mul i41 %tmp_198, %tmp_194
  %p_Val2_30_2_3 = add i41 %tmp_61_2_3, %tmp_6223_2_3_cast
  %tmp_200 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_2_1, i32 14, i32 40)
  %tmp_66_2_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_200, i14 0)
  %tmp_6724_2_3_cast = mul i41 %tmp_198, %tmp_195
  %p_Val2_33_2_3 = add i41 %tmp_66_2_3, %tmp_6724_2_3_cast
  %tmp_201 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_2_1, i32 14, i32 40)
  %tmp_71_2_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_201, i14 0)
  %tmp_7225_2_3_cast = mul i41 %tmp_198, %tmp_196
  %p_Val2_36_2_3 = add i41 %tmp_71_2_3, %tmp_7225_2_3_cast
  %p_Val2_12_2_4 = sub i27 %p_x_V_2_load, %p_x_V_4_load
  %p_Val2_15_2_4 = sub i27 %p_y_V_2_load, %p_y_V_4_load
  %p_Val2_18_2_4 = sub i27 %p_z_V_2_load, %p_z_V_4_load
  %tmp_202 = sext i27 %p_Val2_12_2_4 to i41
  %tmp_203 = sext i27 %p_Val2_15_2_4 to i41
  %tmp_2820_2_4 = mul i41 %tmp_202, %tmp_202
  %tmp_2919_2_4 = mul i41 %tmp_203, %tmp_203
  %p_Val2_20_2_4 = add i41 %tmp_2919_2_4, %tmp_2820_2_4
  %tmp_204 = sext i27 %p_Val2_18_2_4 to i41
  %tmp_3118_2_4_cast = mul i41 %tmp_204, %tmp_204
  %p_Val2_21_2_4 = add i41 %p_Val2_20_2_4, %tmp_3118_2_4_cast
  %tmp_205 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_2_4, i32 14, i32 28)
  %x_in_V_read_assign_18 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_205, i33 0)
  %sqrtX_out_V_write_as_18 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_18) nounwind
  %tmp_736 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_2_4, i32 14, i32 40)
  %OP1_V_2_4_cast_cast = sext i27 %tmp_736 to i42
  %tmp_737 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_18, i32 10, i32 24)
  %OP2_V_3_2_4_cast_cas = zext i15 %tmp_737 to i42
  %tmp_37_2_4 = mul i42 %OP2_V_3_2_4_cast_cas, %OP1_V_2_4_cast_cast
  %tmp_38_2_4 = icmp eq i42 %tmp_37_2_4, 0
  %dp_4_2_9 = sext i42 %tmp_37_2_4 to i64
  %dp_4_2_4 = sitofp i64 %dp_4_2_9 to double
  %res_V_2_4 = bitcast double %dp_4_2_4 to i64
  %p_Result_2_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_2_4, i32 52, i32 62)
  %exp_V_5_2_4 = add i11 -28, %p_Result_2_4
  %p_Result_43_2_4 = call i64 @llvm.part.set.i64.i11(i64 %res_V_2_4, i11 %exp_V_5_2_4, i32 52, i32 62) nounwind
  %dp_233_4 = bitcast i64 %p_Result_43_2_4 to double
  %p_0_i_2_4 = select i1 %tmp_38_2_4, double 0.000000e+00, double %dp_233_4
  %tmp_39_2_4 = fdiv double -1.000000e+00, %p_0_i_2_4
  %prefact_2_4 = fmul double %tmp_39_2_4, 0.000000e+00
  %ireg_V_2_4 = bitcast double %prefact_2_4 to i64
  %tmp_738 = trunc i64 %ireg_V_2_4 to i63
  %tmp_739 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_2_4, i32 63)
  %p_Result_40_2_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_2_4, i32 52, i32 62)
  %tmp_42_2_4 = zext i11 %p_Result_40_2_4 to i12
  %tmp_740 = trunc i64 %ireg_V_2_4 to i52
  %tmp_135 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_740)
  %p_Result_45_2_4 = zext i53 %tmp_135 to i54
  %man_V_1_2_4 = sub i54 0, %p_Result_45_2_4
  %man_V_2_2_4 = select i1 %tmp_739, i54 %man_V_1_2_4, i54 %p_Result_45_2_4
  %tmp_44_2_4 = icmp eq i63 %tmp_738, 0
  %F2_2_4 = sub i12 1075, %tmp_42_2_4
  %tmp_46_2_4 = icmp sgt i12 %F2_2_4, 14
  %tmp_47_2_4 = add i12 -14, %F2_2_4
  %tmp_48_2_4 = sub i12 14, %F2_2_4
  %sh_amt_2_4 = select i1 %tmp_46_2_4, i12 %tmp_47_2_4, i12 %tmp_48_2_4
  %sh_amt_2_4_cast = sext i12 %sh_amt_2_4 to i32
  %tmp_49_2_4 = icmp eq i12 %F2_2_4, 14
  %tmp_741 = trunc i54 %man_V_2_2_4 to i27
  %tmp_51_2_4 = icmp ult i12 %sh_amt_2_4, 54
  %tmp_53_2_4 = icmp ult i12 %sh_amt_2_4, 27
  %tmp_54_2_4 = zext i32 %sh_amt_2_4_cast to i54
  %tmp_55_2_4 = ashr i54 %man_V_2_2_4, %tmp_54_2_4
  %tmp_742 = trunc i54 %tmp_55_2_4 to i27
  %storemerge_2_4 = select i1 %tmp_739, i27 -1, i27 0
  %tmp_57_2_4 = sext i27 %tmp_741 to i32
  %tmp_58_2_4 = shl i32 %tmp_57_2_4, %sh_amt_2_4_cast
  %tmp_743 = trunc i32 %tmp_58_2_4 to i27
  %sel_tmp171 = xor i1 %tmp_44_2_4, true
  %sel_tmp172 = and i1 %tmp_49_2_4, %sel_tmp171
  %sel_tmp481_demorgan = or i1 %tmp_44_2_4, %tmp_49_2_4
  %sel_tmp173 = xor i1 %sel_tmp481_demorgan, true
  %sel_tmp174 = and i1 %tmp_46_2_4, %sel_tmp173
  %sel_tmp175 = xor i1 %tmp_51_2_4, true
  %sel_tmp176 = and i1 %sel_tmp174, %sel_tmp175
  %sel_tmp177 = and i1 %sel_tmp174, %tmp_51_2_4
  %sel_tmp496_demorgan = or i1 %sel_tmp481_demorgan, %tmp_46_2_4
  %sel_tmp178 = xor i1 %sel_tmp496_demorgan, true
  %sel_tmp179 = and i1 %tmp_53_2_4, %sel_tmp178
  %newSel76 = select i1 %sel_tmp179, i27 %tmp_743, i27 %tmp_742
  %or_cond57 = or i1 %sel_tmp179, %sel_tmp177
  %newSel77 = select i1 %sel_tmp176, i27 %storemerge_2_4, i27 %tmp_741
  %or_cond58 = or i1 %sel_tmp176, %sel_tmp172
  %newSel78 = select i1 %or_cond57, i27 %newSel76, i27 %newSel77
  %or_cond59 = or i1 %or_cond57, %or_cond58
  %newSel79 = select i1 %or_cond59, i27 %newSel78, i27 0
  %tmp_206 = sext i27 %newSel79 to i41
  %tmp_207 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_2_3, i32 14, i32 40)
  %tmp_61_2_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_207, i14 0)
  %tmp_6223_2_4_cast = mul i41 %tmp_206, %tmp_202
  %p_Val2_30_2_4 = add i41 %tmp_61_2_4, %tmp_6223_2_4_cast
  %tmp_208 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_2_3, i32 14, i32 40)
  %tmp_66_2_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_208, i14 0)
  %tmp_6724_2_4_cast = mul i41 %tmp_206, %tmp_203
  %p_Val2_33_2_4 = add i41 %tmp_66_2_4, %tmp_6724_2_4_cast
  %tmp_209 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_2_3, i32 14, i32 40)
  %tmp_71_2_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_209, i14 0)
  %tmp_7225_2_4_cast = mul i41 %tmp_206, %tmp_204
  %p_Val2_36_2_4 = add i41 %tmp_71_2_4, %tmp_7225_2_4_cast
  %p_Val2_12_2_5 = sub i27 %p_x_V_2_load, %p_x_V_5_load
  %p_Val2_15_2_5 = sub i27 %p_y_V_2_load, %p_y_V_5_load
  %p_Val2_18_2_5 = sub i27 %p_z_V_2_load, %p_z_V_5_load
  %tmp_210 = sext i27 %p_Val2_12_2_5 to i41
  %tmp_211 = sext i27 %p_Val2_15_2_5 to i41
  %tmp_2820_2_5 = mul i41 %tmp_210, %tmp_210
  %tmp_2919_2_5 = mul i41 %tmp_211, %tmp_211
  %p_Val2_20_2_5 = add i41 %tmp_2919_2_5, %tmp_2820_2_5
  %tmp_212 = sext i27 %p_Val2_18_2_5 to i41
  %tmp_3118_2_5_cast = mul i41 %tmp_212, %tmp_212
  %p_Val2_21_2_5 = add i41 %p_Val2_20_2_5, %tmp_3118_2_5_cast
  %tmp_213 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_2_5, i32 14, i32 28)
  %x_in_V_read_assign_19 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_213, i33 0)
  %sqrtX_out_V_write_as_19 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_19) nounwind
  %tmp_744 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_2_5, i32 14, i32 40)
  %OP1_V_2_5_cast_cast = sext i27 %tmp_744 to i42
  %tmp_745 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_19, i32 10, i32 24)
  %OP2_V_3_2_5_cast_cas = zext i15 %tmp_745 to i42
  %tmp_37_2_5 = mul i42 %OP2_V_3_2_5_cast_cas, %OP1_V_2_5_cast_cast
  %tmp_38_2_5 = icmp eq i42 %tmp_37_2_5, 0
  %dp_4_2_10 = sext i42 %tmp_37_2_5 to i64
  %dp_4_2_5 = sitofp i64 %dp_4_2_10 to double
  %res_V_2_5 = bitcast double %dp_4_2_5 to i64
  %p_Result_2_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_2_5, i32 52, i32 62)
  %exp_V_5_2_5 = add i11 -28, %p_Result_2_5
  %p_Result_43_2_5 = call i64 @llvm.part.set.i64.i11(i64 %res_V_2_5, i11 %exp_V_5_2_5, i32 52, i32 62) nounwind
  %dp_233_5 = bitcast i64 %p_Result_43_2_5 to double
  %p_0_i_2_5 = select i1 %tmp_38_2_5, double 0.000000e+00, double %dp_233_5
  %tmp_39_2_5 = fdiv double -1.000000e+00, %p_0_i_2_5
  %prefact_2_5 = fmul double %tmp_39_2_5, 0x3F4E000000000000
  %ireg_V_2_5 = bitcast double %prefact_2_5 to i64
  %tmp_746 = trunc i64 %ireg_V_2_5 to i63
  %tmp_747 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_2_5, i32 63)
  %p_Result_40_2_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_2_5, i32 52, i32 62)
  %tmp_42_2_5 = zext i11 %p_Result_40_2_5 to i12
  %tmp_748 = trunc i64 %ireg_V_2_5 to i52
  %tmp_136 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_748)
  %p_Result_45_2_5 = zext i53 %tmp_136 to i54
  %man_V_1_2_5 = sub i54 0, %p_Result_45_2_5
  %man_V_2_2_5 = select i1 %tmp_747, i54 %man_V_1_2_5, i54 %p_Result_45_2_5
  %tmp_44_2_5 = icmp eq i63 %tmp_746, 0
  %F2_2_5 = sub i12 1075, %tmp_42_2_5
  %tmp_46_2_5 = icmp sgt i12 %F2_2_5, 14
  %tmp_47_2_5 = add i12 -14, %F2_2_5
  %tmp_48_2_5 = sub i12 14, %F2_2_5
  %sh_amt_2_5 = select i1 %tmp_46_2_5, i12 %tmp_47_2_5, i12 %tmp_48_2_5
  %sh_amt_2_5_cast = sext i12 %sh_amt_2_5 to i32
  %tmp_49_2_5 = icmp eq i12 %F2_2_5, 14
  %tmp_749 = trunc i54 %man_V_2_2_5 to i27
  %tmp_51_2_5 = icmp ult i12 %sh_amt_2_5, 54
  %tmp_53_2_5 = icmp ult i12 %sh_amt_2_5, 27
  %tmp_54_2_5 = zext i32 %sh_amt_2_5_cast to i54
  %tmp_55_2_5 = ashr i54 %man_V_2_2_5, %tmp_54_2_5
  %tmp_750 = trunc i54 %tmp_55_2_5 to i27
  %storemerge_2_5 = select i1 %tmp_747, i27 -1, i27 0
  %tmp_57_2_5 = sext i27 %tmp_749 to i32
  %tmp_58_2_5 = shl i32 %tmp_57_2_5, %sh_amt_2_5_cast
  %tmp_751 = trunc i32 %tmp_58_2_5 to i27
  %sel_tmp180 = xor i1 %tmp_44_2_5, true
  %sel_tmp181 = and i1 %tmp_49_2_5, %sel_tmp180
  %sel_tmp506_demorgan = or i1 %tmp_44_2_5, %tmp_49_2_5
  %sel_tmp182 = xor i1 %sel_tmp506_demorgan, true
  %sel_tmp183 = and i1 %tmp_46_2_5, %sel_tmp182
  %sel_tmp184 = xor i1 %tmp_51_2_5, true
  %sel_tmp185 = and i1 %sel_tmp183, %sel_tmp184
  %sel_tmp186 = and i1 %sel_tmp183, %tmp_51_2_5
  %sel_tmp521_demorgan = or i1 %sel_tmp506_demorgan, %tmp_46_2_5
  %sel_tmp187 = xor i1 %sel_tmp521_demorgan, true
  %sel_tmp188 = and i1 %tmp_53_2_5, %sel_tmp187
  %newSel80 = select i1 %sel_tmp188, i27 %tmp_751, i27 %tmp_750
  %or_cond60 = or i1 %sel_tmp188, %sel_tmp186
  %newSel81 = select i1 %sel_tmp185, i27 %storemerge_2_5, i27 %tmp_749
  %or_cond61 = or i1 %sel_tmp185, %sel_tmp181
  %newSel82 = select i1 %or_cond60, i27 %newSel80, i27 %newSel81
  %or_cond62 = or i1 %or_cond60, %or_cond61
  %newSel83 = select i1 %or_cond62, i27 %newSel82, i27 0
  %tmp_214 = sext i27 %newSel83 to i41
  %tmp_215 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_2_4, i32 14, i32 40)
  %tmp_61_2_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_215, i14 0)
  %tmp_6223_2_5_cast = mul i41 %tmp_214, %tmp_210
  %p_Val2_30_2_5 = add i41 %tmp_61_2_5, %tmp_6223_2_5_cast
  %tmp_216 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_2_4, i32 14, i32 40)
  %tmp_66_2_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_216, i14 0)
  %tmp_6724_2_5_cast = mul i41 %tmp_214, %tmp_211
  %p_Val2_33_2_5 = add i41 %tmp_66_2_5, %tmp_6724_2_5_cast
  %tmp_217 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_2_4, i32 14, i32 40)
  %tmp_71_2_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_217, i14 0)
  %tmp_7225_2_5_cast = mul i41 %tmp_214, %tmp_212
  %p_Val2_36_2_5 = add i41 %tmp_71_2_5, %tmp_7225_2_5_cast
  %p_Val2_12_2_6 = sub i27 %p_x_V_2_load, %p_x_V_6_load
  %p_Val2_15_2_6 = sub i27 %p_y_V_2_load, %p_y_V_6_load
  %p_Val2_18_2_6 = sub i27 %p_z_V_2_load, %p_z_V_6_load
  %tmp_218 = sext i27 %p_Val2_12_2_6 to i41
  %tmp_219 = sext i27 %p_Val2_15_2_6 to i41
  %tmp_2820_2_6 = mul i41 %tmp_218, %tmp_218
  %tmp_2919_2_6 = mul i41 %tmp_219, %tmp_219
  %p_Val2_20_2_6 = add i41 %tmp_2919_2_6, %tmp_2820_2_6
  %tmp_220 = sext i27 %p_Val2_18_2_6 to i41
  %tmp_3118_2_6_cast = mul i41 %tmp_220, %tmp_220
  %p_Val2_21_2_6 = add i41 %p_Val2_20_2_6, %tmp_3118_2_6_cast
  %tmp_221 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_2_6, i32 14, i32 28)
  %x_in_V_read_assign_20 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_221, i33 0)
  %sqrtX_out_V_write_as_20 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_20) nounwind
  %tmp_752 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_2_6, i32 14, i32 40)
  %OP1_V_2_6_cast_cast = sext i27 %tmp_752 to i42
  %tmp_753 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_20, i32 10, i32 24)
  %OP2_V_3_2_6_cast_cas = zext i15 %tmp_753 to i42
  %tmp_37_2_6 = mul i42 %OP2_V_3_2_6_cast_cas, %OP1_V_2_6_cast_cast
  %tmp_38_2_6 = icmp eq i42 %tmp_37_2_6, 0
  %dp_4_2_11 = sext i42 %tmp_37_2_6 to i64
  %dp_4_2_6 = sitofp i64 %dp_4_2_11 to double
  %res_V_2_6 = bitcast double %dp_4_2_6 to i64
  %p_Result_2_6 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_2_6, i32 52, i32 62)
  %exp_V_5_2_6 = add i11 -28, %p_Result_2_6
  %p_Result_43_2_6 = call i64 @llvm.part.set.i64.i11(i64 %res_V_2_6, i11 %exp_V_5_2_6, i32 52, i32 62) nounwind
  %dp_233_6 = bitcast i64 %p_Result_43_2_6 to double
  %p_0_i_2_6 = select i1 %tmp_38_2_6, double 0.000000e+00, double %dp_233_6
  %tmp_39_2_6 = fdiv double -1.000000e+00, %p_0_i_2_6
  %prefact_2_6 = fmul double %tmp_39_2_6, 0x3F30000000000000
  %ireg_V_2_6 = bitcast double %prefact_2_6 to i64
  %tmp_754 = trunc i64 %ireg_V_2_6 to i63
  %tmp_755 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_2_6, i32 63)
  %p_Result_40_2_6 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_2_6, i32 52, i32 62)
  %tmp_42_2_6 = zext i11 %p_Result_40_2_6 to i12
  %tmp_756 = trunc i64 %ireg_V_2_6 to i52
  %tmp_137 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_756)
  %p_Result_45_2_6 = zext i53 %tmp_137 to i54
  %man_V_1_2_6 = sub i54 0, %p_Result_45_2_6
  %man_V_2_2_6 = select i1 %tmp_755, i54 %man_V_1_2_6, i54 %p_Result_45_2_6
  %tmp_44_2_6 = icmp eq i63 %tmp_754, 0
  %F2_2_6 = sub i12 1075, %tmp_42_2_6
  %tmp_46_2_6 = icmp sgt i12 %F2_2_6, 14
  %tmp_47_2_6 = add i12 -14, %F2_2_6
  %tmp_48_2_6 = sub i12 14, %F2_2_6
  %sh_amt_2_6 = select i1 %tmp_46_2_6, i12 %tmp_47_2_6, i12 %tmp_48_2_6
  %sh_amt_2_6_cast = sext i12 %sh_amt_2_6 to i32
  %tmp_49_2_6 = icmp eq i12 %F2_2_6, 14
  %tmp_757 = trunc i54 %man_V_2_2_6 to i27
  %tmp_51_2_6 = icmp ult i12 %sh_amt_2_6, 54
  %tmp_53_2_6 = icmp ult i12 %sh_amt_2_6, 27
  %tmp_54_2_6 = zext i32 %sh_amt_2_6_cast to i54
  %tmp_55_2_6 = ashr i54 %man_V_2_2_6, %tmp_54_2_6
  %tmp_758 = trunc i54 %tmp_55_2_6 to i27
  %storemerge_2_6 = select i1 %tmp_755, i27 -1, i27 0
  %tmp_57_2_6 = sext i27 %tmp_757 to i32
  %tmp_58_2_6 = shl i32 %tmp_57_2_6, %sh_amt_2_6_cast
  %tmp_759 = trunc i32 %tmp_58_2_6 to i27
  %sel_tmp189 = xor i1 %tmp_44_2_6, true
  %sel_tmp190 = and i1 %tmp_49_2_6, %sel_tmp189
  %sel_tmp531_demorgan = or i1 %tmp_44_2_6, %tmp_49_2_6
  %sel_tmp191 = xor i1 %sel_tmp531_demorgan, true
  %sel_tmp192 = and i1 %tmp_46_2_6, %sel_tmp191
  %sel_tmp193 = xor i1 %tmp_51_2_6, true
  %sel_tmp194 = and i1 %sel_tmp192, %sel_tmp193
  %sel_tmp195 = and i1 %sel_tmp192, %tmp_51_2_6
  %sel_tmp546_demorgan = or i1 %sel_tmp531_demorgan, %tmp_46_2_6
  %sel_tmp196 = xor i1 %sel_tmp546_demorgan, true
  %sel_tmp197 = and i1 %tmp_53_2_6, %sel_tmp196
  %newSel84 = select i1 %sel_tmp197, i27 %tmp_759, i27 %tmp_758
  %or_cond63 = or i1 %sel_tmp197, %sel_tmp195
  %newSel85 = select i1 %sel_tmp194, i27 %storemerge_2_6, i27 %tmp_757
  %or_cond64 = or i1 %sel_tmp194, %sel_tmp190
  %newSel86 = select i1 %or_cond63, i27 %newSel84, i27 %newSel85
  %or_cond65 = or i1 %or_cond63, %or_cond64
  %newSel87 = select i1 %or_cond65, i27 %newSel86, i27 0
  %tmp_222 = sext i27 %newSel87 to i41
  %tmp_223 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_2_5, i32 14, i32 40)
  %tmp_61_2_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_223, i14 0)
  %tmp_6223_2_6_cast = mul i41 %tmp_222, %tmp_218
  %p_Val2_30_2_6 = add i41 %tmp_61_2_6, %tmp_6223_2_6_cast
  %tmp_224 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_2_5, i32 14, i32 40)
  %tmp_66_2_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_224, i14 0)
  %tmp_6724_2_6_cast = mul i41 %tmp_222, %tmp_219
  %p_Val2_33_2_6 = add i41 %tmp_66_2_6, %tmp_6724_2_6_cast
  %tmp_225 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_2_5, i32 14, i32 40)
  %tmp_71_2_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_225, i14 0)
  %tmp_7225_2_6_cast = mul i41 %tmp_222, %tmp_220
  %p_Val2_36_2_6 = add i41 %tmp_71_2_6, %tmp_7225_2_6_cast
  %p_Val2_12_2_7 = sub i27 %p_x_V_2_load, %p_x_V_7_load
  %p_Val2_15_2_7 = sub i27 %p_y_V_2_load, %p_y_V_7_load
  %p_Val2_18_2_7 = sub i27 %p_z_V_2_load, %p_z_V_7_load
  %tmp_226 = sext i27 %p_Val2_12_2_7 to i41
  %tmp_227 = sext i27 %p_Val2_15_2_7 to i41
  %tmp_2820_2_7 = mul i41 %tmp_226, %tmp_226
  %tmp_2919_2_7 = mul i41 %tmp_227, %tmp_227
  %p_Val2_20_2_7 = add i41 %tmp_2919_2_7, %tmp_2820_2_7
  %tmp_228 = sext i27 %p_Val2_18_2_7 to i41
  %tmp_3118_2_7_cast = mul i41 %tmp_228, %tmp_228
  %p_Val2_21_2_7 = add i41 %p_Val2_20_2_7, %tmp_3118_2_7_cast
  %tmp_229 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_2_7, i32 14, i32 28)
  %x_in_V_read_assign_21 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_229, i33 0)
  %sqrtX_out_V_write_as_21 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_21) nounwind
  %tmp_760 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_2_7, i32 14, i32 40)
  %OP1_V_2_7_cast_cast = sext i27 %tmp_760 to i42
  %tmp_761 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_21, i32 10, i32 24)
  %OP2_V_3_2_7_cast_cas = zext i15 %tmp_761 to i42
  %tmp_37_2_7 = mul i42 %OP2_V_3_2_7_cast_cas, %OP1_V_2_7_cast_cast
  %tmp_38_2_7 = icmp eq i42 %tmp_37_2_7, 0
  %dp_4_2_12 = sext i42 %tmp_37_2_7 to i64
  %dp_4_2_7 = sitofp i64 %dp_4_2_12 to double
  %res_V_2_7 = bitcast double %dp_4_2_7 to i64
  %p_Result_2_7 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_2_7, i32 52, i32 62)
  %exp_V_5_2_7 = add i11 -28, %p_Result_2_7
  %p_Result_43_2_7 = call i64 @llvm.part.set.i64.i11(i64 %res_V_2_7, i11 %exp_V_5_2_7, i32 52, i32 62) nounwind
  %dp_233_7 = bitcast i64 %p_Result_43_2_7 to double
  %p_0_i_2_7 = select i1 %tmp_38_2_7, double 0.000000e+00, double %dp_233_7
  %tmp_39_2_7 = fdiv double -1.000000e+00, %p_0_i_2_7
  %prefact_2_7 = fmul double %tmp_39_2_7, 0.000000e+00
  %ireg_V_2_7 = bitcast double %prefact_2_7 to i64
  %tmp_762 = trunc i64 %ireg_V_2_7 to i63
  %tmp_763 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_2_7, i32 63)
  %p_Result_40_2_7 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_2_7, i32 52, i32 62)
  %tmp_42_2_7 = zext i11 %p_Result_40_2_7 to i12
  %tmp_764 = trunc i64 %ireg_V_2_7 to i52
  %tmp_138 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_764)
  %p_Result_45_2_7 = zext i53 %tmp_138 to i54
  %man_V_1_2_7 = sub i54 0, %p_Result_45_2_7
  %man_V_2_2_7 = select i1 %tmp_763, i54 %man_V_1_2_7, i54 %p_Result_45_2_7
  %tmp_44_2_7 = icmp eq i63 %tmp_762, 0
  %F2_2_7 = sub i12 1075, %tmp_42_2_7
  %tmp_46_2_7 = icmp sgt i12 %F2_2_7, 14
  %tmp_47_2_7 = add i12 -14, %F2_2_7
  %tmp_48_2_7 = sub i12 14, %F2_2_7
  %sh_amt_2_7 = select i1 %tmp_46_2_7, i12 %tmp_47_2_7, i12 %tmp_48_2_7
  %sh_amt_2_7_cast = sext i12 %sh_amt_2_7 to i32
  %tmp_49_2_7 = icmp eq i12 %F2_2_7, 14
  %tmp_765 = trunc i54 %man_V_2_2_7 to i27
  %tmp_51_2_7 = icmp ult i12 %sh_amt_2_7, 54
  %tmp_53_2_7 = icmp ult i12 %sh_amt_2_7, 27
  %tmp_54_2_7 = zext i32 %sh_amt_2_7_cast to i54
  %tmp_55_2_7 = ashr i54 %man_V_2_2_7, %tmp_54_2_7
  %tmp_766 = trunc i54 %tmp_55_2_7 to i27
  %storemerge_2_7 = select i1 %tmp_763, i27 -1, i27 0
  %tmp_57_2_7 = sext i27 %tmp_765 to i32
  %tmp_58_2_7 = shl i32 %tmp_57_2_7, %sh_amt_2_7_cast
  %tmp_767 = trunc i32 %tmp_58_2_7 to i27
  %sel_tmp198 = xor i1 %tmp_44_2_7, true
  %sel_tmp199 = and i1 %tmp_49_2_7, %sel_tmp198
  %sel_tmp556_demorgan = or i1 %tmp_44_2_7, %tmp_49_2_7
  %sel_tmp200 = xor i1 %sel_tmp556_demorgan, true
  %sel_tmp201 = and i1 %tmp_46_2_7, %sel_tmp200
  %sel_tmp202 = xor i1 %tmp_51_2_7, true
  %sel_tmp203 = and i1 %sel_tmp201, %sel_tmp202
  %sel_tmp204 = and i1 %sel_tmp201, %tmp_51_2_7
  %sel_tmp571_demorgan = or i1 %sel_tmp556_demorgan, %tmp_46_2_7
  %sel_tmp205 = xor i1 %sel_tmp571_demorgan, true
  %sel_tmp206 = and i1 %tmp_53_2_7, %sel_tmp205
  %newSel88 = select i1 %sel_tmp206, i27 %tmp_767, i27 %tmp_766
  %or_cond66 = or i1 %sel_tmp206, %sel_tmp204
  %newSel89 = select i1 %sel_tmp203, i27 %storemerge_2_7, i27 %tmp_765
  %or_cond67 = or i1 %sel_tmp203, %sel_tmp199
  %newSel90 = select i1 %or_cond66, i27 %newSel88, i27 %newSel89
  %or_cond68 = or i1 %or_cond66, %or_cond67
  %newSel91 = select i1 %or_cond68, i27 %newSel90, i27 0
  %tmp_230 = sext i27 %newSel91 to i41
  %tmp_231 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_2_6, i32 14, i32 40)
  %tmp_61_2_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_231, i14 0)
  %tmp_6223_2_7_cast = mul i41 %tmp_230, %tmp_226
  %p_Val2_30_2_7 = add i41 %tmp_61_2_7, %tmp_6223_2_7_cast
  %tmp_232 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_2_6, i32 14, i32 40)
  %tmp_66_2_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_232, i14 0)
  %tmp_6724_2_7_cast = mul i41 %tmp_230, %tmp_227
  %p_Val2_33_2_7 = add i41 %tmp_66_2_7, %tmp_6724_2_7_cast
  %tmp_233 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_2_6, i32 14, i32 40)
  %tmp_71_2_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_233, i14 0)
  %tmp_7225_2_7_cast = mul i41 %tmp_230, %tmp_228
  %p_Val2_36_2_7 = add i41 %tmp_71_2_7, %tmp_7225_2_7_cast
  %p_Val2_12_2_8 = sub i27 %p_x_V_2_load, %p_x_V_8_load
  %p_Val2_15_2_8 = sub i27 %p_y_V_2_load, %p_y_V_8_load
  %p_Val2_18_2_8 = sub i27 %p_z_V_2_load, %p_z_V_8_load
  %tmp_234 = sext i27 %p_Val2_12_2_8 to i41
  %tmp_235 = sext i27 %p_Val2_15_2_8 to i41
  %tmp_2820_2_8 = mul i41 %tmp_234, %tmp_234
  %tmp_2919_2_8 = mul i41 %tmp_235, %tmp_235
  %p_Val2_20_2_8 = add i41 %tmp_2919_2_8, %tmp_2820_2_8
  %tmp_236 = sext i27 %p_Val2_18_2_8 to i41
  %tmp_3118_2_8_cast = mul i41 %tmp_236, %tmp_236
  %p_Val2_21_2_8 = add i41 %p_Val2_20_2_8, %tmp_3118_2_8_cast
  %tmp_237 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_2_8, i32 14, i32 28)
  %x_in_V_read_assign_22 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_237, i33 0)
  %sqrtX_out_V_write_as_22 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_22) nounwind
  %tmp_768 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_2_8, i32 14, i32 40)
  %OP1_V_2_8_cast_cast = sext i27 %tmp_768 to i42
  %tmp_769 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_22, i32 10, i32 24)
  %OP2_V_3_2_8_cast_cas = zext i15 %tmp_769 to i42
  %tmp_37_2_8 = mul i42 %OP2_V_3_2_8_cast_cas, %OP1_V_2_8_cast_cast
  %tmp_38_2_8 = icmp eq i42 %tmp_37_2_8, 0
  %dp_4_2_13 = sext i42 %tmp_37_2_8 to i64
  %dp_4_2_8 = sitofp i64 %dp_4_2_13 to double
  %res_V_2_8 = bitcast double %dp_4_2_8 to i64
  %p_Result_2_8 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_2_8, i32 52, i32 62)
  %exp_V_5_2_8 = add i11 -28, %p_Result_2_8
  %p_Result_43_2_8 = call i64 @llvm.part.set.i64.i11(i64 %res_V_2_8, i11 %exp_V_5_2_8, i32 52, i32 62) nounwind
  %dp_233_8 = bitcast i64 %p_Result_43_2_8 to double
  %p_0_i_2_8 = select i1 %tmp_38_2_8, double 0.000000e+00, double %dp_233_8
  %tmp_39_2_8 = fdiv double -1.000000e+00, %p_0_i_2_8
  %prefact_2_8 = fmul double %tmp_39_2_8, 0.000000e+00
  %ireg_V_2_8 = bitcast double %prefact_2_8 to i64
  %tmp_770 = trunc i64 %ireg_V_2_8 to i63
  %tmp_771 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_2_8, i32 63)
  %p_Result_40_2_8 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_2_8, i32 52, i32 62)
  %tmp_42_2_8 = zext i11 %p_Result_40_2_8 to i12
  %tmp_772 = trunc i64 %ireg_V_2_8 to i52
  %tmp_139 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_772)
  %p_Result_45_2_8 = zext i53 %tmp_139 to i54
  %man_V_1_2_8 = sub i54 0, %p_Result_45_2_8
  %man_V_2_2_8 = select i1 %tmp_771, i54 %man_V_1_2_8, i54 %p_Result_45_2_8
  %tmp_44_2_8 = icmp eq i63 %tmp_770, 0
  %F2_2_8 = sub i12 1075, %tmp_42_2_8
  %tmp_46_2_8 = icmp sgt i12 %F2_2_8, 14
  %tmp_47_2_8 = add i12 -14, %F2_2_8
  %tmp_48_2_8 = sub i12 14, %F2_2_8
  %sh_amt_2_8 = select i1 %tmp_46_2_8, i12 %tmp_47_2_8, i12 %tmp_48_2_8
  %sh_amt_2_8_cast = sext i12 %sh_amt_2_8 to i32
  %tmp_49_2_8 = icmp eq i12 %F2_2_8, 14
  %tmp_773 = trunc i54 %man_V_2_2_8 to i27
  %tmp_51_2_8 = icmp ult i12 %sh_amt_2_8, 54
  %tmp_53_2_8 = icmp ult i12 %sh_amt_2_8, 27
  %tmp_54_2_8 = zext i32 %sh_amt_2_8_cast to i54
  %tmp_55_2_8 = ashr i54 %man_V_2_2_8, %tmp_54_2_8
  %tmp_774 = trunc i54 %tmp_55_2_8 to i27
  %storemerge_2_8 = select i1 %tmp_771, i27 -1, i27 0
  %tmp_57_2_8 = sext i27 %tmp_773 to i32
  %tmp_58_2_8 = shl i32 %tmp_57_2_8, %sh_amt_2_8_cast
  %tmp_775 = trunc i32 %tmp_58_2_8 to i27
  %sel_tmp207 = xor i1 %tmp_44_2_8, true
  %sel_tmp208 = and i1 %tmp_49_2_8, %sel_tmp207
  %sel_tmp581_demorgan = or i1 %tmp_44_2_8, %tmp_49_2_8
  %sel_tmp209 = xor i1 %sel_tmp581_demorgan, true
  %sel_tmp210 = and i1 %tmp_46_2_8, %sel_tmp209
  %sel_tmp211 = xor i1 %tmp_51_2_8, true
  %sel_tmp212 = and i1 %sel_tmp210, %sel_tmp211
  %sel_tmp213 = and i1 %sel_tmp210, %tmp_51_2_8
  %sel_tmp596_demorgan = or i1 %sel_tmp581_demorgan, %tmp_46_2_8
  %sel_tmp214 = xor i1 %sel_tmp596_demorgan, true
  %sel_tmp215 = and i1 %tmp_53_2_8, %sel_tmp214
  %newSel92 = select i1 %sel_tmp215, i27 %tmp_775, i27 %tmp_774
  %or_cond69 = or i1 %sel_tmp215, %sel_tmp213
  %newSel93 = select i1 %sel_tmp212, i27 %storemerge_2_8, i27 %tmp_773
  %or_cond70 = or i1 %sel_tmp212, %sel_tmp208
  %newSel94 = select i1 %or_cond69, i27 %newSel92, i27 %newSel93
  %or_cond71 = or i1 %or_cond69, %or_cond70
  %newSel95 = select i1 %or_cond71, i27 %newSel94, i27 0
  %tmp_238 = sext i27 %newSel95 to i41
  %tmp_239 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_2_7, i32 14, i32 40)
  %tmp_61_2_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_239, i14 0)
  %tmp_6223_2_8_cast = mul i41 %tmp_238, %tmp_234
  %p_Val2_30_2_8 = add i41 %tmp_61_2_8, %tmp_6223_2_8_cast
  %tmp_64_2_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_2_8, i32 14, i32 40)
  store i27 %tmp_64_2_8, i27* @p_ax_V_2, align 8
  %tmp_240 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_2_7, i32 14, i32 40)
  %tmp_66_2_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_240, i14 0)
  %tmp_6724_2_8_cast = mul i41 %tmp_238, %tmp_235
  %p_Val2_33_2_8 = add i41 %tmp_66_2_8, %tmp_6724_2_8_cast
  %tmp_69_2_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_2_8, i32 14, i32 40)
  store i27 %tmp_69_2_8, i27* @p_ay_V_2, align 8
  %tmp_241 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_2_7, i32 14, i32 40)
  %tmp_71_2_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_241, i14 0)
  %tmp_7225_2_8_cast = mul i41 %tmp_238, %tmp_236
  %p_Val2_36_2_8 = add i41 %tmp_71_2_8, %tmp_7225_2_8_cast
  %tmp_74_2_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_2_8, i32 14, i32 40)
  store i27 %tmp_74_2_8, i27* @p_az_V_2, align 8
  %p_Val2_12_3 = sub i27 %p_x_V_3_load, %p_x_V_0_load
  %p_Val2_15_3 = sub i27 %p_y_V_3_load, %p_y_V_0_load
  %p_Val2_18_3 = sub i27 %p_z_V_3_load, %p_z_V_0_load
  %OP1_V_5_3_cast = sext i27 %p_Val2_12_3 to i41
  %OP1_V_6_3_cast = sext i27 %p_Val2_15_3 to i41
  %tmp_2820_3 = mul i41 %OP1_V_5_3_cast, %OP1_V_5_3_cast
  %tmp_2919_3 = mul i41 %OP1_V_6_3_cast, %OP1_V_6_3_cast
  %p_Val2_20_3 = add i41 %tmp_2919_3, %tmp_2820_3
  %OP1_V_7_3_cast = sext i27 %p_Val2_18_3 to i41
  %tmp_3118_3_cast = mul i41 %OP1_V_7_3_cast, %OP1_V_7_3_cast
  %p_Val2_21_3 = add i41 %p_Val2_20_3, %tmp_3118_3_cast
  %tmp_242 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_3, i32 14, i32 28)
  %x_in_V_read_assign_23 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_242, i33 0)
  %sqrtX_out_V_write_as_23 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_23) nounwind
  %tmp_776 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_3, i32 14, i32 40)
  %OP1_V_3_cast_cast = sext i27 %tmp_776 to i42
  %tmp_777 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_23, i32 10, i32 24)
  %OP2_V_3_3_cast_cast = zext i15 %tmp_777 to i42
  %tmp_37_3 = mul i42 %OP2_V_3_3_cast_cast, %OP1_V_3_cast_cast
  %tmp_38_3 = icmp eq i42 %tmp_37_3, 0
  %dp_4_10 = sext i42 %tmp_37_3 to i64
  %dp_4_3 = sitofp i64 %dp_4_10 to double
  %res_V_3 = bitcast double %dp_4_3 to i64
  %p_Result_3 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_3, i32 52, i32 62)
  %exp_V_5_3 = add i11 -28, %p_Result_3
  %p_Result_43_3 = call i64 @llvm.part.set.i64.i11(i64 %res_V_3, i11 %exp_V_5_3, i32 52, i32 62) nounwind
  %dp_3 = bitcast i64 %p_Result_43_3 to double
  %p_0_i_3 = select i1 %tmp_38_3, double 0.000000e+00, double %dp_3
  %tmp_39_3 = fdiv double -1.000000e+00, %p_0_i_3
  %ireg_V_3 = bitcast double %tmp_39_3 to i64
  %tmp_778 = trunc i64 %ireg_V_3 to i63
  %tmp_779 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_3, i32 63)
  %p_Result_40_3 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_3, i32 52, i32 62)
  %tmp_42_3 = zext i11 %p_Result_40_3 to i12
  %tmp_780 = trunc i64 %ireg_V_3 to i52
  %tmp_140 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_780)
  %p_Result_45_3 = zext i53 %tmp_140 to i54
  %man_V_1_3 = sub i54 0, %p_Result_45_3
  %man_V_2_3 = select i1 %tmp_779, i54 %man_V_1_3, i54 %p_Result_45_3
  %tmp_44_3 = icmp eq i63 %tmp_778, 0
  %F2_3 = sub i12 1075, %tmp_42_3
  %tmp_46_3 = icmp sgt i12 %F2_3, 14
  %tmp_47_3 = add i12 -14, %F2_3
  %tmp_48_3 = sub i12 14, %F2_3
  %sh_amt_3 = select i1 %tmp_46_3, i12 %tmp_47_3, i12 %tmp_48_3
  %sh_amt_3_cast = sext i12 %sh_amt_3 to i32
  %tmp_49_3 = icmp eq i12 %F2_3, 14
  %tmp_781 = trunc i54 %man_V_2_3 to i27
  %tmp_51_3 = icmp ult i12 %sh_amt_3, 54
  %tmp_53_3 = icmp ult i12 %sh_amt_3, 27
  %tmp_54_3 = zext i32 %sh_amt_3_cast to i54
  %tmp_55_3 = ashr i54 %man_V_2_3, %tmp_54_3
  %tmp_782 = trunc i54 %tmp_55_3 to i27
  %storemerge_3 = select i1 %tmp_779, i27 -1, i27 0
  %tmp_57_3 = sext i27 %tmp_781 to i32
  %tmp_58_3 = shl i32 %tmp_57_3, %sh_amt_3_cast
  %tmp_783 = trunc i32 %tmp_58_3 to i27
  %sel_tmp216 = xor i1 %tmp_44_3, true
  %sel_tmp217 = and i1 %tmp_49_3, %sel_tmp216
  %sel_tmp606_demorgan = or i1 %tmp_44_3, %tmp_49_3
  %sel_tmp218 = xor i1 %sel_tmp606_demorgan, true
  %sel_tmp219 = and i1 %tmp_46_3, %sel_tmp218
  %sel_tmp220 = xor i1 %tmp_51_3, true
  %sel_tmp221 = and i1 %sel_tmp219, %sel_tmp220
  %sel_tmp222 = and i1 %sel_tmp219, %tmp_51_3
  %sel_tmp621_demorgan = or i1 %sel_tmp606_demorgan, %tmp_46_3
  %sel_tmp223 = xor i1 %sel_tmp621_demorgan, true
  %sel_tmp224 = and i1 %tmp_53_3, %sel_tmp223
  %newSel96 = select i1 %sel_tmp224, i27 %tmp_783, i27 %tmp_782
  %or_cond72 = or i1 %sel_tmp224, %sel_tmp222
  %newSel97 = select i1 %sel_tmp221, i27 %storemerge_3, i27 %tmp_781
  %or_cond73 = or i1 %sel_tmp221, %sel_tmp217
  %newSel98 = select i1 %or_cond72, i27 %newSel96, i27 %newSel97
  %or_cond74 = or i1 %or_cond72, %or_cond73
  %newSel99 = select i1 %or_cond74, i27 %newSel98, i27 0
  %OP1_V_1_3_cast = sext i27 %newSel99 to i41
  %p_Val2_29_3 = mul i41 %OP1_V_1_3_cast, %OP1_V_5_3_cast
  %p_Val2_32_3 = mul i41 %OP1_V_1_3_cast, %OP1_V_6_3_cast
  %p_Val2_35_3 = mul i41 %OP1_V_1_3_cast, %OP1_V_7_3_cast
  %p_Val2_12_3_1 = sub i27 %p_x_V_3_load, %p_x_V_1_load
  %p_Val2_15_3_1 = sub i27 %p_y_V_3_load, %p_y_V_1_load
  %p_Val2_18_3_1 = sub i27 %p_z_V_3_load, %p_z_V_1_load
  %tmp_243 = sext i27 %p_Val2_12_3_1 to i41
  %tmp_244 = sext i27 %p_Val2_15_3_1 to i41
  %tmp_2820_3_1 = mul i41 %tmp_243, %tmp_243
  %tmp_2919_3_1 = mul i41 %tmp_244, %tmp_244
  %p_Val2_20_3_1 = add i41 %tmp_2919_3_1, %tmp_2820_3_1
  %tmp_245 = sext i27 %p_Val2_18_3_1 to i41
  %tmp_3118_3_1_cast = mul i41 %tmp_245, %tmp_245
  %p_Val2_21_3_1 = add i41 %p_Val2_20_3_1, %tmp_3118_3_1_cast
  %tmp_246 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_3_1, i32 14, i32 28)
  %x_in_V_read_assign_24 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_246, i33 0)
  %sqrtX_out_V_write_as_24 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_24) nounwind
  %tmp_784 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_3_1, i32 14, i32 40)
  %OP1_V_3_1_cast_cast = sext i27 %tmp_784 to i42
  %tmp_785 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_24, i32 10, i32 24)
  %OP2_V_3_3_1_cast_cas = zext i15 %tmp_785 to i42
  %tmp_37_3_1 = mul i42 %OP2_V_3_3_1_cast_cas, %OP1_V_3_1_cast_cast
  %tmp_38_3_1 = icmp eq i42 %tmp_37_3_1, 0
  %dp_4_3_s = sext i42 %tmp_37_3_1 to i64
  %dp_4_3_1 = sitofp i64 %dp_4_3_s to double
  %res_V_3_1 = bitcast double %dp_4_3_1 to i64
  %p_Result_3_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_3_1, i32 52, i32 62)
  %exp_V_5_3_1 = add i11 -28, %p_Result_3_1
  %p_Result_43_3_1 = call i64 @llvm.part.set.i64.i11(i64 %res_V_3_1, i11 %exp_V_5_3_1, i32 52, i32 62) nounwind
  %dp_3_1 = bitcast i64 %p_Result_43_3_1 to double
  %p_0_i_3_1 = select i1 %tmp_38_3_1, double 0.000000e+00, double %dp_3_1
  %tmp_39_3_1 = fdiv double -1.000000e+00, %p_0_i_3_1
  %prefact_3_1 = fmul double %tmp_39_3_1, 0.000000e+00
  %ireg_V_3_1 = bitcast double %prefact_3_1 to i64
  %tmp_786 = trunc i64 %ireg_V_3_1 to i63
  %tmp_787 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_3_1, i32 63)
  %p_Result_40_3_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_3_1, i32 52, i32 62)
  %tmp_42_3_1 = zext i11 %p_Result_40_3_1 to i12
  %tmp_788 = trunc i64 %ireg_V_3_1 to i52
  %tmp_141 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_788)
  %p_Result_45_3_1 = zext i53 %tmp_141 to i54
  %man_V_1_3_1 = sub i54 0, %p_Result_45_3_1
  %man_V_2_3_1 = select i1 %tmp_787, i54 %man_V_1_3_1, i54 %p_Result_45_3_1
  %tmp_44_3_1 = icmp eq i63 %tmp_786, 0
  %F2_3_1 = sub i12 1075, %tmp_42_3_1
  %tmp_46_3_1 = icmp sgt i12 %F2_3_1, 14
  %tmp_47_3_1 = add i12 -14, %F2_3_1
  %tmp_48_3_1 = sub i12 14, %F2_3_1
  %sh_amt_3_1 = select i1 %tmp_46_3_1, i12 %tmp_47_3_1, i12 %tmp_48_3_1
  %sh_amt_3_1_cast = sext i12 %sh_amt_3_1 to i32
  %tmp_49_3_1 = icmp eq i12 %F2_3_1, 14
  %tmp_789 = trunc i54 %man_V_2_3_1 to i27
  %tmp_51_3_1 = icmp ult i12 %sh_amt_3_1, 54
  %tmp_53_3_1 = icmp ult i12 %sh_amt_3_1, 27
  %tmp_54_3_1 = zext i32 %sh_amt_3_1_cast to i54
  %tmp_55_3_1 = ashr i54 %man_V_2_3_1, %tmp_54_3_1
  %tmp_790 = trunc i54 %tmp_55_3_1 to i27
  %storemerge_3_1 = select i1 %tmp_787, i27 -1, i27 0
  %tmp_57_3_1 = sext i27 %tmp_789 to i32
  %tmp_58_3_1 = shl i32 %tmp_57_3_1, %sh_amt_3_1_cast
  %tmp_791 = trunc i32 %tmp_58_3_1 to i27
  %sel_tmp225 = xor i1 %tmp_44_3_1, true
  %sel_tmp226 = and i1 %tmp_49_3_1, %sel_tmp225
  %sel_tmp631_demorgan = or i1 %tmp_44_3_1, %tmp_49_3_1
  %sel_tmp227 = xor i1 %sel_tmp631_demorgan, true
  %sel_tmp228 = and i1 %tmp_46_3_1, %sel_tmp227
  %sel_tmp229 = xor i1 %tmp_51_3_1, true
  %sel_tmp230 = and i1 %sel_tmp228, %sel_tmp229
  %sel_tmp231 = and i1 %sel_tmp228, %tmp_51_3_1
  %sel_tmp646_demorgan = or i1 %sel_tmp631_demorgan, %tmp_46_3_1
  %sel_tmp232 = xor i1 %sel_tmp646_demorgan, true
  %sel_tmp233 = and i1 %tmp_53_3_1, %sel_tmp232
  %newSel100 = select i1 %sel_tmp233, i27 %tmp_791, i27 %tmp_790
  %or_cond75 = or i1 %sel_tmp233, %sel_tmp231
  %newSel101 = select i1 %sel_tmp230, i27 %storemerge_3_1, i27 %tmp_789
  %or_cond76 = or i1 %sel_tmp230, %sel_tmp226
  %newSel102 = select i1 %or_cond75, i27 %newSel100, i27 %newSel101
  %or_cond77 = or i1 %or_cond75, %or_cond76
  %newSel103 = select i1 %or_cond77, i27 %newSel102, i27 0
  %tmp_247 = sext i27 %newSel103 to i41
  %tmp_248 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_29_3, i32 14, i32 40)
  %tmp_61_3_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_248, i14 0)
  %tmp_6223_3_1_cast = mul i41 %tmp_247, %tmp_243
  %p_Val2_30_3_1 = add i41 %tmp_61_3_1, %tmp_6223_3_1_cast
  %tmp_249 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_32_3, i32 14, i32 40)
  %tmp_66_3_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_249, i14 0)
  %tmp_6724_3_1_cast = mul i41 %tmp_247, %tmp_244
  %p_Val2_33_3_1 = add i41 %tmp_66_3_1, %tmp_6724_3_1_cast
  %tmp_250 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_35_3, i32 14, i32 40)
  %tmp_71_3_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_250, i14 0)
  %tmp_7225_3_1_cast = mul i41 %tmp_247, %tmp_245
  %p_Val2_36_3_1 = add i41 %tmp_71_3_1, %tmp_7225_3_1_cast
  %p_Val2_12_3_2 = sub i27 %p_x_V_3_load, %p_x_V_2_load
  %p_Val2_15_3_2 = sub i27 %p_y_V_3_load, %p_y_V_2_load
  %p_Val2_18_3_2 = sub i27 %p_z_V_3_load, %p_z_V_2_load
  %tmp_251 = sext i27 %p_Val2_12_3_2 to i41
  %tmp_252 = sext i27 %p_Val2_15_3_2 to i41
  %tmp_2820_3_2 = mul i41 %tmp_251, %tmp_251
  %tmp_2919_3_2 = mul i41 %tmp_252, %tmp_252
  %p_Val2_20_3_2 = add i41 %tmp_2919_3_2, %tmp_2820_3_2
  %tmp_253 = sext i27 %p_Val2_18_3_2 to i41
  %tmp_3118_3_2_cast = mul i41 %tmp_253, %tmp_253
  %p_Val2_21_3_2 = add i41 %p_Val2_20_3_2, %tmp_3118_3_2_cast
  %tmp_254 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_3_2, i32 14, i32 28)
  %x_in_V_read_assign_25 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_254, i33 0)
  %sqrtX_out_V_write_as_25 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_25) nounwind
  %tmp_792 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_3_2, i32 14, i32 40)
  %OP1_V_3_2_cast_cast = sext i27 %tmp_792 to i42
  %tmp_793 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_25, i32 10, i32 24)
  %OP2_V_3_3_2_cast_cas = zext i15 %tmp_793 to i42
  %tmp_37_3_2 = mul i42 %OP2_V_3_3_2_cast_cas, %OP1_V_3_2_cast_cast
  %tmp_38_3_2 = icmp eq i42 %tmp_37_3_2, 0
  %dp_4_3_3 = sext i42 %tmp_37_3_2 to i64
  %dp_4_3_2 = sitofp i64 %dp_4_3_3 to double
  %res_V_3_2 = bitcast double %dp_4_3_2 to i64
  %p_Result_3_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_3_2, i32 52, i32 62)
  %exp_V_5_3_2 = add i11 -28, %p_Result_3_2
  %p_Result_43_3_2 = call i64 @llvm.part.set.i64.i11(i64 %res_V_3_2, i11 %exp_V_5_3_2, i32 52, i32 62) nounwind
  %dp_3_2 = bitcast i64 %p_Result_43_3_2 to double
  %p_0_i_3_2 = select i1 %tmp_38_3_2, double 0.000000e+00, double %dp_3_2
  %tmp_39_3_2 = fdiv double -1.000000e+00, %p_0_i_3_2
  %prefact_3_2 = fmul double %tmp_39_3_2, 0.000000e+00
  %ireg_V_3_2 = bitcast double %prefact_3_2 to i64
  %tmp_794 = trunc i64 %ireg_V_3_2 to i63
  %tmp_795 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_3_2, i32 63)
  %p_Result_40_3_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_3_2, i32 52, i32 62)
  %tmp_42_3_2 = zext i11 %p_Result_40_3_2 to i12
  %tmp_796 = trunc i64 %ireg_V_3_2 to i52
  %tmp_142 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_796)
  %p_Result_45_3_2 = zext i53 %tmp_142 to i54
  %man_V_1_3_2 = sub i54 0, %p_Result_45_3_2
  %man_V_2_3_2 = select i1 %tmp_795, i54 %man_V_1_3_2, i54 %p_Result_45_3_2
  %tmp_44_3_2 = icmp eq i63 %tmp_794, 0
  %F2_3_2 = sub i12 1075, %tmp_42_3_2
  %tmp_46_3_2 = icmp sgt i12 %F2_3_2, 14
  %tmp_47_3_2 = add i12 -14, %F2_3_2
  %tmp_48_3_2 = sub i12 14, %F2_3_2
  %sh_amt_3_2 = select i1 %tmp_46_3_2, i12 %tmp_47_3_2, i12 %tmp_48_3_2
  %sh_amt_3_2_cast = sext i12 %sh_amt_3_2 to i32
  %tmp_49_3_2 = icmp eq i12 %F2_3_2, 14
  %tmp_797 = trunc i54 %man_V_2_3_2 to i27
  %tmp_51_3_2 = icmp ult i12 %sh_amt_3_2, 54
  %tmp_53_3_2 = icmp ult i12 %sh_amt_3_2, 27
  %tmp_54_3_2 = zext i32 %sh_amt_3_2_cast to i54
  %tmp_55_3_2 = ashr i54 %man_V_2_3_2, %tmp_54_3_2
  %tmp_798 = trunc i54 %tmp_55_3_2 to i27
  %storemerge_3_2 = select i1 %tmp_795, i27 -1, i27 0
  %tmp_57_3_2 = sext i27 %tmp_797 to i32
  %tmp_58_3_2 = shl i32 %tmp_57_3_2, %sh_amt_3_2_cast
  %tmp_799 = trunc i32 %tmp_58_3_2 to i27
  %sel_tmp234 = xor i1 %tmp_44_3_2, true
  %sel_tmp235 = and i1 %tmp_49_3_2, %sel_tmp234
  %sel_tmp656_demorgan = or i1 %tmp_44_3_2, %tmp_49_3_2
  %sel_tmp236 = xor i1 %sel_tmp656_demorgan, true
  %sel_tmp237 = and i1 %tmp_46_3_2, %sel_tmp236
  %sel_tmp238 = xor i1 %tmp_51_3_2, true
  %sel_tmp239 = and i1 %sel_tmp237, %sel_tmp238
  %sel_tmp240 = and i1 %sel_tmp237, %tmp_51_3_2
  %sel_tmp671_demorgan = or i1 %sel_tmp656_demorgan, %tmp_46_3_2
  %sel_tmp241 = xor i1 %sel_tmp671_demorgan, true
  %sel_tmp242 = and i1 %tmp_53_3_2, %sel_tmp241
  %newSel104 = select i1 %sel_tmp242, i27 %tmp_799, i27 %tmp_798
  %or_cond78 = or i1 %sel_tmp242, %sel_tmp240
  %newSel105 = select i1 %sel_tmp239, i27 %storemerge_3_2, i27 %tmp_797
  %or_cond79 = or i1 %sel_tmp239, %sel_tmp235
  %newSel106 = select i1 %or_cond78, i27 %newSel104, i27 %newSel105
  %or_cond80 = or i1 %or_cond78, %or_cond79
  %newSel107 = select i1 %or_cond80, i27 %newSel106, i27 0
  %tmp_255 = sext i27 %newSel107 to i41
  %tmp_256 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_3_1, i32 14, i32 40)
  %tmp_61_3_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_256, i14 0)
  %tmp_6223_3_2_cast = mul i41 %tmp_255, %tmp_251
  %p_Val2_30_3_2 = add i41 %tmp_61_3_2, %tmp_6223_3_2_cast
  %tmp_257 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_3_1, i32 14, i32 40)
  %tmp_66_3_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_257, i14 0)
  %tmp_6724_3_2_cast = mul i41 %tmp_255, %tmp_252
  %p_Val2_33_3_2 = add i41 %tmp_66_3_2, %tmp_6724_3_2_cast
  %tmp_258 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_3_1, i32 14, i32 40)
  %tmp_71_3_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_258, i14 0)
  %tmp_7225_3_2_cast = mul i41 %tmp_255, %tmp_253
  %p_Val2_36_3_2 = add i41 %tmp_71_3_2, %tmp_7225_3_2_cast
  %p_Val2_12_3_4 = sub i27 %p_x_V_3_load, %p_x_V_4_load
  %p_Val2_15_3_4 = sub i27 %p_y_V_3_load, %p_y_V_4_load
  %p_Val2_18_3_4 = sub i27 %p_z_V_3_load, %p_z_V_4_load
  %tmp_259 = sext i27 %p_Val2_12_3_4 to i41
  %tmp_260 = sext i27 %p_Val2_15_3_4 to i41
  %tmp_2820_3_4 = mul i41 %tmp_259, %tmp_259
  %tmp_2919_3_4 = mul i41 %tmp_260, %tmp_260
  %p_Val2_20_3_4 = add i41 %tmp_2919_3_4, %tmp_2820_3_4
  %tmp_261 = sext i27 %p_Val2_18_3_4 to i41
  %tmp_3118_3_4_cast = mul i41 %tmp_261, %tmp_261
  %p_Val2_21_3_4 = add i41 %p_Val2_20_3_4, %tmp_3118_3_4_cast
  %tmp_262 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_3_4, i32 14, i32 28)
  %x_in_V_read_assign_26 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_262, i33 0)
  %sqrtX_out_V_write_as_26 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_26) nounwind
  %tmp_800 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_3_4, i32 14, i32 40)
  %OP1_V_3_4_cast_cast = sext i27 %tmp_800 to i42
  %tmp_801 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_26, i32 10, i32 24)
  %OP2_V_3_3_4_cast_cas = zext i15 %tmp_801 to i42
  %tmp_37_3_4 = mul i42 %OP2_V_3_3_4_cast_cas, %OP1_V_3_4_cast_cast
  %tmp_38_3_4 = icmp eq i42 %tmp_37_3_4, 0
  %dp_4_3_9 = sext i42 %tmp_37_3_4 to i64
  %dp_4_3_4 = sitofp i64 %dp_4_3_9 to double
  %res_V_3_4 = bitcast double %dp_4_3_4 to i64
  %p_Result_3_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_3_4, i32 52, i32 62)
  %exp_V_5_3_4 = add i11 -28, %p_Result_3_4
  %p_Result_43_3_4 = call i64 @llvm.part.set.i64.i11(i64 %res_V_3_4, i11 %exp_V_5_3_4, i32 52, i32 62) nounwind
  %dp_3_4 = bitcast i64 %p_Result_43_3_4 to double
  %p_0_i_3_4 = select i1 %tmp_38_3_4, double 0.000000e+00, double %dp_3_4
  %tmp_39_3_4 = fdiv double -1.000000e+00, %p_0_i_3_4
  %prefact_3_4 = fmul double %tmp_39_3_4, 0.000000e+00
  %ireg_V_3_4 = bitcast double %prefact_3_4 to i64
  %tmp_802 = trunc i64 %ireg_V_3_4 to i63
  %tmp_803 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_3_4, i32 63)
  %p_Result_40_3_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_3_4, i32 52, i32 62)
  %tmp_42_3_4 = zext i11 %p_Result_40_3_4 to i12
  %tmp_804 = trunc i64 %ireg_V_3_4 to i52
  %tmp_143 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_804)
  %p_Result_45_3_4 = zext i53 %tmp_143 to i54
  %man_V_1_3_4 = sub i54 0, %p_Result_45_3_4
  %man_V_2_3_4 = select i1 %tmp_803, i54 %man_V_1_3_4, i54 %p_Result_45_3_4
  %tmp_44_3_4 = icmp eq i63 %tmp_802, 0
  %F2_3_4 = sub i12 1075, %tmp_42_3_4
  %tmp_46_3_4 = icmp sgt i12 %F2_3_4, 14
  %tmp_47_3_4 = add i12 -14, %F2_3_4
  %tmp_48_3_4 = sub i12 14, %F2_3_4
  %sh_amt_3_4 = select i1 %tmp_46_3_4, i12 %tmp_47_3_4, i12 %tmp_48_3_4
  %sh_amt_3_4_cast = sext i12 %sh_amt_3_4 to i32
  %tmp_49_3_4 = icmp eq i12 %F2_3_4, 14
  %tmp_805 = trunc i54 %man_V_2_3_4 to i27
  %tmp_51_3_4 = icmp ult i12 %sh_amt_3_4, 54
  %tmp_53_3_4 = icmp ult i12 %sh_amt_3_4, 27
  %tmp_54_3_4 = zext i32 %sh_amt_3_4_cast to i54
  %tmp_55_3_4 = ashr i54 %man_V_2_3_4, %tmp_54_3_4
  %tmp_806 = trunc i54 %tmp_55_3_4 to i27
  %storemerge_3_4 = select i1 %tmp_803, i27 -1, i27 0
  %tmp_57_3_4 = sext i27 %tmp_805 to i32
  %tmp_58_3_4 = shl i32 %tmp_57_3_4, %sh_amt_3_4_cast
  %tmp_807 = trunc i32 %tmp_58_3_4 to i27
  %sel_tmp243 = xor i1 %tmp_44_3_4, true
  %sel_tmp244 = and i1 %tmp_49_3_4, %sel_tmp243
  %sel_tmp681_demorgan = or i1 %tmp_44_3_4, %tmp_49_3_4
  %sel_tmp245 = xor i1 %sel_tmp681_demorgan, true
  %sel_tmp246 = and i1 %tmp_46_3_4, %sel_tmp245
  %sel_tmp247 = xor i1 %tmp_51_3_4, true
  %sel_tmp248 = and i1 %sel_tmp246, %sel_tmp247
  %sel_tmp249 = and i1 %sel_tmp246, %tmp_51_3_4
  %sel_tmp696_demorgan = or i1 %sel_tmp681_demorgan, %tmp_46_3_4
  %sel_tmp250 = xor i1 %sel_tmp696_demorgan, true
  %sel_tmp251 = and i1 %tmp_53_3_4, %sel_tmp250
  %newSel108 = select i1 %sel_tmp251, i27 %tmp_807, i27 %tmp_806
  %or_cond81 = or i1 %sel_tmp251, %sel_tmp249
  %newSel109 = select i1 %sel_tmp248, i27 %storemerge_3_4, i27 %tmp_805
  %or_cond82 = or i1 %sel_tmp248, %sel_tmp244
  %newSel110 = select i1 %or_cond81, i27 %newSel108, i27 %newSel109
  %or_cond83 = or i1 %or_cond81, %or_cond82
  %newSel111 = select i1 %or_cond83, i27 %newSel110, i27 0
  %tmp_263 = sext i27 %newSel111 to i41
  %tmp_264 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_3_2, i32 14, i32 40)
  %tmp_61_3_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_264, i14 0)
  %tmp_6223_3_4_cast = mul i41 %tmp_263, %tmp_259
  %p_Val2_30_3_4 = add i41 %tmp_61_3_4, %tmp_6223_3_4_cast
  %tmp_265 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_3_2, i32 14, i32 40)
  %tmp_66_3_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_265, i14 0)
  %tmp_6724_3_4_cast = mul i41 %tmp_263, %tmp_260
  %p_Val2_33_3_4 = add i41 %tmp_66_3_4, %tmp_6724_3_4_cast
  %tmp_266 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_3_2, i32 14, i32 40)
  %tmp_71_3_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_266, i14 0)
  %tmp_7225_3_4_cast = mul i41 %tmp_263, %tmp_261
  %p_Val2_36_3_4 = add i41 %tmp_71_3_4, %tmp_7225_3_4_cast
  %p_Val2_12_3_5 = sub i27 %p_x_V_3_load, %p_x_V_5_load
  %p_Val2_15_3_5 = sub i27 %p_y_V_3_load, %p_y_V_5_load
  %p_Val2_18_3_5 = sub i27 %p_z_V_3_load, %p_z_V_5_load
  %tmp_267 = sext i27 %p_Val2_12_3_5 to i41
  %tmp_268 = sext i27 %p_Val2_15_3_5 to i41
  %tmp_2820_3_5 = mul i41 %tmp_267, %tmp_267
  %tmp_2919_3_5 = mul i41 %tmp_268, %tmp_268
  %p_Val2_20_3_5 = add i41 %tmp_2919_3_5, %tmp_2820_3_5
  %tmp_269 = sext i27 %p_Val2_18_3_5 to i41
  %tmp_3118_3_5_cast = mul i41 %tmp_269, %tmp_269
  %p_Val2_21_3_5 = add i41 %p_Val2_20_3_5, %tmp_3118_3_5_cast
  %tmp_270 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_3_5, i32 14, i32 28)
  %x_in_V_read_assign_27 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_270, i33 0)
  %sqrtX_out_V_write_as_27 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_27) nounwind
  %tmp_808 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_3_5, i32 14, i32 40)
  %OP1_V_3_5_cast_cast = sext i27 %tmp_808 to i42
  %tmp_809 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_27, i32 10, i32 24)
  %OP2_V_3_3_5_cast_cas = zext i15 %tmp_809 to i42
  %tmp_37_3_5 = mul i42 %OP2_V_3_3_5_cast_cas, %OP1_V_3_5_cast_cast
  %tmp_38_3_5 = icmp eq i42 %tmp_37_3_5, 0
  %dp_4_3_10 = sext i42 %tmp_37_3_5 to i64
  %dp_4_3_5 = sitofp i64 %dp_4_3_10 to double
  %res_V_3_5 = bitcast double %dp_4_3_5 to i64
  %p_Result_3_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_3_5, i32 52, i32 62)
  %exp_V_5_3_5 = add i11 -28, %p_Result_3_5
  %p_Result_43_3_5 = call i64 @llvm.part.set.i64.i11(i64 %res_V_3_5, i11 %exp_V_5_3_5, i32 52, i32 62) nounwind
  %dp_3_5 = bitcast i64 %p_Result_43_3_5 to double
  %p_0_i_3_5 = select i1 %tmp_38_3_5, double 0.000000e+00, double %dp_3_5
  %tmp_39_3_5 = fdiv double -1.000000e+00, %p_0_i_3_5
  %prefact_3_5 = fmul double %tmp_39_3_5, 0x3F4E000000000000
  %ireg_V_3_5 = bitcast double %prefact_3_5 to i64
  %tmp_810 = trunc i64 %ireg_V_3_5 to i63
  %tmp_811 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_3_5, i32 63)
  %p_Result_40_3_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_3_5, i32 52, i32 62)
  %tmp_42_3_5 = zext i11 %p_Result_40_3_5 to i12
  %tmp_812 = trunc i64 %ireg_V_3_5 to i52
  %tmp_144 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_812)
  %p_Result_45_3_5 = zext i53 %tmp_144 to i54
  %man_V_1_3_5 = sub i54 0, %p_Result_45_3_5
  %man_V_2_3_5 = select i1 %tmp_811, i54 %man_V_1_3_5, i54 %p_Result_45_3_5
  %tmp_44_3_5 = icmp eq i63 %tmp_810, 0
  %F2_3_5 = sub i12 1075, %tmp_42_3_5
  %tmp_46_3_5 = icmp sgt i12 %F2_3_5, 14
  %tmp_47_3_5 = add i12 -14, %F2_3_5
  %tmp_48_3_5 = sub i12 14, %F2_3_5
  %sh_amt_3_5 = select i1 %tmp_46_3_5, i12 %tmp_47_3_5, i12 %tmp_48_3_5
  %sh_amt_3_5_cast = sext i12 %sh_amt_3_5 to i32
  %tmp_49_3_5 = icmp eq i12 %F2_3_5, 14
  %tmp_813 = trunc i54 %man_V_2_3_5 to i27
  %tmp_51_3_5 = icmp ult i12 %sh_amt_3_5, 54
  %tmp_53_3_5 = icmp ult i12 %sh_amt_3_5, 27
  %tmp_54_3_5 = zext i32 %sh_amt_3_5_cast to i54
  %tmp_55_3_5 = ashr i54 %man_V_2_3_5, %tmp_54_3_5
  %tmp_814 = trunc i54 %tmp_55_3_5 to i27
  %storemerge_3_5 = select i1 %tmp_811, i27 -1, i27 0
  %tmp_57_3_5 = sext i27 %tmp_813 to i32
  %tmp_58_3_5 = shl i32 %tmp_57_3_5, %sh_amt_3_5_cast
  %tmp_815 = trunc i32 %tmp_58_3_5 to i27
  %sel_tmp252 = xor i1 %tmp_44_3_5, true
  %sel_tmp253 = and i1 %tmp_49_3_5, %sel_tmp252
  %sel_tmp706_demorgan = or i1 %tmp_44_3_5, %tmp_49_3_5
  %sel_tmp254 = xor i1 %sel_tmp706_demorgan, true
  %sel_tmp255 = and i1 %tmp_46_3_5, %sel_tmp254
  %sel_tmp256 = xor i1 %tmp_51_3_5, true
  %sel_tmp257 = and i1 %sel_tmp255, %sel_tmp256
  %sel_tmp258 = and i1 %sel_tmp255, %tmp_51_3_5
  %sel_tmp721_demorgan = or i1 %sel_tmp706_demorgan, %tmp_46_3_5
  %sel_tmp259 = xor i1 %sel_tmp721_demorgan, true
  %sel_tmp260 = and i1 %tmp_53_3_5, %sel_tmp259
  %newSel112 = select i1 %sel_tmp260, i27 %tmp_815, i27 %tmp_814
  %or_cond84 = or i1 %sel_tmp260, %sel_tmp258
  %newSel113 = select i1 %sel_tmp257, i27 %storemerge_3_5, i27 %tmp_813
  %or_cond85 = or i1 %sel_tmp257, %sel_tmp253
  %newSel114 = select i1 %or_cond84, i27 %newSel112, i27 %newSel113
  %or_cond86 = or i1 %or_cond84, %or_cond85
  %newSel115 = select i1 %or_cond86, i27 %newSel114, i27 0
  %tmp_271 = sext i27 %newSel115 to i41
  %tmp_272 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_3_4, i32 14, i32 40)
  %tmp_61_3_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_272, i14 0)
  %tmp_6223_3_5_cast = mul i41 %tmp_271, %tmp_267
  %p_Val2_30_3_5 = add i41 %tmp_61_3_5, %tmp_6223_3_5_cast
  %tmp_273 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_3_4, i32 14, i32 40)
  %tmp_66_3_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_273, i14 0)
  %tmp_6724_3_5_cast = mul i41 %tmp_271, %tmp_268
  %p_Val2_33_3_5 = add i41 %tmp_66_3_5, %tmp_6724_3_5_cast
  %tmp_274 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_3_4, i32 14, i32 40)
  %tmp_71_3_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_274, i14 0)
  %tmp_7225_3_5_cast = mul i41 %tmp_271, %tmp_269
  %p_Val2_36_3_5 = add i41 %tmp_71_3_5, %tmp_7225_3_5_cast
  %p_Val2_12_3_6 = sub i27 %p_x_V_3_load, %p_x_V_6_load
  %p_Val2_15_3_6 = sub i27 %p_y_V_3_load, %p_y_V_6_load
  %p_Val2_18_3_6 = sub i27 %p_z_V_3_load, %p_z_V_6_load
  %tmp_275 = sext i27 %p_Val2_12_3_6 to i41
  %tmp_276 = sext i27 %p_Val2_15_3_6 to i41
  %tmp_2820_3_6 = mul i41 %tmp_275, %tmp_275
  %tmp_2919_3_6 = mul i41 %tmp_276, %tmp_276
  %p_Val2_20_3_6 = add i41 %tmp_2919_3_6, %tmp_2820_3_6
  %tmp_277 = sext i27 %p_Val2_18_3_6 to i41
  %tmp_3118_3_6_cast = mul i41 %tmp_277, %tmp_277
  %p_Val2_21_3_6 = add i41 %p_Val2_20_3_6, %tmp_3118_3_6_cast
  %tmp_278 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_3_6, i32 14, i32 28)
  %x_in_V_read_assign_28 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_278, i33 0)
  %sqrtX_out_V_write_as_28 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_28) nounwind
  %tmp_816 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_3_6, i32 14, i32 40)
  %OP1_V_3_6_cast_cast = sext i27 %tmp_816 to i42
  %tmp_817 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_28, i32 10, i32 24)
  %OP2_V_3_3_6_cast_cas = zext i15 %tmp_817 to i42
  %tmp_37_3_6 = mul i42 %OP2_V_3_3_6_cast_cas, %OP1_V_3_6_cast_cast
  %tmp_38_3_6 = icmp eq i42 %tmp_37_3_6, 0
  %dp_4_3_11 = sext i42 %tmp_37_3_6 to i64
  %dp_4_3_6 = sitofp i64 %dp_4_3_11 to double
  %res_V_3_6 = bitcast double %dp_4_3_6 to i64
  %p_Result_3_6 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_3_6, i32 52, i32 62)
  %exp_V_5_3_6 = add i11 -28, %p_Result_3_6
  %p_Result_43_3_6 = call i64 @llvm.part.set.i64.i11(i64 %res_V_3_6, i11 %exp_V_5_3_6, i32 52, i32 62) nounwind
  %dp_3_6 = bitcast i64 %p_Result_43_3_6 to double
  %p_0_i_3_6 = select i1 %tmp_38_3_6, double 0.000000e+00, double %dp_3_6
  %tmp_39_3_6 = fdiv double -1.000000e+00, %p_0_i_3_6
  %prefact_3_6 = fmul double %tmp_39_3_6, 0x3F30000000000000
  %ireg_V_3_6 = bitcast double %prefact_3_6 to i64
  %tmp_818 = trunc i64 %ireg_V_3_6 to i63
  %tmp_819 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_3_6, i32 63)
  %p_Result_40_3_6 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_3_6, i32 52, i32 62)
  %tmp_42_3_6 = zext i11 %p_Result_40_3_6 to i12
  %tmp_820 = trunc i64 %ireg_V_3_6 to i52
  %tmp_145 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_820)
  %p_Result_45_3_6 = zext i53 %tmp_145 to i54
  %man_V_1_3_6 = sub i54 0, %p_Result_45_3_6
  %man_V_2_3_6 = select i1 %tmp_819, i54 %man_V_1_3_6, i54 %p_Result_45_3_6
  %tmp_44_3_6 = icmp eq i63 %tmp_818, 0
  %F2_3_6 = sub i12 1075, %tmp_42_3_6
  %tmp_46_3_6 = icmp sgt i12 %F2_3_6, 14
  %tmp_47_3_6 = add i12 -14, %F2_3_6
  %tmp_48_3_6 = sub i12 14, %F2_3_6
  %sh_amt_3_6 = select i1 %tmp_46_3_6, i12 %tmp_47_3_6, i12 %tmp_48_3_6
  %sh_amt_3_6_cast = sext i12 %sh_amt_3_6 to i32
  %tmp_49_3_6 = icmp eq i12 %F2_3_6, 14
  %tmp_821 = trunc i54 %man_V_2_3_6 to i27
  %tmp_51_3_6 = icmp ult i12 %sh_amt_3_6, 54
  %tmp_53_3_6 = icmp ult i12 %sh_amt_3_6, 27
  %tmp_54_3_6 = zext i32 %sh_amt_3_6_cast to i54
  %tmp_55_3_6 = ashr i54 %man_V_2_3_6, %tmp_54_3_6
  %tmp_822 = trunc i54 %tmp_55_3_6 to i27
  %storemerge_3_6 = select i1 %tmp_819, i27 -1, i27 0
  %tmp_57_3_6 = sext i27 %tmp_821 to i32
  %tmp_58_3_6 = shl i32 %tmp_57_3_6, %sh_amt_3_6_cast
  %tmp_823 = trunc i32 %tmp_58_3_6 to i27
  %sel_tmp261 = xor i1 %tmp_44_3_6, true
  %sel_tmp262 = and i1 %tmp_49_3_6, %sel_tmp261
  %sel_tmp731_demorgan = or i1 %tmp_44_3_6, %tmp_49_3_6
  %sel_tmp263 = xor i1 %sel_tmp731_demorgan, true
  %sel_tmp264 = and i1 %tmp_46_3_6, %sel_tmp263
  %sel_tmp265 = xor i1 %tmp_51_3_6, true
  %sel_tmp266 = and i1 %sel_tmp264, %sel_tmp265
  %sel_tmp267 = and i1 %sel_tmp264, %tmp_51_3_6
  %sel_tmp746_demorgan = or i1 %sel_tmp731_demorgan, %tmp_46_3_6
  %sel_tmp268 = xor i1 %sel_tmp746_demorgan, true
  %sel_tmp269 = and i1 %tmp_53_3_6, %sel_tmp268
  %newSel116 = select i1 %sel_tmp269, i27 %tmp_823, i27 %tmp_822
  %or_cond87 = or i1 %sel_tmp269, %sel_tmp267
  %newSel117 = select i1 %sel_tmp266, i27 %storemerge_3_6, i27 %tmp_821
  %or_cond88 = or i1 %sel_tmp266, %sel_tmp262
  %newSel118 = select i1 %or_cond87, i27 %newSel116, i27 %newSel117
  %or_cond89 = or i1 %or_cond87, %or_cond88
  %newSel119 = select i1 %or_cond89, i27 %newSel118, i27 0
  %tmp_279 = sext i27 %newSel119 to i41
  %tmp_280 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_3_5, i32 14, i32 40)
  %tmp_61_3_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_280, i14 0)
  %tmp_6223_3_6_cast = mul i41 %tmp_279, %tmp_275
  %p_Val2_30_3_6 = add i41 %tmp_61_3_6, %tmp_6223_3_6_cast
  %tmp_281 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_3_5, i32 14, i32 40)
  %tmp_66_3_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_281, i14 0)
  %tmp_6724_3_6_cast = mul i41 %tmp_279, %tmp_276
  %p_Val2_33_3_6 = add i41 %tmp_66_3_6, %tmp_6724_3_6_cast
  %tmp_282 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_3_5, i32 14, i32 40)
  %tmp_71_3_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_282, i14 0)
  %tmp_7225_3_6_cast = mul i41 %tmp_279, %tmp_277
  %p_Val2_36_3_6 = add i41 %tmp_71_3_6, %tmp_7225_3_6_cast
  %p_Val2_12_3_7 = sub i27 %p_x_V_3_load, %p_x_V_7_load
  %p_Val2_15_3_7 = sub i27 %p_y_V_3_load, %p_y_V_7_load
  %p_Val2_18_3_7 = sub i27 %p_z_V_3_load, %p_z_V_7_load
  %tmp_283 = sext i27 %p_Val2_12_3_7 to i41
  %tmp_284 = sext i27 %p_Val2_15_3_7 to i41
  %tmp_2820_3_7 = mul i41 %tmp_283, %tmp_283
  %tmp_2919_3_7 = mul i41 %tmp_284, %tmp_284
  %p_Val2_20_3_7 = add i41 %tmp_2919_3_7, %tmp_2820_3_7
  %tmp_285 = sext i27 %p_Val2_18_3_7 to i41
  %tmp_3118_3_7_cast = mul i41 %tmp_285, %tmp_285
  %p_Val2_21_3_7 = add i41 %p_Val2_20_3_7, %tmp_3118_3_7_cast
  %tmp_286 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_3_7, i32 14, i32 28)
  %x_in_V_read_assign_29 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_286, i33 0)
  %sqrtX_out_V_write_as_29 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_29) nounwind
  %tmp_824 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_3_7, i32 14, i32 40)
  %OP1_V_3_7_cast_cast = sext i27 %tmp_824 to i42
  %tmp_825 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_29, i32 10, i32 24)
  %OP2_V_3_3_7_cast_cas = zext i15 %tmp_825 to i42
  %tmp_37_3_7 = mul i42 %OP2_V_3_3_7_cast_cas, %OP1_V_3_7_cast_cast
  %tmp_38_3_7 = icmp eq i42 %tmp_37_3_7, 0
  %dp_4_3_12 = sext i42 %tmp_37_3_7 to i64
  %dp_4_3_7 = sitofp i64 %dp_4_3_12 to double
  %res_V_3_7 = bitcast double %dp_4_3_7 to i64
  %p_Result_3_7 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_3_7, i32 52, i32 62)
  %exp_V_5_3_7 = add i11 -28, %p_Result_3_7
  %p_Result_43_3_7 = call i64 @llvm.part.set.i64.i11(i64 %res_V_3_7, i11 %exp_V_5_3_7, i32 52, i32 62) nounwind
  %dp_3_7 = bitcast i64 %p_Result_43_3_7 to double
  %p_0_i_3_7 = select i1 %tmp_38_3_7, double 0.000000e+00, double %dp_3_7
  %tmp_39_3_7 = fdiv double -1.000000e+00, %p_0_i_3_7
  %prefact_3_7 = fmul double %tmp_39_3_7, 0.000000e+00
  %ireg_V_3_7 = bitcast double %prefact_3_7 to i64
  %tmp_826 = trunc i64 %ireg_V_3_7 to i63
  %tmp_827 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_3_7, i32 63)
  %p_Result_40_3_7 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_3_7, i32 52, i32 62)
  %tmp_42_3_7 = zext i11 %p_Result_40_3_7 to i12
  %tmp_828 = trunc i64 %ireg_V_3_7 to i52
  %tmp_146 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_828)
  %p_Result_45_3_7 = zext i53 %tmp_146 to i54
  %man_V_1_3_7 = sub i54 0, %p_Result_45_3_7
  %man_V_2_3_7 = select i1 %tmp_827, i54 %man_V_1_3_7, i54 %p_Result_45_3_7
  %tmp_44_3_7 = icmp eq i63 %tmp_826, 0
  %F2_3_7 = sub i12 1075, %tmp_42_3_7
  %tmp_46_3_7 = icmp sgt i12 %F2_3_7, 14
  %tmp_47_3_7 = add i12 -14, %F2_3_7
  %tmp_48_3_7 = sub i12 14, %F2_3_7
  %sh_amt_3_7 = select i1 %tmp_46_3_7, i12 %tmp_47_3_7, i12 %tmp_48_3_7
  %sh_amt_3_7_cast = sext i12 %sh_amt_3_7 to i32
  %tmp_49_3_7 = icmp eq i12 %F2_3_7, 14
  %tmp_829 = trunc i54 %man_V_2_3_7 to i27
  %tmp_51_3_7 = icmp ult i12 %sh_amt_3_7, 54
  %tmp_53_3_7 = icmp ult i12 %sh_amt_3_7, 27
  %tmp_54_3_7 = zext i32 %sh_amt_3_7_cast to i54
  %tmp_55_3_7 = ashr i54 %man_V_2_3_7, %tmp_54_3_7
  %tmp_830 = trunc i54 %tmp_55_3_7 to i27
  %storemerge_3_7 = select i1 %tmp_827, i27 -1, i27 0
  %tmp_57_3_7 = sext i27 %tmp_829 to i32
  %tmp_58_3_7 = shl i32 %tmp_57_3_7, %sh_amt_3_7_cast
  %tmp_831 = trunc i32 %tmp_58_3_7 to i27
  %sel_tmp270 = xor i1 %tmp_44_3_7, true
  %sel_tmp271 = and i1 %tmp_49_3_7, %sel_tmp270
  %sel_tmp756_demorgan = or i1 %tmp_44_3_7, %tmp_49_3_7
  %sel_tmp272 = xor i1 %sel_tmp756_demorgan, true
  %sel_tmp273 = and i1 %tmp_46_3_7, %sel_tmp272
  %sel_tmp274 = xor i1 %tmp_51_3_7, true
  %sel_tmp275 = and i1 %sel_tmp273, %sel_tmp274
  %sel_tmp276 = and i1 %sel_tmp273, %tmp_51_3_7
  %sel_tmp771_demorgan = or i1 %sel_tmp756_demorgan, %tmp_46_3_7
  %sel_tmp277 = xor i1 %sel_tmp771_demorgan, true
  %sel_tmp278 = and i1 %tmp_53_3_7, %sel_tmp277
  %newSel120 = select i1 %sel_tmp278, i27 %tmp_831, i27 %tmp_830
  %or_cond90 = or i1 %sel_tmp278, %sel_tmp276
  %newSel121 = select i1 %sel_tmp275, i27 %storemerge_3_7, i27 %tmp_829
  %or_cond91 = or i1 %sel_tmp275, %sel_tmp271
  %newSel122 = select i1 %or_cond90, i27 %newSel120, i27 %newSel121
  %or_cond92 = or i1 %or_cond90, %or_cond91
  %newSel123 = select i1 %or_cond92, i27 %newSel122, i27 0
  %tmp_287 = sext i27 %newSel123 to i41
  %tmp_288 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_3_6, i32 14, i32 40)
  %tmp_61_3_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_288, i14 0)
  %tmp_6223_3_7_cast = mul i41 %tmp_287, %tmp_283
  %p_Val2_30_3_7 = add i41 %tmp_61_3_7, %tmp_6223_3_7_cast
  %tmp_289 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_3_6, i32 14, i32 40)
  %tmp_66_3_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_289, i14 0)
  %tmp_6724_3_7_cast = mul i41 %tmp_287, %tmp_284
  %p_Val2_33_3_7 = add i41 %tmp_66_3_7, %tmp_6724_3_7_cast
  %tmp_290 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_3_6, i32 14, i32 40)
  %tmp_71_3_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_290, i14 0)
  %tmp_7225_3_7_cast = mul i41 %tmp_287, %tmp_285
  %p_Val2_36_3_7 = add i41 %tmp_71_3_7, %tmp_7225_3_7_cast
  %p_Val2_12_3_8 = sub i27 %p_x_V_3_load, %p_x_V_8_load
  %p_Val2_15_3_8 = sub i27 %p_y_V_3_load, %p_y_V_8_load
  %p_Val2_18_3_8 = sub i27 %p_z_V_3_load, %p_z_V_8_load
  %tmp_291 = sext i27 %p_Val2_12_3_8 to i41
  %tmp_292 = sext i27 %p_Val2_15_3_8 to i41
  %tmp_2820_3_8 = mul i41 %tmp_291, %tmp_291
  %tmp_2919_3_8 = mul i41 %tmp_292, %tmp_292
  %p_Val2_20_3_8 = add i41 %tmp_2919_3_8, %tmp_2820_3_8
  %tmp_293 = sext i27 %p_Val2_18_3_8 to i41
  %tmp_3118_3_8_cast = mul i41 %tmp_293, %tmp_293
  %p_Val2_21_3_8 = add i41 %p_Val2_20_3_8, %tmp_3118_3_8_cast
  %tmp_294 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_3_8, i32 14, i32 28)
  %x_in_V_read_assign_30 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_294, i33 0)
  %sqrtX_out_V_write_as_30 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_30) nounwind
  %tmp_832 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_3_8, i32 14, i32 40)
  %OP1_V_3_8_cast_cast = sext i27 %tmp_832 to i42
  %tmp_833 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_30, i32 10, i32 24)
  %OP2_V_3_3_8_cast_cas = zext i15 %tmp_833 to i42
  %tmp_37_3_8 = mul i42 %OP2_V_3_3_8_cast_cas, %OP1_V_3_8_cast_cast
  %tmp_38_3_8 = icmp eq i42 %tmp_37_3_8, 0
  %dp_4_3_13 = sext i42 %tmp_37_3_8 to i64
  %dp_4_3_8 = sitofp i64 %dp_4_3_13 to double
  %res_V_3_8 = bitcast double %dp_4_3_8 to i64
  %p_Result_3_8 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_3_8, i32 52, i32 62)
  %exp_V_5_3_8 = add i11 -28, %p_Result_3_8
  %p_Result_43_3_8 = call i64 @llvm.part.set.i64.i11(i64 %res_V_3_8, i11 %exp_V_5_3_8, i32 52, i32 62) nounwind
  %dp_3_8 = bitcast i64 %p_Result_43_3_8 to double
  %p_0_i_3_8 = select i1 %tmp_38_3_8, double 0.000000e+00, double %dp_3_8
  %tmp_39_3_8 = fdiv double -1.000000e+00, %p_0_i_3_8
  %prefact_3_8 = fmul double %tmp_39_3_8, 0.000000e+00
  %ireg_V_3_8 = bitcast double %prefact_3_8 to i64
  %tmp_834 = trunc i64 %ireg_V_3_8 to i63
  %tmp_835 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_3_8, i32 63)
  %p_Result_40_3_8 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_3_8, i32 52, i32 62)
  %tmp_42_3_8 = zext i11 %p_Result_40_3_8 to i12
  %tmp_836 = trunc i64 %ireg_V_3_8 to i52
  %tmp_147 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_836)
  %p_Result_45_3_8 = zext i53 %tmp_147 to i54
  %man_V_1_3_8 = sub i54 0, %p_Result_45_3_8
  %man_V_2_3_8 = select i1 %tmp_835, i54 %man_V_1_3_8, i54 %p_Result_45_3_8
  %tmp_44_3_8 = icmp eq i63 %tmp_834, 0
  %F2_3_8 = sub i12 1075, %tmp_42_3_8
  %tmp_46_3_8 = icmp sgt i12 %F2_3_8, 14
  %tmp_47_3_8 = add i12 -14, %F2_3_8
  %tmp_48_3_8 = sub i12 14, %F2_3_8
  %sh_amt_3_8 = select i1 %tmp_46_3_8, i12 %tmp_47_3_8, i12 %tmp_48_3_8
  %sh_amt_3_8_cast = sext i12 %sh_amt_3_8 to i32
  %tmp_49_3_8 = icmp eq i12 %F2_3_8, 14
  %tmp_837 = trunc i54 %man_V_2_3_8 to i27
  %tmp_51_3_8 = icmp ult i12 %sh_amt_3_8, 54
  %tmp_53_3_8 = icmp ult i12 %sh_amt_3_8, 27
  %tmp_54_3_8 = zext i32 %sh_amt_3_8_cast to i54
  %tmp_55_3_8 = ashr i54 %man_V_2_3_8, %tmp_54_3_8
  %tmp_838 = trunc i54 %tmp_55_3_8 to i27
  %storemerge_3_8 = select i1 %tmp_835, i27 -1, i27 0
  %tmp_57_3_8 = sext i27 %tmp_837 to i32
  %tmp_58_3_8 = shl i32 %tmp_57_3_8, %sh_amt_3_8_cast
  %tmp_839 = trunc i32 %tmp_58_3_8 to i27
  %sel_tmp279 = xor i1 %tmp_44_3_8, true
  %sel_tmp280 = and i1 %tmp_49_3_8, %sel_tmp279
  %sel_tmp781_demorgan = or i1 %tmp_44_3_8, %tmp_49_3_8
  %sel_tmp281 = xor i1 %sel_tmp781_demorgan, true
  %sel_tmp282 = and i1 %tmp_46_3_8, %sel_tmp281
  %sel_tmp283 = xor i1 %tmp_51_3_8, true
  %sel_tmp284 = and i1 %sel_tmp282, %sel_tmp283
  %sel_tmp285 = and i1 %sel_tmp282, %tmp_51_3_8
  %sel_tmp796_demorgan = or i1 %sel_tmp781_demorgan, %tmp_46_3_8
  %sel_tmp286 = xor i1 %sel_tmp796_demorgan, true
  %sel_tmp287 = and i1 %tmp_53_3_8, %sel_tmp286
  %newSel124 = select i1 %sel_tmp287, i27 %tmp_839, i27 %tmp_838
  %or_cond93 = or i1 %sel_tmp287, %sel_tmp285
  %newSel125 = select i1 %sel_tmp284, i27 %storemerge_3_8, i27 %tmp_837
  %or_cond94 = or i1 %sel_tmp284, %sel_tmp280
  %newSel126 = select i1 %or_cond93, i27 %newSel124, i27 %newSel125
  %or_cond95 = or i1 %or_cond93, %or_cond94
  %newSel127 = select i1 %or_cond95, i27 %newSel126, i27 0
  %tmp_295 = sext i27 %newSel127 to i41
  %tmp_296 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_3_7, i32 14, i32 40)
  %tmp_61_3_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_296, i14 0)
  %tmp_6223_3_8_cast = mul i41 %tmp_295, %tmp_291
  %p_Val2_30_3_8 = add i41 %tmp_61_3_8, %tmp_6223_3_8_cast
  %tmp_64_3_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_3_8, i32 14, i32 40)
  store i27 %tmp_64_3_8, i27* @p_ax_V_3, align 8
  %tmp_297 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_3_7, i32 14, i32 40)
  %tmp_66_3_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_297, i14 0)
  %tmp_6724_3_8_cast = mul i41 %tmp_295, %tmp_292
  %p_Val2_33_3_8 = add i41 %tmp_66_3_8, %tmp_6724_3_8_cast
  %tmp_69_3_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_3_8, i32 14, i32 40)
  store i27 %tmp_69_3_8, i27* @p_ay_V_3, align 4
  %tmp_298 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_3_7, i32 14, i32 40)
  %tmp_71_3_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_298, i14 0)
  %tmp_7225_3_8_cast = mul i41 %tmp_295, %tmp_293
  %p_Val2_36_3_8 = add i41 %tmp_71_3_8, %tmp_7225_3_8_cast
  %tmp_74_3_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_3_8, i32 14, i32 40)
  store i27 %tmp_74_3_8, i27* @p_az_V_3, align 8
  %p_Val2_12_4 = sub i27 %p_x_V_4_load, %p_x_V_0_load
  %p_Val2_15_4 = sub i27 %p_y_V_4_load, %p_y_V_0_load
  %p_Val2_18_4 = sub i27 %p_z_V_4_load, %p_z_V_0_load
  %OP1_V_5_4_cast = sext i27 %p_Val2_12_4 to i41
  %OP1_V_6_4_cast = sext i27 %p_Val2_15_4 to i41
  %tmp_2820_4 = mul i41 %OP1_V_5_4_cast, %OP1_V_5_4_cast
  %tmp_2919_4 = mul i41 %OP1_V_6_4_cast, %OP1_V_6_4_cast
  %p_Val2_20_4 = add i41 %tmp_2919_4, %tmp_2820_4
  %OP1_V_7_4_cast = sext i27 %p_Val2_18_4 to i41
  %tmp_3118_4_cast = mul i41 %OP1_V_7_4_cast, %OP1_V_7_4_cast
  %p_Val2_21_4 = add i41 %p_Val2_20_4, %tmp_3118_4_cast
  %tmp_299 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_4, i32 14, i32 28)
  %x_in_V_read_assign_31 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_299, i33 0)
  %sqrtX_out_V_write_as_31 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_31) nounwind
  %tmp_840 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_4, i32 14, i32 40)
  %OP1_V_4_cast_cast = sext i27 %tmp_840 to i42
  %tmp_841 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_31, i32 10, i32 24)
  %OP2_V_3_4_cast_cast = zext i15 %tmp_841 to i42
  %tmp_37_4 = mul i42 %OP2_V_3_4_cast_cast, %OP1_V_4_cast_cast
  %tmp_38_4 = icmp eq i42 %tmp_37_4, 0
  %dp_4_11 = sext i42 %tmp_37_4 to i64
  %dp_4_4 = sitofp i64 %dp_4_11 to double
  %res_V_4 = bitcast double %dp_4_4 to i64
  %p_Result_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_4, i32 52, i32 62)
  %exp_V_5_4 = add i11 -28, %p_Result_4
  %p_Result_43_4 = call i64 @llvm.part.set.i64.i11(i64 %res_V_4, i11 %exp_V_5_4, i32 52, i32 62) nounwind
  %dp_2 = bitcast i64 %p_Result_43_4 to double
  %p_0_i_4 = select i1 %tmp_38_4, double 0.000000e+00, double %dp_2
  %tmp_39_4 = fdiv double -1.000000e+00, %p_0_i_4
  %ireg_V_4 = bitcast double %tmp_39_4 to i64
  %tmp_842 = trunc i64 %ireg_V_4 to i63
  %tmp_843 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_4, i32 63)
  %p_Result_40_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_4, i32 52, i32 62)
  %tmp_42_4 = zext i11 %p_Result_40_4 to i12
  %tmp_844 = trunc i64 %ireg_V_4 to i52
  %tmp_148 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_844)
  %p_Result_45_4 = zext i53 %tmp_148 to i54
  %man_V_1_4 = sub i54 0, %p_Result_45_4
  %man_V_2_4 = select i1 %tmp_843, i54 %man_V_1_4, i54 %p_Result_45_4
  %tmp_44_4 = icmp eq i63 %tmp_842, 0
  %F2_4 = sub i12 1075, %tmp_42_4
  %tmp_46_4 = icmp sgt i12 %F2_4, 14
  %tmp_47_4 = add i12 -14, %F2_4
  %tmp_48_4 = sub i12 14, %F2_4
  %sh_amt_4 = select i1 %tmp_46_4, i12 %tmp_47_4, i12 %tmp_48_4
  %sh_amt_4_cast = sext i12 %sh_amt_4 to i32
  %tmp_49_4 = icmp eq i12 %F2_4, 14
  %tmp_845 = trunc i54 %man_V_2_4 to i27
  %tmp_51_4 = icmp ult i12 %sh_amt_4, 54
  %tmp_53_4 = icmp ult i12 %sh_amt_4, 27
  %tmp_54_4 = zext i32 %sh_amt_4_cast to i54
  %tmp_55_4 = ashr i54 %man_V_2_4, %tmp_54_4
  %tmp_846 = trunc i54 %tmp_55_4 to i27
  %storemerge_4 = select i1 %tmp_843, i27 -1, i27 0
  %tmp_57_4 = sext i27 %tmp_845 to i32
  %tmp_58_4 = shl i32 %tmp_57_4, %sh_amt_4_cast
  %tmp_847 = trunc i32 %tmp_58_4 to i27
  %sel_tmp288 = xor i1 %tmp_44_4, true
  %sel_tmp289 = and i1 %tmp_49_4, %sel_tmp288
  %sel_tmp806_demorgan = or i1 %tmp_44_4, %tmp_49_4
  %sel_tmp290 = xor i1 %sel_tmp806_demorgan, true
  %sel_tmp291 = and i1 %tmp_46_4, %sel_tmp290
  %sel_tmp292 = xor i1 %tmp_51_4, true
  %sel_tmp293 = and i1 %sel_tmp291, %sel_tmp292
  %sel_tmp294 = and i1 %sel_tmp291, %tmp_51_4
  %sel_tmp821_demorgan = or i1 %sel_tmp806_demorgan, %tmp_46_4
  %sel_tmp295 = xor i1 %sel_tmp821_demorgan, true
  %sel_tmp296 = and i1 %tmp_53_4, %sel_tmp295
  %newSel128 = select i1 %sel_tmp296, i27 %tmp_847, i27 %tmp_846
  %or_cond96 = or i1 %sel_tmp296, %sel_tmp294
  %newSel129 = select i1 %sel_tmp293, i27 %storemerge_4, i27 %tmp_845
  %or_cond97 = or i1 %sel_tmp293, %sel_tmp289
  %newSel130 = select i1 %or_cond96, i27 %newSel128, i27 %newSel129
  %or_cond98 = or i1 %or_cond96, %or_cond97
  %newSel131 = select i1 %or_cond98, i27 %newSel130, i27 0
  %OP1_V_1_4_cast = sext i27 %newSel131 to i41
  %p_Val2_29_4 = mul i41 %OP1_V_1_4_cast, %OP1_V_5_4_cast
  %p_Val2_32_4 = mul i41 %OP1_V_1_4_cast, %OP1_V_6_4_cast
  %p_Val2_35_4 = mul i41 %OP1_V_1_4_cast, %OP1_V_7_4_cast
  %p_Val2_12_4_1 = sub i27 %p_x_V_4_load, %p_x_V_1_load
  %p_Val2_15_4_1 = sub i27 %p_y_V_4_load, %p_y_V_1_load
  %p_Val2_18_4_1 = sub i27 %p_z_V_4_load, %p_z_V_1_load
  %tmp_300 = sext i27 %p_Val2_12_4_1 to i41
  %tmp_301 = sext i27 %p_Val2_15_4_1 to i41
  %tmp_2820_4_1 = mul i41 %tmp_300, %tmp_300
  %tmp_2919_4_1 = mul i41 %tmp_301, %tmp_301
  %p_Val2_20_4_1 = add i41 %tmp_2919_4_1, %tmp_2820_4_1
  %tmp_302 = sext i27 %p_Val2_18_4_1 to i41
  %tmp_3118_4_1_cast = mul i41 %tmp_302, %tmp_302
  %p_Val2_21_4_1 = add i41 %p_Val2_20_4_1, %tmp_3118_4_1_cast
  %tmp_303 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_4_1, i32 14, i32 28)
  %x_in_V_read_assign_32 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_303, i33 0)
  %sqrtX_out_V_write_as_32 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_32) nounwind
  %tmp_848 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_4_1, i32 14, i32 40)
  %OP1_V_4_1_cast_cast = sext i27 %tmp_848 to i42
  %tmp_849 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_32, i32 10, i32 24)
  %OP2_V_3_4_1_cast_cas = zext i15 %tmp_849 to i42
  %tmp_37_4_1 = mul i42 %OP2_V_3_4_1_cast_cas, %OP1_V_4_1_cast_cast
  %tmp_38_4_1 = icmp eq i42 %tmp_37_4_1, 0
  %dp_4_4_s = sext i42 %tmp_37_4_1 to i64
  %dp_4_4_1 = sitofp i64 %dp_4_4_s to double
  %res_V_4_1 = bitcast double %dp_4_4_1 to i64
  %p_Result_4_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_4_1, i32 52, i32 62)
  %exp_V_5_4_1 = add i11 -28, %p_Result_4_1
  %p_Result_43_4_1 = call i64 @llvm.part.set.i64.i11(i64 %res_V_4_1, i11 %exp_V_5_4_1, i32 52, i32 62) nounwind
  %dp_436_1 = bitcast i64 %p_Result_43_4_1 to double
  %p_0_i_4_1 = select i1 %tmp_38_4_1, double 0.000000e+00, double %dp_436_1
  %tmp_39_4_1 = fdiv double -1.000000e+00, %p_0_i_4_1
  %prefact_4_1 = fmul double %tmp_39_4_1, 0.000000e+00
  %ireg_V_4_1 = bitcast double %prefact_4_1 to i64
  %tmp_850 = trunc i64 %ireg_V_4_1 to i63
  %tmp_851 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_4_1, i32 63)
  %p_Result_40_4_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_4_1, i32 52, i32 62)
  %tmp_42_4_1 = zext i11 %p_Result_40_4_1 to i12
  %tmp_852 = trunc i64 %ireg_V_4_1 to i52
  %tmp_149 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_852)
  %p_Result_45_4_1 = zext i53 %tmp_149 to i54
  %man_V_1_4_1 = sub i54 0, %p_Result_45_4_1
  %man_V_2_4_1 = select i1 %tmp_851, i54 %man_V_1_4_1, i54 %p_Result_45_4_1
  %tmp_44_4_1 = icmp eq i63 %tmp_850, 0
  %F2_4_1 = sub i12 1075, %tmp_42_4_1
  %tmp_46_4_1 = icmp sgt i12 %F2_4_1, 14
  %tmp_47_4_1 = add i12 -14, %F2_4_1
  %tmp_48_4_1 = sub i12 14, %F2_4_1
  %sh_amt_4_1 = select i1 %tmp_46_4_1, i12 %tmp_47_4_1, i12 %tmp_48_4_1
  %sh_amt_4_1_cast = sext i12 %sh_amt_4_1 to i32
  %tmp_49_4_1 = icmp eq i12 %F2_4_1, 14
  %tmp_853 = trunc i54 %man_V_2_4_1 to i27
  %tmp_51_4_1 = icmp ult i12 %sh_amt_4_1, 54
  %tmp_53_4_1 = icmp ult i12 %sh_amt_4_1, 27
  %tmp_54_4_1 = zext i32 %sh_amt_4_1_cast to i54
  %tmp_55_4_1 = ashr i54 %man_V_2_4_1, %tmp_54_4_1
  %tmp_854 = trunc i54 %tmp_55_4_1 to i27
  %storemerge_4_1 = select i1 %tmp_851, i27 -1, i27 0
  %tmp_57_4_1 = sext i27 %tmp_853 to i32
  %tmp_58_4_1 = shl i32 %tmp_57_4_1, %sh_amt_4_1_cast
  %tmp_855 = trunc i32 %tmp_58_4_1 to i27
  %sel_tmp297 = xor i1 %tmp_44_4_1, true
  %sel_tmp298 = and i1 %tmp_49_4_1, %sel_tmp297
  %sel_tmp831_demorgan = or i1 %tmp_44_4_1, %tmp_49_4_1
  %sel_tmp299 = xor i1 %sel_tmp831_demorgan, true
  %sel_tmp300 = and i1 %tmp_46_4_1, %sel_tmp299
  %sel_tmp301 = xor i1 %tmp_51_4_1, true
  %sel_tmp302 = and i1 %sel_tmp300, %sel_tmp301
  %sel_tmp303 = and i1 %sel_tmp300, %tmp_51_4_1
  %sel_tmp846_demorgan = or i1 %sel_tmp831_demorgan, %tmp_46_4_1
  %sel_tmp304 = xor i1 %sel_tmp846_demorgan, true
  %sel_tmp305 = and i1 %tmp_53_4_1, %sel_tmp304
  %newSel132 = select i1 %sel_tmp305, i27 %tmp_855, i27 %tmp_854
  %or_cond99 = or i1 %sel_tmp305, %sel_tmp303
  %newSel133 = select i1 %sel_tmp302, i27 %storemerge_4_1, i27 %tmp_853
  %or_cond100 = or i1 %sel_tmp302, %sel_tmp298
  %newSel134 = select i1 %or_cond99, i27 %newSel132, i27 %newSel133
  %or_cond101 = or i1 %or_cond99, %or_cond100
  %newSel135 = select i1 %or_cond101, i27 %newSel134, i27 0
  %tmp_304 = sext i27 %newSel135 to i41
  %tmp_305 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_29_4, i32 14, i32 40)
  %tmp_61_4_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_305, i14 0)
  %tmp_6223_4_1_cast = mul i41 %tmp_304, %tmp_300
  %p_Val2_30_4_1 = add i41 %tmp_61_4_1, %tmp_6223_4_1_cast
  %tmp_306 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_32_4, i32 14, i32 40)
  %tmp_66_4_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_306, i14 0)
  %tmp_6724_4_1_cast = mul i41 %tmp_304, %tmp_301
  %p_Val2_33_4_1 = add i41 %tmp_66_4_1, %tmp_6724_4_1_cast
  %tmp_307 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_35_4, i32 14, i32 40)
  %tmp_71_4_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_307, i14 0)
  %tmp_7225_4_1_cast = mul i41 %tmp_304, %tmp_302
  %p_Val2_36_4_1 = add i41 %tmp_71_4_1, %tmp_7225_4_1_cast
  %p_Val2_12_4_2 = sub i27 %p_x_V_4_load, %p_x_V_2_load
  %p_Val2_15_4_2 = sub i27 %p_y_V_4_load, %p_y_V_2_load
  %p_Val2_18_4_2 = sub i27 %p_z_V_4_load, %p_z_V_2_load
  %tmp_308 = sext i27 %p_Val2_12_4_2 to i41
  %tmp_309 = sext i27 %p_Val2_15_4_2 to i41
  %tmp_2820_4_2 = mul i41 %tmp_308, %tmp_308
  %tmp_2919_4_2 = mul i41 %tmp_309, %tmp_309
  %p_Val2_20_4_2 = add i41 %tmp_2919_4_2, %tmp_2820_4_2
  %tmp_310 = sext i27 %p_Val2_18_4_2 to i41
  %tmp_3118_4_2_cast = mul i41 %tmp_310, %tmp_310
  %p_Val2_21_4_2 = add i41 %p_Val2_20_4_2, %tmp_3118_4_2_cast
  %tmp_311 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_4_2, i32 14, i32 28)
  %x_in_V_read_assign_33 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_311, i33 0)
  %sqrtX_out_V_write_as_33 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_33) nounwind
  %tmp_856 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_4_2, i32 14, i32 40)
  %OP1_V_4_2_cast_cast = sext i27 %tmp_856 to i42
  %tmp_857 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_33, i32 10, i32 24)
  %OP2_V_3_4_2_cast_cas = zext i15 %tmp_857 to i42
  %tmp_37_4_2 = mul i42 %OP2_V_3_4_2_cast_cas, %OP1_V_4_2_cast_cast
  %tmp_38_4_2 = icmp eq i42 %tmp_37_4_2, 0
  %dp_4_4_4 = sext i42 %tmp_37_4_2 to i64
  %dp_4_4_2 = sitofp i64 %dp_4_4_4 to double
  %res_V_4_2 = bitcast double %dp_4_4_2 to i64
  %p_Result_4_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_4_2, i32 52, i32 62)
  %exp_V_5_4_2 = add i11 -28, %p_Result_4_2
  %p_Result_43_4_2 = call i64 @llvm.part.set.i64.i11(i64 %res_V_4_2, i11 %exp_V_5_4_2, i32 52, i32 62) nounwind
  %dp_436_2 = bitcast i64 %p_Result_43_4_2 to double
  %p_0_i_4_2 = select i1 %tmp_38_4_2, double 0.000000e+00, double %dp_436_2
  %tmp_39_4_2 = fdiv double -1.000000e+00, %p_0_i_4_2
  %prefact_4_2 = fmul double %tmp_39_4_2, 0.000000e+00
  %ireg_V_4_2 = bitcast double %prefact_4_2 to i64
  %tmp_858 = trunc i64 %ireg_V_4_2 to i63
  %tmp_859 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_4_2, i32 63)
  %p_Result_40_4_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_4_2, i32 52, i32 62)
  %tmp_42_4_2 = zext i11 %p_Result_40_4_2 to i12
  %tmp_860 = trunc i64 %ireg_V_4_2 to i52
  %tmp_150 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_860)
  %p_Result_45_4_2 = zext i53 %tmp_150 to i54
  %man_V_1_4_2 = sub i54 0, %p_Result_45_4_2
  %man_V_2_4_2 = select i1 %tmp_859, i54 %man_V_1_4_2, i54 %p_Result_45_4_2
  %tmp_44_4_2 = icmp eq i63 %tmp_858, 0
  %F2_4_2 = sub i12 1075, %tmp_42_4_2
  %tmp_46_4_2 = icmp sgt i12 %F2_4_2, 14
  %tmp_47_4_2 = add i12 -14, %F2_4_2
  %tmp_48_4_2 = sub i12 14, %F2_4_2
  %sh_amt_4_2 = select i1 %tmp_46_4_2, i12 %tmp_47_4_2, i12 %tmp_48_4_2
  %sh_amt_4_2_cast = sext i12 %sh_amt_4_2 to i32
  %tmp_49_4_2 = icmp eq i12 %F2_4_2, 14
  %tmp_861 = trunc i54 %man_V_2_4_2 to i27
  %tmp_51_4_2 = icmp ult i12 %sh_amt_4_2, 54
  %tmp_53_4_2 = icmp ult i12 %sh_amt_4_2, 27
  %tmp_54_4_2 = zext i32 %sh_amt_4_2_cast to i54
  %tmp_55_4_2 = ashr i54 %man_V_2_4_2, %tmp_54_4_2
  %tmp_862 = trunc i54 %tmp_55_4_2 to i27
  %storemerge_4_2 = select i1 %tmp_859, i27 -1, i27 0
  %tmp_57_4_2 = sext i27 %tmp_861 to i32
  %tmp_58_4_2 = shl i32 %tmp_57_4_2, %sh_amt_4_2_cast
  %tmp_863 = trunc i32 %tmp_58_4_2 to i27
  %sel_tmp306 = xor i1 %tmp_44_4_2, true
  %sel_tmp307 = and i1 %tmp_49_4_2, %sel_tmp306
  %sel_tmp856_demorgan = or i1 %tmp_44_4_2, %tmp_49_4_2
  %sel_tmp308 = xor i1 %sel_tmp856_demorgan, true
  %sel_tmp309 = and i1 %tmp_46_4_2, %sel_tmp308
  %sel_tmp310 = xor i1 %tmp_51_4_2, true
  %sel_tmp311 = and i1 %sel_tmp309, %sel_tmp310
  %sel_tmp312 = and i1 %sel_tmp309, %tmp_51_4_2
  %sel_tmp871_demorgan = or i1 %sel_tmp856_demorgan, %tmp_46_4_2
  %sel_tmp313 = xor i1 %sel_tmp871_demorgan, true
  %sel_tmp314 = and i1 %tmp_53_4_2, %sel_tmp313
  %newSel136 = select i1 %sel_tmp314, i27 %tmp_863, i27 %tmp_862
  %or_cond102 = or i1 %sel_tmp314, %sel_tmp312
  %newSel137 = select i1 %sel_tmp311, i27 %storemerge_4_2, i27 %tmp_861
  %or_cond103 = or i1 %sel_tmp311, %sel_tmp307
  %newSel138 = select i1 %or_cond102, i27 %newSel136, i27 %newSel137
  %or_cond104 = or i1 %or_cond102, %or_cond103
  %newSel139 = select i1 %or_cond104, i27 %newSel138, i27 0
  %tmp_312 = sext i27 %newSel139 to i41
  %tmp_313 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_4_1, i32 14, i32 40)
  %tmp_61_4_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_313, i14 0)
  %tmp_6223_4_2_cast = mul i41 %tmp_312, %tmp_308
  %p_Val2_30_4_2 = add i41 %tmp_61_4_2, %tmp_6223_4_2_cast
  %tmp_314 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_4_1, i32 14, i32 40)
  %tmp_66_4_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_314, i14 0)
  %tmp_6724_4_2_cast = mul i41 %tmp_312, %tmp_309
  %p_Val2_33_4_2 = add i41 %tmp_66_4_2, %tmp_6724_4_2_cast
  %tmp_315 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_4_1, i32 14, i32 40)
  %tmp_71_4_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_315, i14 0)
  %tmp_7225_4_2_cast = mul i41 %tmp_312, %tmp_310
  %p_Val2_36_4_2 = add i41 %tmp_71_4_2, %tmp_7225_4_2_cast
  %p_Val2_12_4_3 = sub i27 %p_x_V_4_load, %p_x_V_3_load
  %p_Val2_15_4_3 = sub i27 %p_y_V_4_load, %p_y_V_3_load
  %p_Val2_18_4_3 = sub i27 %p_z_V_4_load, %p_z_V_3_load
  %tmp_316 = sext i27 %p_Val2_12_4_3 to i41
  %tmp_317 = sext i27 %p_Val2_15_4_3 to i41
  %tmp_2820_4_3 = mul i41 %tmp_316, %tmp_316
  %tmp_2919_4_3 = mul i41 %tmp_317, %tmp_317
  %p_Val2_20_4_3 = add i41 %tmp_2919_4_3, %tmp_2820_4_3
  %tmp_318 = sext i27 %p_Val2_18_4_3 to i41
  %tmp_3118_4_3_cast = mul i41 %tmp_318, %tmp_318
  %p_Val2_21_4_3 = add i41 %p_Val2_20_4_3, %tmp_3118_4_3_cast
  %tmp_319 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_4_3, i32 14, i32 28)
  %x_in_V_read_assign_34 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_319, i33 0)
  %sqrtX_out_V_write_as_34 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_34) nounwind
  %tmp_864 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_4_3, i32 14, i32 40)
  %OP1_V_4_3_cast_cast = sext i27 %tmp_864 to i42
  %tmp_865 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_34, i32 10, i32 24)
  %OP2_V_3_4_3_cast_cas = zext i15 %tmp_865 to i42
  %tmp_37_4_3 = mul i42 %OP2_V_3_4_3_cast_cas, %OP1_V_4_3_cast_cast
  %tmp_38_4_3 = icmp eq i42 %tmp_37_4_3, 0
  %dp_4_4_9 = sext i42 %tmp_37_4_3 to i64
  %dp_4_4_3 = sitofp i64 %dp_4_4_9 to double
  %res_V_4_3 = bitcast double %dp_4_4_3 to i64
  %p_Result_4_3 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_4_3, i32 52, i32 62)
  %exp_V_5_4_3 = add i11 -28, %p_Result_4_3
  %p_Result_43_4_3 = call i64 @llvm.part.set.i64.i11(i64 %res_V_4_3, i11 %exp_V_5_4_3, i32 52, i32 62) nounwind
  %dp_436_3 = bitcast i64 %p_Result_43_4_3 to double
  %p_0_i_4_3 = select i1 %tmp_38_4_3, double 0.000000e+00, double %dp_436_3
  %tmp_39_4_3 = fdiv double -1.000000e+00, %p_0_i_4_3
  %prefact_4_3 = fmul double %tmp_39_4_3, 0.000000e+00
  %ireg_V_4_3 = bitcast double %prefact_4_3 to i64
  %tmp_866 = trunc i64 %ireg_V_4_3 to i63
  %tmp_867 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_4_3, i32 63)
  %p_Result_40_4_3 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_4_3, i32 52, i32 62)
  %tmp_42_4_3 = zext i11 %p_Result_40_4_3 to i12
  %tmp_868 = trunc i64 %ireg_V_4_3 to i52
  %tmp_151 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_868)
  %p_Result_45_4_3 = zext i53 %tmp_151 to i54
  %man_V_1_4_3 = sub i54 0, %p_Result_45_4_3
  %man_V_2_4_3 = select i1 %tmp_867, i54 %man_V_1_4_3, i54 %p_Result_45_4_3
  %tmp_44_4_3 = icmp eq i63 %tmp_866, 0
  %F2_4_3 = sub i12 1075, %tmp_42_4_3
  %tmp_46_4_3 = icmp sgt i12 %F2_4_3, 14
  %tmp_47_4_3 = add i12 -14, %F2_4_3
  %tmp_48_4_3 = sub i12 14, %F2_4_3
  %sh_amt_4_3 = select i1 %tmp_46_4_3, i12 %tmp_47_4_3, i12 %tmp_48_4_3
  %sh_amt_4_3_cast = sext i12 %sh_amt_4_3 to i32
  %tmp_49_4_3 = icmp eq i12 %F2_4_3, 14
  %tmp_869 = trunc i54 %man_V_2_4_3 to i27
  %tmp_51_4_3 = icmp ult i12 %sh_amt_4_3, 54
  %tmp_53_4_3 = icmp ult i12 %sh_amt_4_3, 27
  %tmp_54_4_3 = zext i32 %sh_amt_4_3_cast to i54
  %tmp_55_4_3 = ashr i54 %man_V_2_4_3, %tmp_54_4_3
  %tmp_870 = trunc i54 %tmp_55_4_3 to i27
  %storemerge_4_3 = select i1 %tmp_867, i27 -1, i27 0
  %tmp_57_4_3 = sext i27 %tmp_869 to i32
  %tmp_58_4_3 = shl i32 %tmp_57_4_3, %sh_amt_4_3_cast
  %tmp_871 = trunc i32 %tmp_58_4_3 to i27
  %sel_tmp315 = xor i1 %tmp_44_4_3, true
  %sel_tmp316 = and i1 %tmp_49_4_3, %sel_tmp315
  %sel_tmp881_demorgan = or i1 %tmp_44_4_3, %tmp_49_4_3
  %sel_tmp317 = xor i1 %sel_tmp881_demorgan, true
  %sel_tmp318 = and i1 %tmp_46_4_3, %sel_tmp317
  %sel_tmp319 = xor i1 %tmp_51_4_3, true
  %sel_tmp320 = and i1 %sel_tmp318, %sel_tmp319
  %sel_tmp321 = and i1 %sel_tmp318, %tmp_51_4_3
  %sel_tmp896_demorgan = or i1 %sel_tmp881_demorgan, %tmp_46_4_3
  %sel_tmp322 = xor i1 %sel_tmp896_demorgan, true
  %sel_tmp323 = and i1 %tmp_53_4_3, %sel_tmp322
  %newSel140 = select i1 %sel_tmp323, i27 %tmp_871, i27 %tmp_870
  %or_cond105 = or i1 %sel_tmp323, %sel_tmp321
  %newSel141 = select i1 %sel_tmp320, i27 %storemerge_4_3, i27 %tmp_869
  %or_cond106 = or i1 %sel_tmp320, %sel_tmp316
  %newSel142 = select i1 %or_cond105, i27 %newSel140, i27 %newSel141
  %or_cond107 = or i1 %or_cond105, %or_cond106
  %newSel143 = select i1 %or_cond107, i27 %newSel142, i27 0
  %tmp_320 = sext i27 %newSel143 to i41
  %tmp_321 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_4_2, i32 14, i32 40)
  %tmp_61_4_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_321, i14 0)
  %tmp_6223_4_3_cast = mul i41 %tmp_320, %tmp_316
  %p_Val2_30_4_3 = add i41 %tmp_61_4_3, %tmp_6223_4_3_cast
  %tmp_322 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_4_2, i32 14, i32 40)
  %tmp_66_4_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_322, i14 0)
  %tmp_6724_4_3_cast = mul i41 %tmp_320, %tmp_317
  %p_Val2_33_4_3 = add i41 %tmp_66_4_3, %tmp_6724_4_3_cast
  %tmp_323 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_4_2, i32 14, i32 40)
  %tmp_71_4_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_323, i14 0)
  %tmp_7225_4_3_cast = mul i41 %tmp_320, %tmp_318
  %p_Val2_36_4_3 = add i41 %tmp_71_4_3, %tmp_7225_4_3_cast
  %p_Val2_12_4_5 = sub i27 %p_x_V_4_load, %p_x_V_5_load
  %p_Val2_15_4_5 = sub i27 %p_y_V_4_load, %p_y_V_5_load
  %p_Val2_18_4_5 = sub i27 %p_z_V_4_load, %p_z_V_5_load
  %tmp_324 = sext i27 %p_Val2_12_4_5 to i41
  %tmp_325 = sext i27 %p_Val2_15_4_5 to i41
  %tmp_2820_4_5 = mul i41 %tmp_324, %tmp_324
  %tmp_2919_4_5 = mul i41 %tmp_325, %tmp_325
  %p_Val2_20_4_5 = add i41 %tmp_2919_4_5, %tmp_2820_4_5
  %tmp_326 = sext i27 %p_Val2_18_4_5 to i41
  %tmp_3118_4_5_cast = mul i41 %tmp_326, %tmp_326
  %p_Val2_21_4_5 = add i41 %p_Val2_20_4_5, %tmp_3118_4_5_cast
  %tmp_327 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_4_5, i32 14, i32 28)
  %x_in_V_read_assign_35 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_327, i33 0)
  %sqrtX_out_V_write_as_35 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_35) nounwind
  %tmp_872 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_4_5, i32 14, i32 40)
  %OP1_V_4_5_cast_cast = sext i27 %tmp_872 to i42
  %tmp_873 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_35, i32 10, i32 24)
  %OP2_V_3_4_5_cast_cas = zext i15 %tmp_873 to i42
  %tmp_37_4_5 = mul i42 %OP2_V_3_4_5_cast_cas, %OP1_V_4_5_cast_cast
  %tmp_38_4_5 = icmp eq i42 %tmp_37_4_5, 0
  %dp_4_4_10 = sext i42 %tmp_37_4_5 to i64
  %dp_4_4_5 = sitofp i64 %dp_4_4_10 to double
  %res_V_4_5 = bitcast double %dp_4_4_5 to i64
  %p_Result_4_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_4_5, i32 52, i32 62)
  %exp_V_5_4_5 = add i11 -28, %p_Result_4_5
  %p_Result_43_4_5 = call i64 @llvm.part.set.i64.i11(i64 %res_V_4_5, i11 %exp_V_5_4_5, i32 52, i32 62) nounwind
  %dp_436_5 = bitcast i64 %p_Result_43_4_5 to double
  %p_0_i_4_5 = select i1 %tmp_38_4_5, double 0.000000e+00, double %dp_436_5
  %tmp_39_4_5 = fdiv double -1.000000e+00, %p_0_i_4_5
  %prefact_4_5 = fmul double %tmp_39_4_5, 0x3F4E000000000000
  %ireg_V_4_5 = bitcast double %prefact_4_5 to i64
  %tmp_874 = trunc i64 %ireg_V_4_5 to i63
  %tmp_875 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_4_5, i32 63)
  %p_Result_40_4_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_4_5, i32 52, i32 62)
  %tmp_42_4_5 = zext i11 %p_Result_40_4_5 to i12
  %tmp_876 = trunc i64 %ireg_V_4_5 to i52
  %tmp_152 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_876)
  %p_Result_45_4_5 = zext i53 %tmp_152 to i54
  %man_V_1_4_5 = sub i54 0, %p_Result_45_4_5
  %man_V_2_4_5 = select i1 %tmp_875, i54 %man_V_1_4_5, i54 %p_Result_45_4_5
  %tmp_44_4_5 = icmp eq i63 %tmp_874, 0
  %F2_4_5 = sub i12 1075, %tmp_42_4_5
  %tmp_46_4_5 = icmp sgt i12 %F2_4_5, 14
  %tmp_47_4_5 = add i12 -14, %F2_4_5
  %tmp_48_4_5 = sub i12 14, %F2_4_5
  %sh_amt_4_5 = select i1 %tmp_46_4_5, i12 %tmp_47_4_5, i12 %tmp_48_4_5
  %sh_amt_4_5_cast = sext i12 %sh_amt_4_5 to i32
  %tmp_49_4_5 = icmp eq i12 %F2_4_5, 14
  %tmp_877 = trunc i54 %man_V_2_4_5 to i27
  %tmp_51_4_5 = icmp ult i12 %sh_amt_4_5, 54
  %tmp_53_4_5 = icmp ult i12 %sh_amt_4_5, 27
  %tmp_54_4_5 = zext i32 %sh_amt_4_5_cast to i54
  %tmp_55_4_5 = ashr i54 %man_V_2_4_5, %tmp_54_4_5
  %tmp_878 = trunc i54 %tmp_55_4_5 to i27
  %storemerge_4_5 = select i1 %tmp_875, i27 -1, i27 0
  %tmp_57_4_5 = sext i27 %tmp_877 to i32
  %tmp_58_4_5 = shl i32 %tmp_57_4_5, %sh_amt_4_5_cast
  %tmp_879 = trunc i32 %tmp_58_4_5 to i27
  %sel_tmp324 = xor i1 %tmp_44_4_5, true
  %sel_tmp325 = and i1 %tmp_49_4_5, %sel_tmp324
  %sel_tmp906_demorgan = or i1 %tmp_44_4_5, %tmp_49_4_5
  %sel_tmp326 = xor i1 %sel_tmp906_demorgan, true
  %sel_tmp327 = and i1 %tmp_46_4_5, %sel_tmp326
  %sel_tmp328 = xor i1 %tmp_51_4_5, true
  %sel_tmp329 = and i1 %sel_tmp327, %sel_tmp328
  %sel_tmp330 = and i1 %sel_tmp327, %tmp_51_4_5
  %sel_tmp921_demorgan = or i1 %sel_tmp906_demorgan, %tmp_46_4_5
  %sel_tmp331 = xor i1 %sel_tmp921_demorgan, true
  %sel_tmp332 = and i1 %tmp_53_4_5, %sel_tmp331
  %newSel144 = select i1 %sel_tmp332, i27 %tmp_879, i27 %tmp_878
  %or_cond108 = or i1 %sel_tmp332, %sel_tmp330
  %newSel145 = select i1 %sel_tmp329, i27 %storemerge_4_5, i27 %tmp_877
  %or_cond109 = or i1 %sel_tmp329, %sel_tmp325
  %newSel146 = select i1 %or_cond108, i27 %newSel144, i27 %newSel145
  %or_cond110 = or i1 %or_cond108, %or_cond109
  %newSel147 = select i1 %or_cond110, i27 %newSel146, i27 0
  %tmp_328 = sext i27 %newSel147 to i41
  %tmp_329 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_4_3, i32 14, i32 40)
  %tmp_61_4_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_329, i14 0)
  %tmp_6223_4_5_cast = mul i41 %tmp_328, %tmp_324
  %p_Val2_30_4_5 = add i41 %tmp_61_4_5, %tmp_6223_4_5_cast
  %tmp_330 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_4_3, i32 14, i32 40)
  %tmp_66_4_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_330, i14 0)
  %tmp_6724_4_5_cast = mul i41 %tmp_328, %tmp_325
  %p_Val2_33_4_5 = add i41 %tmp_66_4_5, %tmp_6724_4_5_cast
  %tmp_331 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_4_3, i32 14, i32 40)
  %tmp_71_4_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_331, i14 0)
  %tmp_7225_4_5_cast = mul i41 %tmp_328, %tmp_326
  %p_Val2_36_4_5 = add i41 %tmp_71_4_5, %tmp_7225_4_5_cast
  %p_Val2_12_4_6 = sub i27 %p_x_V_4_load, %p_x_V_6_load
  %p_Val2_15_4_6 = sub i27 %p_y_V_4_load, %p_y_V_6_load
  %p_Val2_18_4_6 = sub i27 %p_z_V_4_load, %p_z_V_6_load
  %tmp_332 = sext i27 %p_Val2_12_4_6 to i41
  %tmp_333 = sext i27 %p_Val2_15_4_6 to i41
  %tmp_2820_4_6 = mul i41 %tmp_332, %tmp_332
  %tmp_2919_4_6 = mul i41 %tmp_333, %tmp_333
  %p_Val2_20_4_6 = add i41 %tmp_2919_4_6, %tmp_2820_4_6
  %tmp_334 = sext i27 %p_Val2_18_4_6 to i41
  %tmp_3118_4_6_cast = mul i41 %tmp_334, %tmp_334
  %p_Val2_21_4_6 = add i41 %p_Val2_20_4_6, %tmp_3118_4_6_cast
  %tmp_335 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_4_6, i32 14, i32 28)
  %x_in_V_read_assign_36 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_335, i33 0)
  %sqrtX_out_V_write_as_36 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_36) nounwind
  %tmp_880 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_4_6, i32 14, i32 40)
  %OP1_V_4_6_cast_cast = sext i27 %tmp_880 to i42
  %tmp_881 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_36, i32 10, i32 24)
  %OP2_V_3_4_6_cast_cas = zext i15 %tmp_881 to i42
  %tmp_37_4_6 = mul i42 %OP2_V_3_4_6_cast_cas, %OP1_V_4_6_cast_cast
  %tmp_38_4_6 = icmp eq i42 %tmp_37_4_6, 0
  %dp_4_4_11 = sext i42 %tmp_37_4_6 to i64
  %dp_4_4_6 = sitofp i64 %dp_4_4_11 to double
  %res_V_4_6 = bitcast double %dp_4_4_6 to i64
  %p_Result_4_6 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_4_6, i32 52, i32 62)
  %exp_V_5_4_6 = add i11 -28, %p_Result_4_6
  %p_Result_43_4_6 = call i64 @llvm.part.set.i64.i11(i64 %res_V_4_6, i11 %exp_V_5_4_6, i32 52, i32 62) nounwind
  %dp_436_6 = bitcast i64 %p_Result_43_4_6 to double
  %p_0_i_4_6 = select i1 %tmp_38_4_6, double 0.000000e+00, double %dp_436_6
  %tmp_39_4_6 = fdiv double -1.000000e+00, %p_0_i_4_6
  %prefact_4_6 = fmul double %tmp_39_4_6, 0x3F30000000000000
  %ireg_V_4_6 = bitcast double %prefact_4_6 to i64
  %tmp_882 = trunc i64 %ireg_V_4_6 to i63
  %tmp_883 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_4_6, i32 63)
  %p_Result_40_4_6 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_4_6, i32 52, i32 62)
  %tmp_42_4_6 = zext i11 %p_Result_40_4_6 to i12
  %tmp_884 = trunc i64 %ireg_V_4_6 to i52
  %tmp_153 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_884)
  %p_Result_45_4_6 = zext i53 %tmp_153 to i54
  %man_V_1_4_6 = sub i54 0, %p_Result_45_4_6
  %man_V_2_4_6 = select i1 %tmp_883, i54 %man_V_1_4_6, i54 %p_Result_45_4_6
  %tmp_44_4_6 = icmp eq i63 %tmp_882, 0
  %F2_4_6 = sub i12 1075, %tmp_42_4_6
  %tmp_46_4_6 = icmp sgt i12 %F2_4_6, 14
  %tmp_47_4_6 = add i12 -14, %F2_4_6
  %tmp_48_4_6 = sub i12 14, %F2_4_6
  %sh_amt_4_6 = select i1 %tmp_46_4_6, i12 %tmp_47_4_6, i12 %tmp_48_4_6
  %sh_amt_4_6_cast = sext i12 %sh_amt_4_6 to i32
  %tmp_49_4_6 = icmp eq i12 %F2_4_6, 14
  %tmp_885 = trunc i54 %man_V_2_4_6 to i27
  %tmp_51_4_6 = icmp ult i12 %sh_amt_4_6, 54
  %tmp_53_4_6 = icmp ult i12 %sh_amt_4_6, 27
  %tmp_54_4_6 = zext i32 %sh_amt_4_6_cast to i54
  %tmp_55_4_6 = ashr i54 %man_V_2_4_6, %tmp_54_4_6
  %tmp_886 = trunc i54 %tmp_55_4_6 to i27
  %storemerge_4_6 = select i1 %tmp_883, i27 -1, i27 0
  %tmp_57_4_6 = sext i27 %tmp_885 to i32
  %tmp_58_4_6 = shl i32 %tmp_57_4_6, %sh_amt_4_6_cast
  %tmp_887 = trunc i32 %tmp_58_4_6 to i27
  %sel_tmp333 = xor i1 %tmp_44_4_6, true
  %sel_tmp334 = and i1 %tmp_49_4_6, %sel_tmp333
  %sel_tmp931_demorgan = or i1 %tmp_44_4_6, %tmp_49_4_6
  %sel_tmp335 = xor i1 %sel_tmp931_demorgan, true
  %sel_tmp336 = and i1 %tmp_46_4_6, %sel_tmp335
  %sel_tmp337 = xor i1 %tmp_51_4_6, true
  %sel_tmp338 = and i1 %sel_tmp336, %sel_tmp337
  %sel_tmp339 = and i1 %sel_tmp336, %tmp_51_4_6
  %sel_tmp946_demorgan = or i1 %sel_tmp931_demorgan, %tmp_46_4_6
  %sel_tmp340 = xor i1 %sel_tmp946_demorgan, true
  %sel_tmp341 = and i1 %tmp_53_4_6, %sel_tmp340
  %newSel148 = select i1 %sel_tmp341, i27 %tmp_887, i27 %tmp_886
  %or_cond111 = or i1 %sel_tmp341, %sel_tmp339
  %newSel149 = select i1 %sel_tmp338, i27 %storemerge_4_6, i27 %tmp_885
  %or_cond112 = or i1 %sel_tmp338, %sel_tmp334
  %newSel150 = select i1 %or_cond111, i27 %newSel148, i27 %newSel149
  %or_cond113 = or i1 %or_cond111, %or_cond112
  %newSel151 = select i1 %or_cond113, i27 %newSel150, i27 0
  %tmp_336 = sext i27 %newSel151 to i41
  %tmp_337 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_4_5, i32 14, i32 40)
  %tmp_61_4_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_337, i14 0)
  %tmp_6223_4_6_cast = mul i41 %tmp_336, %tmp_332
  %p_Val2_30_4_6 = add i41 %tmp_61_4_6, %tmp_6223_4_6_cast
  %tmp_338 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_4_5, i32 14, i32 40)
  %tmp_66_4_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_338, i14 0)
  %tmp_6724_4_6_cast = mul i41 %tmp_336, %tmp_333
  %p_Val2_33_4_6 = add i41 %tmp_66_4_6, %tmp_6724_4_6_cast
  %tmp_339 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_4_5, i32 14, i32 40)
  %tmp_71_4_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_339, i14 0)
  %tmp_7225_4_6_cast = mul i41 %tmp_336, %tmp_334
  %p_Val2_36_4_6 = add i41 %tmp_71_4_6, %tmp_7225_4_6_cast
  %p_Val2_12_4_7 = sub i27 %p_x_V_4_load, %p_x_V_7_load
  %p_Val2_15_4_7 = sub i27 %p_y_V_4_load, %p_y_V_7_load
  %p_Val2_18_4_7 = sub i27 %p_z_V_4_load, %p_z_V_7_load
  %tmp_340 = sext i27 %p_Val2_12_4_7 to i41
  %tmp_341 = sext i27 %p_Val2_15_4_7 to i41
  %tmp_2820_4_7 = mul i41 %tmp_340, %tmp_340
  %tmp_2919_4_7 = mul i41 %tmp_341, %tmp_341
  %p_Val2_20_4_7 = add i41 %tmp_2919_4_7, %tmp_2820_4_7
  %tmp_342 = sext i27 %p_Val2_18_4_7 to i41
  %tmp_3118_4_7_cast = mul i41 %tmp_342, %tmp_342
  %p_Val2_21_4_7 = add i41 %p_Val2_20_4_7, %tmp_3118_4_7_cast
  %tmp_343 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_4_7, i32 14, i32 28)
  %x_in_V_read_assign_37 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_343, i33 0)
  %sqrtX_out_V_write_as_37 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_37) nounwind
  %tmp_888 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_4_7, i32 14, i32 40)
  %OP1_V_4_7_cast_cast = sext i27 %tmp_888 to i42
  %tmp_889 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_37, i32 10, i32 24)
  %OP2_V_3_4_7_cast_cas = zext i15 %tmp_889 to i42
  %tmp_37_4_7 = mul i42 %OP2_V_3_4_7_cast_cas, %OP1_V_4_7_cast_cast
  %tmp_38_4_7 = icmp eq i42 %tmp_37_4_7, 0
  %dp_4_4_12 = sext i42 %tmp_37_4_7 to i64
  %dp_4_4_7 = sitofp i64 %dp_4_4_12 to double
  %res_V_4_7 = bitcast double %dp_4_4_7 to i64
  %p_Result_4_7 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_4_7, i32 52, i32 62)
  %exp_V_5_4_7 = add i11 -28, %p_Result_4_7
  %p_Result_43_4_7 = call i64 @llvm.part.set.i64.i11(i64 %res_V_4_7, i11 %exp_V_5_4_7, i32 52, i32 62) nounwind
  %dp_436_7 = bitcast i64 %p_Result_43_4_7 to double
  %p_0_i_4_7 = select i1 %tmp_38_4_7, double 0.000000e+00, double %dp_436_7
  %tmp_39_4_7 = fdiv double -1.000000e+00, %p_0_i_4_7
  %prefact_4_7 = fmul double %tmp_39_4_7, 0.000000e+00
  %ireg_V_4_7 = bitcast double %prefact_4_7 to i64
  %tmp_890 = trunc i64 %ireg_V_4_7 to i63
  %tmp_891 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_4_7, i32 63)
  %p_Result_40_4_7 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_4_7, i32 52, i32 62)
  %tmp_42_4_7 = zext i11 %p_Result_40_4_7 to i12
  %tmp_892 = trunc i64 %ireg_V_4_7 to i52
  %tmp_154 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_892)
  %p_Result_45_4_7 = zext i53 %tmp_154 to i54
  %man_V_1_4_7 = sub i54 0, %p_Result_45_4_7
  %man_V_2_4_7 = select i1 %tmp_891, i54 %man_V_1_4_7, i54 %p_Result_45_4_7
  %tmp_44_4_7 = icmp eq i63 %tmp_890, 0
  %F2_4_7 = sub i12 1075, %tmp_42_4_7
  %tmp_46_4_7 = icmp sgt i12 %F2_4_7, 14
  %tmp_47_4_7 = add i12 -14, %F2_4_7
  %tmp_48_4_7 = sub i12 14, %F2_4_7
  %sh_amt_4_7 = select i1 %tmp_46_4_7, i12 %tmp_47_4_7, i12 %tmp_48_4_7
  %sh_amt_4_7_cast = sext i12 %sh_amt_4_7 to i32
  %tmp_49_4_7 = icmp eq i12 %F2_4_7, 14
  %tmp_893 = trunc i54 %man_V_2_4_7 to i27
  %tmp_51_4_7 = icmp ult i12 %sh_amt_4_7, 54
  %tmp_53_4_7 = icmp ult i12 %sh_amt_4_7, 27
  %tmp_54_4_7 = zext i32 %sh_amt_4_7_cast to i54
  %tmp_55_4_7 = ashr i54 %man_V_2_4_7, %tmp_54_4_7
  %tmp_894 = trunc i54 %tmp_55_4_7 to i27
  %storemerge_4_7 = select i1 %tmp_891, i27 -1, i27 0
  %tmp_57_4_7 = sext i27 %tmp_893 to i32
  %tmp_58_4_7 = shl i32 %tmp_57_4_7, %sh_amt_4_7_cast
  %tmp_895 = trunc i32 %tmp_58_4_7 to i27
  %sel_tmp342 = xor i1 %tmp_44_4_7, true
  %sel_tmp343 = and i1 %tmp_49_4_7, %sel_tmp342
  %sel_tmp956_demorgan = or i1 %tmp_44_4_7, %tmp_49_4_7
  %sel_tmp344 = xor i1 %sel_tmp956_demorgan, true
  %sel_tmp345 = and i1 %tmp_46_4_7, %sel_tmp344
  %sel_tmp346 = xor i1 %tmp_51_4_7, true
  %sel_tmp347 = and i1 %sel_tmp345, %sel_tmp346
  %sel_tmp348 = and i1 %sel_tmp345, %tmp_51_4_7
  %sel_tmp971_demorgan = or i1 %sel_tmp956_demorgan, %tmp_46_4_7
  %sel_tmp349 = xor i1 %sel_tmp971_demorgan, true
  %sel_tmp350 = and i1 %tmp_53_4_7, %sel_tmp349
  %newSel152 = select i1 %sel_tmp350, i27 %tmp_895, i27 %tmp_894
  %or_cond114 = or i1 %sel_tmp350, %sel_tmp348
  %newSel153 = select i1 %sel_tmp347, i27 %storemerge_4_7, i27 %tmp_893
  %or_cond115 = or i1 %sel_tmp347, %sel_tmp343
  %newSel154 = select i1 %or_cond114, i27 %newSel152, i27 %newSel153
  %or_cond116 = or i1 %or_cond114, %or_cond115
  %newSel155 = select i1 %or_cond116, i27 %newSel154, i27 0
  %tmp_344 = sext i27 %newSel155 to i41
  %tmp_345 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_4_6, i32 14, i32 40)
  %tmp_61_4_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_345, i14 0)
  %tmp_6223_4_7_cast = mul i41 %tmp_344, %tmp_340
  %p_Val2_30_4_7 = add i41 %tmp_61_4_7, %tmp_6223_4_7_cast
  %tmp_346 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_4_6, i32 14, i32 40)
  %tmp_66_4_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_346, i14 0)
  %tmp_6724_4_7_cast = mul i41 %tmp_344, %tmp_341
  %p_Val2_33_4_7 = add i41 %tmp_66_4_7, %tmp_6724_4_7_cast
  %tmp_347 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_4_6, i32 14, i32 40)
  %tmp_71_4_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_347, i14 0)
  %tmp_7225_4_7_cast = mul i41 %tmp_344, %tmp_342
  %p_Val2_36_4_7 = add i41 %tmp_71_4_7, %tmp_7225_4_7_cast
  %p_Val2_12_4_8 = sub i27 %p_x_V_4_load, %p_x_V_8_load
  %p_Val2_15_4_8 = sub i27 %p_y_V_4_load, %p_y_V_8_load
  %p_Val2_18_4_8 = sub i27 %p_z_V_4_load, %p_z_V_8_load
  %tmp_348 = sext i27 %p_Val2_12_4_8 to i41
  %tmp_349 = sext i27 %p_Val2_15_4_8 to i41
  %tmp_2820_4_8 = mul i41 %tmp_348, %tmp_348
  %tmp_2919_4_8 = mul i41 %tmp_349, %tmp_349
  %p_Val2_20_4_8 = add i41 %tmp_2919_4_8, %tmp_2820_4_8
  %tmp_350 = sext i27 %p_Val2_18_4_8 to i41
  %tmp_3118_4_8_cast = mul i41 %tmp_350, %tmp_350
  %p_Val2_21_4_8 = add i41 %p_Val2_20_4_8, %tmp_3118_4_8_cast
  %tmp_351 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_4_8, i32 14, i32 28)
  %x_in_V_read_assign_38 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_351, i33 0)
  %sqrtX_out_V_write_as_38 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_38) nounwind
  %tmp_896 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_4_8, i32 14, i32 40)
  %OP1_V_4_8_cast_cast = sext i27 %tmp_896 to i42
  %tmp_897 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_38, i32 10, i32 24)
  %OP2_V_3_4_8_cast_cas = zext i15 %tmp_897 to i42
  %tmp_37_4_8 = mul i42 %OP2_V_3_4_8_cast_cas, %OP1_V_4_8_cast_cast
  %tmp_38_4_8 = icmp eq i42 %tmp_37_4_8, 0
  %dp_4_4_13 = sext i42 %tmp_37_4_8 to i64
  %dp_4_4_8 = sitofp i64 %dp_4_4_13 to double
  %res_V_4_8 = bitcast double %dp_4_4_8 to i64
  %p_Result_4_8 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_4_8, i32 52, i32 62)
  %exp_V_5_4_8 = add i11 -28, %p_Result_4_8
  %p_Result_43_4_8 = call i64 @llvm.part.set.i64.i11(i64 %res_V_4_8, i11 %exp_V_5_4_8, i32 52, i32 62) nounwind
  %dp_436_8 = bitcast i64 %p_Result_43_4_8 to double
  %p_0_i_4_8 = select i1 %tmp_38_4_8, double 0.000000e+00, double %dp_436_8
  %tmp_39_4_8 = fdiv double -1.000000e+00, %p_0_i_4_8
  %prefact_4_8 = fmul double %tmp_39_4_8, 0.000000e+00
  %ireg_V_4_8 = bitcast double %prefact_4_8 to i64
  %tmp_898 = trunc i64 %ireg_V_4_8 to i63
  %tmp_899 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_4_8, i32 63)
  %p_Result_40_4_8 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_4_8, i32 52, i32 62)
  %tmp_42_4_8 = zext i11 %p_Result_40_4_8 to i12
  %tmp_900 = trunc i64 %ireg_V_4_8 to i52
  %tmp_155 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_900)
  %p_Result_45_4_8 = zext i53 %tmp_155 to i54
  %man_V_1_4_8 = sub i54 0, %p_Result_45_4_8
  %man_V_2_4_8 = select i1 %tmp_899, i54 %man_V_1_4_8, i54 %p_Result_45_4_8
  %tmp_44_4_8 = icmp eq i63 %tmp_898, 0
  %F2_4_8 = sub i12 1075, %tmp_42_4_8
  %tmp_46_4_8 = icmp sgt i12 %F2_4_8, 14
  %tmp_47_4_8 = add i12 -14, %F2_4_8
  %tmp_48_4_8 = sub i12 14, %F2_4_8
  %sh_amt_4_8 = select i1 %tmp_46_4_8, i12 %tmp_47_4_8, i12 %tmp_48_4_8
  %sh_amt_4_8_cast = sext i12 %sh_amt_4_8 to i32
  %tmp_49_4_8 = icmp eq i12 %F2_4_8, 14
  %tmp_901 = trunc i54 %man_V_2_4_8 to i27
  %tmp_51_4_8 = icmp ult i12 %sh_amt_4_8, 54
  %tmp_53_4_8 = icmp ult i12 %sh_amt_4_8, 27
  %tmp_54_4_8 = zext i32 %sh_amt_4_8_cast to i54
  %tmp_55_4_8 = ashr i54 %man_V_2_4_8, %tmp_54_4_8
  %tmp_902 = trunc i54 %tmp_55_4_8 to i27
  %storemerge_4_8 = select i1 %tmp_899, i27 -1, i27 0
  %tmp_57_4_8 = sext i27 %tmp_901 to i32
  %tmp_58_4_8 = shl i32 %tmp_57_4_8, %sh_amt_4_8_cast
  %tmp_903 = trunc i32 %tmp_58_4_8 to i27
  %sel_tmp351 = xor i1 %tmp_44_4_8, true
  %sel_tmp352 = and i1 %tmp_49_4_8, %sel_tmp351
  %sel_tmp981_demorgan = or i1 %tmp_44_4_8, %tmp_49_4_8
  %sel_tmp353 = xor i1 %sel_tmp981_demorgan, true
  %sel_tmp354 = and i1 %tmp_46_4_8, %sel_tmp353
  %sel_tmp355 = xor i1 %tmp_51_4_8, true
  %sel_tmp356 = and i1 %sel_tmp354, %sel_tmp355
  %sel_tmp357 = and i1 %sel_tmp354, %tmp_51_4_8
  %sel_tmp996_demorgan = or i1 %sel_tmp981_demorgan, %tmp_46_4_8
  %sel_tmp358 = xor i1 %sel_tmp996_demorgan, true
  %sel_tmp359 = and i1 %tmp_53_4_8, %sel_tmp358
  %newSel156 = select i1 %sel_tmp359, i27 %tmp_903, i27 %tmp_902
  %or_cond117 = or i1 %sel_tmp359, %sel_tmp357
  %newSel157 = select i1 %sel_tmp356, i27 %storemerge_4_8, i27 %tmp_901
  %or_cond118 = or i1 %sel_tmp356, %sel_tmp352
  %newSel158 = select i1 %or_cond117, i27 %newSel156, i27 %newSel157
  %or_cond119 = or i1 %or_cond117, %or_cond118
  %newSel159 = select i1 %or_cond119, i27 %newSel158, i27 0
  %tmp_352 = sext i27 %newSel159 to i41
  %tmp_353 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_4_7, i32 14, i32 40)
  %tmp_61_4_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_353, i14 0)
  %tmp_6223_4_8_cast = mul i41 %tmp_352, %tmp_348
  %p_Val2_30_4_8 = add i41 %tmp_61_4_8, %tmp_6223_4_8_cast
  %tmp_64_4_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_4_8, i32 14, i32 40)
  store i27 %tmp_64_4_8, i27* @p_ax_V_4, align 16
  %tmp_354 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_4_7, i32 14, i32 40)
  %tmp_66_4_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_354, i14 0)
  %tmp_6724_4_8_cast = mul i41 %tmp_352, %tmp_349
  %p_Val2_33_4_8 = add i41 %tmp_66_4_8, %tmp_6724_4_8_cast
  %tmp_69_4_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_4_8, i32 14, i32 40)
  store i27 %tmp_69_4_8, i27* @p_ay_V_4, align 16
  %tmp_355 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_4_7, i32 14, i32 40)
  %tmp_71_4_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_355, i14 0)
  %tmp_7225_4_8_cast = mul i41 %tmp_352, %tmp_350
  %p_Val2_36_4_8 = add i41 %tmp_71_4_8, %tmp_7225_4_8_cast
  %tmp_74_4_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_4_8, i32 14, i32 40)
  store i27 %tmp_74_4_8, i27* @p_az_V_4, align 16
  %p_Val2_12_5 = sub i27 %p_x_V_5_load, %p_x_V_0_load
  %p_Val2_15_5 = sub i27 %p_y_V_5_load, %p_y_V_0_load
  %p_Val2_18_5 = sub i27 %p_z_V_5_load, %p_z_V_0_load
  %OP1_V_5_5_cast = sext i27 %p_Val2_12_5 to i41
  %OP1_V_6_5_cast = sext i27 %p_Val2_15_5 to i41
  %tmp_2820_5 = mul i41 %OP1_V_5_5_cast, %OP1_V_5_5_cast
  %tmp_2919_5 = mul i41 %OP1_V_6_5_cast, %OP1_V_6_5_cast
  %p_Val2_20_5 = add i41 %tmp_2919_5, %tmp_2820_5
  %OP1_V_7_5_cast = sext i27 %p_Val2_18_5 to i41
  %tmp_3118_5_cast = mul i41 %OP1_V_7_5_cast, %OP1_V_7_5_cast
  %p_Val2_21_5 = add i41 %p_Val2_20_5, %tmp_3118_5_cast
  %tmp_356 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_5, i32 14, i32 28)
  %x_in_V_read_assign_39 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_356, i33 0)
  %sqrtX_out_V_write_as_39 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_39) nounwind
  %tmp_904 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_5, i32 14, i32 40)
  %OP1_V_1_cast_cast = sext i27 %tmp_904 to i42
  %tmp_905 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_39, i32 10, i32 24)
  %OP2_V_3_5_cast_cast = zext i15 %tmp_905 to i42
  %tmp_37_5 = mul i42 %OP2_V_3_5_cast_cast, %OP1_V_1_cast_cast
  %tmp_38_5 = icmp eq i42 %tmp_37_5, 0
  %dp_4_12 = sext i42 %tmp_37_5 to i64
  %dp_4_5 = sitofp i64 %dp_4_12 to double
  %res_V_5 = bitcast double %dp_4_5 to i64
  %p_Result_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_5, i32 52, i32 62)
  %exp_V_5_5 = add i11 -28, %p_Result_5
  %p_Result_43_5 = call i64 @llvm.part.set.i64.i11(i64 %res_V_5, i11 %exp_V_5_5, i32 52, i32 62) nounwind
  %dp_4 = bitcast i64 %p_Result_43_5 to double
  %p_0_i_5 = select i1 %tmp_38_5, double 0.000000e+00, double %dp_4
  %tmp_39_5 = fdiv double -1.000000e+00, %p_0_i_5
  %ireg_V_5 = bitcast double %tmp_39_5 to i64
  %tmp_906 = trunc i64 %ireg_V_5 to i63
  %tmp_907 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_5, i32 63)
  %p_Result_40_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_5, i32 52, i32 62)
  %tmp_42_5 = zext i11 %p_Result_40_5 to i12
  %tmp_908 = trunc i64 %ireg_V_5 to i52
  %tmp_156 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_908)
  %p_Result_45_5 = zext i53 %tmp_156 to i54
  %man_V_1_5 = sub i54 0, %p_Result_45_5
  %man_V_2_5 = select i1 %tmp_907, i54 %man_V_1_5, i54 %p_Result_45_5
  %tmp_44_5 = icmp eq i63 %tmp_906, 0
  %F2_5 = sub i12 1075, %tmp_42_5
  %tmp_46_5 = icmp sgt i12 %F2_5, 14
  %tmp_47_5 = add i12 -14, %F2_5
  %tmp_48_5 = sub i12 14, %F2_5
  %sh_amt_5 = select i1 %tmp_46_5, i12 %tmp_47_5, i12 %tmp_48_5
  %sh_amt_5_cast = sext i12 %sh_amt_5 to i32
  %tmp_49_5 = icmp eq i12 %F2_5, 14
  %tmp_909 = trunc i54 %man_V_2_5 to i27
  %tmp_51_5 = icmp ult i12 %sh_amt_5, 54
  %tmp_53_5 = icmp ult i12 %sh_amt_5, 27
  %tmp_54_5 = zext i32 %sh_amt_5_cast to i54
  %tmp_55_5 = ashr i54 %man_V_2_5, %tmp_54_5
  %tmp_910 = trunc i54 %tmp_55_5 to i27
  %storemerge_5 = select i1 %tmp_907, i27 -1, i27 0
  %tmp_57_5 = sext i27 %tmp_909 to i32
  %tmp_58_5 = shl i32 %tmp_57_5, %sh_amt_5_cast
  %tmp_911 = trunc i32 %tmp_58_5 to i27
  %sel_tmp360 = xor i1 %tmp_44_5, true
  %sel_tmp361 = and i1 %tmp_49_5, %sel_tmp360
  %sel_tmp1006_demorgan = or i1 %tmp_44_5, %tmp_49_5
  %sel_tmp362 = xor i1 %sel_tmp1006_demorgan, true
  %sel_tmp363 = and i1 %tmp_46_5, %sel_tmp362
  %sel_tmp364 = xor i1 %tmp_51_5, true
  %sel_tmp365 = and i1 %sel_tmp363, %sel_tmp364
  %sel_tmp366 = and i1 %sel_tmp363, %tmp_51_5
  %sel_tmp1021_demorgan = or i1 %sel_tmp1006_demorgan, %tmp_46_5
  %sel_tmp367 = xor i1 %sel_tmp1021_demorgan, true
  %sel_tmp368 = and i1 %tmp_53_5, %sel_tmp367
  %newSel160 = select i1 %sel_tmp368, i27 %tmp_911, i27 %tmp_910
  %or_cond120 = or i1 %sel_tmp368, %sel_tmp366
  %newSel161 = select i1 %sel_tmp365, i27 %storemerge_5, i27 %tmp_909
  %or_cond121 = or i1 %sel_tmp365, %sel_tmp361
  %newSel162 = select i1 %or_cond120, i27 %newSel160, i27 %newSel161
  %or_cond122 = or i1 %or_cond120, %or_cond121
  %newSel163 = select i1 %or_cond122, i27 %newSel162, i27 0
  %OP1_V_1_5_cast = sext i27 %newSel163 to i41
  %p_Val2_29_5 = mul i41 %OP1_V_1_5_cast, %OP1_V_5_5_cast
  %p_Val2_32_5 = mul i41 %OP1_V_1_5_cast, %OP1_V_6_5_cast
  %p_Val2_35_5 = mul i41 %OP1_V_1_5_cast, %OP1_V_7_5_cast
  %p_Val2_12_5_1 = sub i27 %p_x_V_5_load, %p_x_V_1_load
  %p_Val2_15_5_1 = sub i27 %p_y_V_5_load, %p_y_V_1_load
  %p_Val2_18_5_1 = sub i27 %p_z_V_5_load, %p_z_V_1_load
  %tmp_357 = sext i27 %p_Val2_12_5_1 to i41
  %tmp_358 = sext i27 %p_Val2_15_5_1 to i41
  %tmp_2820_5_1 = mul i41 %tmp_357, %tmp_357
  %tmp_2919_5_1 = mul i41 %tmp_358, %tmp_358
  %p_Val2_20_5_1 = add i41 %tmp_2919_5_1, %tmp_2820_5_1
  %tmp_359 = sext i27 %p_Val2_18_5_1 to i41
  %tmp_3118_5_1_cast = mul i41 %tmp_359, %tmp_359
  %p_Val2_21_5_1 = add i41 %p_Val2_20_5_1, %tmp_3118_5_1_cast
  %tmp_360 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_5_1, i32 14, i32 28)
  %x_in_V_read_assign_40 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_360, i33 0)
  %sqrtX_out_V_write_as_40 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_40) nounwind
  %tmp_912 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_5_1, i32 14, i32 40)
  %OP1_V_537_1_cast_cas = sext i27 %tmp_912 to i42
  %tmp_913 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_40, i32 10, i32 24)
  %OP2_V_3_5_1_cast_cas = zext i15 %tmp_913 to i42
  %tmp_37_5_1 = mul i42 %OP2_V_3_5_1_cast_cas, %OP1_V_537_1_cast_cas
  %tmp_38_5_1 = icmp eq i42 %tmp_37_5_1, 0
  %dp_4_5_s = sext i42 %tmp_37_5_1 to i64
  %dp_4_5_1 = sitofp i64 %dp_4_5_s to double
  %res_V_5_1 = bitcast double %dp_4_5_1 to i64
  %p_Result_5_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_5_1, i32 52, i32 62)
  %exp_V_5_5_1 = add i11 -28, %p_Result_5_1
  %p_Result_43_5_1 = call i64 @llvm.part.set.i64.i11(i64 %res_V_5_1, i11 %exp_V_5_5_1, i32 52, i32 62) nounwind
  %dp_538_1 = bitcast i64 %p_Result_43_5_1 to double
  %p_0_i_5_1 = select i1 %tmp_38_5_1, double 0.000000e+00, double %dp_538_1
  %tmp_39_5_1 = fdiv double -1.000000e+00, %p_0_i_5_1
  %prefact_5_1 = fmul double %tmp_39_5_1, 0.000000e+00
  %ireg_V_5_1 = bitcast double %prefact_5_1 to i64
  %tmp_914 = trunc i64 %ireg_V_5_1 to i63
  %tmp_915 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_5_1, i32 63)
  %p_Result_40_5_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_5_1, i32 52, i32 62)
  %tmp_42_5_1 = zext i11 %p_Result_40_5_1 to i12
  %tmp_916 = trunc i64 %ireg_V_5_1 to i52
  %tmp_157 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_916)
  %p_Result_45_5_1 = zext i53 %tmp_157 to i54
  %man_V_1_5_1 = sub i54 0, %p_Result_45_5_1
  %man_V_2_5_1 = select i1 %tmp_915, i54 %man_V_1_5_1, i54 %p_Result_45_5_1
  %tmp_44_5_1 = icmp eq i63 %tmp_914, 0
  %F2_5_1 = sub i12 1075, %tmp_42_5_1
  %tmp_46_5_1 = icmp sgt i12 %F2_5_1, 14
  %tmp_47_5_1 = add i12 -14, %F2_5_1
  %tmp_48_5_1 = sub i12 14, %F2_5_1
  %sh_amt_5_1 = select i1 %tmp_46_5_1, i12 %tmp_47_5_1, i12 %tmp_48_5_1
  %sh_amt_5_1_cast = sext i12 %sh_amt_5_1 to i32
  %tmp_49_5_1 = icmp eq i12 %F2_5_1, 14
  %tmp_917 = trunc i54 %man_V_2_5_1 to i27
  %tmp_51_5_1 = icmp ult i12 %sh_amt_5_1, 54
  %tmp_53_5_1 = icmp ult i12 %sh_amt_5_1, 27
  %tmp_54_5_1 = zext i32 %sh_amt_5_1_cast to i54
  %tmp_55_5_1 = ashr i54 %man_V_2_5_1, %tmp_54_5_1
  %tmp_918 = trunc i54 %tmp_55_5_1 to i27
  %storemerge_5_1 = select i1 %tmp_915, i27 -1, i27 0
  %tmp_57_5_1 = sext i27 %tmp_917 to i32
  %tmp_58_5_1 = shl i32 %tmp_57_5_1, %sh_amt_5_1_cast
  %tmp_919 = trunc i32 %tmp_58_5_1 to i27
  %sel_tmp369 = xor i1 %tmp_44_5_1, true
  %sel_tmp370 = and i1 %tmp_49_5_1, %sel_tmp369
  %sel_tmp1031_demorgan = or i1 %tmp_44_5_1, %tmp_49_5_1
  %sel_tmp371 = xor i1 %sel_tmp1031_demorgan, true
  %sel_tmp372 = and i1 %tmp_46_5_1, %sel_tmp371
  %sel_tmp373 = xor i1 %tmp_51_5_1, true
  %sel_tmp374 = and i1 %sel_tmp372, %sel_tmp373
  %sel_tmp375 = and i1 %sel_tmp372, %tmp_51_5_1
  %sel_tmp1046_demorgan = or i1 %sel_tmp1031_demorgan, %tmp_46_5_1
  %sel_tmp376 = xor i1 %sel_tmp1046_demorgan, true
  %sel_tmp377 = and i1 %tmp_53_5_1, %sel_tmp376
  %newSel164 = select i1 %sel_tmp377, i27 %tmp_919, i27 %tmp_918
  %or_cond123 = or i1 %sel_tmp377, %sel_tmp375
  %newSel165 = select i1 %sel_tmp374, i27 %storemerge_5_1, i27 %tmp_917
  %or_cond124 = or i1 %sel_tmp374, %sel_tmp370
  %newSel166 = select i1 %or_cond123, i27 %newSel164, i27 %newSel165
  %or_cond125 = or i1 %or_cond123, %or_cond124
  %newSel167 = select i1 %or_cond125, i27 %newSel166, i27 0
  %tmp_361 = sext i27 %newSel167 to i41
  %tmp_362 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_29_5, i32 14, i32 40)
  %tmp_61_5_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_362, i14 0)
  %tmp_6223_5_1_cast = mul i41 %tmp_361, %tmp_357
  %p_Val2_30_5_1 = add i41 %tmp_61_5_1, %tmp_6223_5_1_cast
  %tmp_363 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_32_5, i32 14, i32 40)
  %tmp_66_5_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_363, i14 0)
  %tmp_6724_5_1_cast = mul i41 %tmp_361, %tmp_358
  %p_Val2_33_5_1 = add i41 %tmp_66_5_1, %tmp_6724_5_1_cast
  %tmp_364 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_35_5, i32 14, i32 40)
  %tmp_71_5_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_364, i14 0)
  %tmp_7225_5_1_cast = mul i41 %tmp_361, %tmp_359
  %p_Val2_36_5_1 = add i41 %tmp_71_5_1, %tmp_7225_5_1_cast
  %p_Val2_12_5_2 = sub i27 %p_x_V_5_load, %p_x_V_2_load
  %p_Val2_15_5_2 = sub i27 %p_y_V_5_load, %p_y_V_2_load
  %p_Val2_18_5_2 = sub i27 %p_z_V_5_load, %p_z_V_2_load
  %tmp_365 = sext i27 %p_Val2_12_5_2 to i41
  %tmp_366 = sext i27 %p_Val2_15_5_2 to i41
  %tmp_2820_5_2 = mul i41 %tmp_365, %tmp_365
  %tmp_2919_5_2 = mul i41 %tmp_366, %tmp_366
  %p_Val2_20_5_2 = add i41 %tmp_2919_5_2, %tmp_2820_5_2
  %tmp_367 = sext i27 %p_Val2_18_5_2 to i41
  %tmp_3118_5_2_cast = mul i41 %tmp_367, %tmp_367
  %p_Val2_21_5_2 = add i41 %p_Val2_20_5_2, %tmp_3118_5_2_cast
  %tmp_368 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_5_2, i32 14, i32 28)
  %x_in_V_read_assign_41 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_368, i33 0)
  %sqrtX_out_V_write_as_41 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_41) nounwind
  %tmp_920 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_5_2, i32 14, i32 40)
  %OP1_V_537_2_cast_cas = sext i27 %tmp_920 to i42
  %tmp_921 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_41, i32 10, i32 24)
  %OP2_V_3_5_2_cast_cas = zext i15 %tmp_921 to i42
  %tmp_37_5_2 = mul i42 %OP2_V_3_5_2_cast_cas, %OP1_V_537_2_cast_cas
  %tmp_38_5_2 = icmp eq i42 %tmp_37_5_2, 0
  %dp_4_5_5 = sext i42 %tmp_37_5_2 to i64
  %dp_4_5_2 = sitofp i64 %dp_4_5_5 to double
  %res_V_5_2 = bitcast double %dp_4_5_2 to i64
  %p_Result_5_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_5_2, i32 52, i32 62)
  %exp_V_5_5_2 = add i11 -28, %p_Result_5_2
  %p_Result_43_5_2 = call i64 @llvm.part.set.i64.i11(i64 %res_V_5_2, i11 %exp_V_5_5_2, i32 52, i32 62) nounwind
  %dp_538_2 = bitcast i64 %p_Result_43_5_2 to double
  %p_0_i_5_2 = select i1 %tmp_38_5_2, double 0.000000e+00, double %dp_538_2
  %tmp_39_5_2 = fdiv double -1.000000e+00, %p_0_i_5_2
  %prefact_5_2 = fmul double %tmp_39_5_2, 0.000000e+00
  %ireg_V_5_2 = bitcast double %prefact_5_2 to i64
  %tmp_922 = trunc i64 %ireg_V_5_2 to i63
  %tmp_923 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_5_2, i32 63)
  %p_Result_40_5_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_5_2, i32 52, i32 62)
  %tmp_42_5_2 = zext i11 %p_Result_40_5_2 to i12
  %tmp_924 = trunc i64 %ireg_V_5_2 to i52
  %tmp_158 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_924)
  %p_Result_45_5_2 = zext i53 %tmp_158 to i54
  %man_V_1_5_2 = sub i54 0, %p_Result_45_5_2
  %man_V_2_5_2 = select i1 %tmp_923, i54 %man_V_1_5_2, i54 %p_Result_45_5_2
  %tmp_44_5_2 = icmp eq i63 %tmp_922, 0
  %F2_5_2 = sub i12 1075, %tmp_42_5_2
  %tmp_46_5_2 = icmp sgt i12 %F2_5_2, 14
  %tmp_47_5_2 = add i12 -14, %F2_5_2
  %tmp_48_5_2 = sub i12 14, %F2_5_2
  %sh_amt_5_2 = select i1 %tmp_46_5_2, i12 %tmp_47_5_2, i12 %tmp_48_5_2
  %sh_amt_5_2_cast = sext i12 %sh_amt_5_2 to i32
  %tmp_49_5_2 = icmp eq i12 %F2_5_2, 14
  %tmp_925 = trunc i54 %man_V_2_5_2 to i27
  %tmp_51_5_2 = icmp ult i12 %sh_amt_5_2, 54
  %tmp_53_5_2 = icmp ult i12 %sh_amt_5_2, 27
  %tmp_54_5_2 = zext i32 %sh_amt_5_2_cast to i54
  %tmp_55_5_2 = ashr i54 %man_V_2_5_2, %tmp_54_5_2
  %tmp_926 = trunc i54 %tmp_55_5_2 to i27
  %storemerge_5_2 = select i1 %tmp_923, i27 -1, i27 0
  %tmp_57_5_2 = sext i27 %tmp_925 to i32
  %tmp_58_5_2 = shl i32 %tmp_57_5_2, %sh_amt_5_2_cast
  %tmp_927 = trunc i32 %tmp_58_5_2 to i27
  %sel_tmp378 = xor i1 %tmp_44_5_2, true
  %sel_tmp379 = and i1 %tmp_49_5_2, %sel_tmp378
  %sel_tmp1056_demorgan = or i1 %tmp_44_5_2, %tmp_49_5_2
  %sel_tmp380 = xor i1 %sel_tmp1056_demorgan, true
  %sel_tmp381 = and i1 %tmp_46_5_2, %sel_tmp380
  %sel_tmp382 = xor i1 %tmp_51_5_2, true
  %sel_tmp383 = and i1 %sel_tmp381, %sel_tmp382
  %sel_tmp384 = and i1 %sel_tmp381, %tmp_51_5_2
  %sel_tmp1071_demorgan = or i1 %sel_tmp1056_demorgan, %tmp_46_5_2
  %sel_tmp385 = xor i1 %sel_tmp1071_demorgan, true
  %sel_tmp386 = and i1 %tmp_53_5_2, %sel_tmp385
  %newSel168 = select i1 %sel_tmp386, i27 %tmp_927, i27 %tmp_926
  %or_cond126 = or i1 %sel_tmp386, %sel_tmp384
  %newSel169 = select i1 %sel_tmp383, i27 %storemerge_5_2, i27 %tmp_925
  %or_cond127 = or i1 %sel_tmp383, %sel_tmp379
  %newSel170 = select i1 %or_cond126, i27 %newSel168, i27 %newSel169
  %or_cond128 = or i1 %or_cond126, %or_cond127
  %newSel171 = select i1 %or_cond128, i27 %newSel170, i27 0
  %tmp_369 = sext i27 %newSel171 to i41
  %tmp_370 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_5_1, i32 14, i32 40)
  %tmp_61_5_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_370, i14 0)
  %tmp_6223_5_2_cast = mul i41 %tmp_369, %tmp_365
  %p_Val2_30_5_2 = add i41 %tmp_61_5_2, %tmp_6223_5_2_cast
  %tmp_371 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_5_1, i32 14, i32 40)
  %tmp_66_5_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_371, i14 0)
  %tmp_6724_5_2_cast = mul i41 %tmp_369, %tmp_366
  %p_Val2_33_5_2 = add i41 %tmp_66_5_2, %tmp_6724_5_2_cast
  %tmp_372 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_5_1, i32 14, i32 40)
  %tmp_71_5_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_372, i14 0)
  %tmp_7225_5_2_cast = mul i41 %tmp_369, %tmp_367
  %p_Val2_36_5_2 = add i41 %tmp_71_5_2, %tmp_7225_5_2_cast
  %p_Val2_12_5_3 = sub i27 %p_x_V_5_load, %p_x_V_3_load
  %p_Val2_15_5_3 = sub i27 %p_y_V_5_load, %p_y_V_3_load
  %p_Val2_18_5_3 = sub i27 %p_z_V_5_load, %p_z_V_3_load
  %tmp_373 = sext i27 %p_Val2_12_5_3 to i41
  %tmp_374 = sext i27 %p_Val2_15_5_3 to i41
  %tmp_2820_5_3 = mul i41 %tmp_373, %tmp_373
  %tmp_2919_5_3 = mul i41 %tmp_374, %tmp_374
  %p_Val2_20_5_3 = add i41 %tmp_2919_5_3, %tmp_2820_5_3
  %tmp_375 = sext i27 %p_Val2_18_5_3 to i41
  %tmp_3118_5_3_cast = mul i41 %tmp_375, %tmp_375
  %p_Val2_21_5_3 = add i41 %p_Val2_20_5_3, %tmp_3118_5_3_cast
  %tmp_376 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_5_3, i32 14, i32 28)
  %x_in_V_read_assign_42 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_376, i33 0)
  %sqrtX_out_V_write_as_42 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_42) nounwind
  %tmp_928 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_5_3, i32 14, i32 40)
  %OP1_V_537_3_cast_cas = sext i27 %tmp_928 to i42
  %tmp_929 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_42, i32 10, i32 24)
  %OP2_V_3_5_3_cast_cas = zext i15 %tmp_929 to i42
  %tmp_37_5_3 = mul i42 %OP2_V_3_5_3_cast_cas, %OP1_V_537_3_cast_cas
  %tmp_38_5_3 = icmp eq i42 %tmp_37_5_3, 0
  %dp_4_5_9 = sext i42 %tmp_37_5_3 to i64
  %dp_4_5_3 = sitofp i64 %dp_4_5_9 to double
  %res_V_5_3 = bitcast double %dp_4_5_3 to i64
  %p_Result_5_3 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_5_3, i32 52, i32 62)
  %exp_V_5_5_3 = add i11 -28, %p_Result_5_3
  %p_Result_43_5_3 = call i64 @llvm.part.set.i64.i11(i64 %res_V_5_3, i11 %exp_V_5_5_3, i32 52, i32 62) nounwind
  %dp_538_3 = bitcast i64 %p_Result_43_5_3 to double
  %p_0_i_5_3 = select i1 %tmp_38_5_3, double 0.000000e+00, double %dp_538_3
  %tmp_39_5_3 = fdiv double -1.000000e+00, %p_0_i_5_3
  %prefact_5_3 = fmul double %tmp_39_5_3, 0.000000e+00
  %ireg_V_5_3 = bitcast double %prefact_5_3 to i64
  %tmp_930 = trunc i64 %ireg_V_5_3 to i63
  %tmp_931 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_5_3, i32 63)
  %p_Result_40_5_3 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_5_3, i32 52, i32 62)
  %tmp_42_5_3 = zext i11 %p_Result_40_5_3 to i12
  %tmp_932 = trunc i64 %ireg_V_5_3 to i52
  %tmp_159 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_932)
  %p_Result_45_5_3 = zext i53 %tmp_159 to i54
  %man_V_1_5_3 = sub i54 0, %p_Result_45_5_3
  %man_V_2_5_3 = select i1 %tmp_931, i54 %man_V_1_5_3, i54 %p_Result_45_5_3
  %tmp_44_5_3 = icmp eq i63 %tmp_930, 0
  %F2_5_3 = sub i12 1075, %tmp_42_5_3
  %tmp_46_5_3 = icmp sgt i12 %F2_5_3, 14
  %tmp_47_5_3 = add i12 -14, %F2_5_3
  %tmp_48_5_3 = sub i12 14, %F2_5_3
  %sh_amt_5_3 = select i1 %tmp_46_5_3, i12 %tmp_47_5_3, i12 %tmp_48_5_3
  %sh_amt_5_3_cast = sext i12 %sh_amt_5_3 to i32
  %tmp_49_5_3 = icmp eq i12 %F2_5_3, 14
  %tmp_933 = trunc i54 %man_V_2_5_3 to i27
  %tmp_51_5_3 = icmp ult i12 %sh_amt_5_3, 54
  %tmp_53_5_3 = icmp ult i12 %sh_amt_5_3, 27
  %tmp_54_5_3 = zext i32 %sh_amt_5_3_cast to i54
  %tmp_55_5_3 = ashr i54 %man_V_2_5_3, %tmp_54_5_3
  %tmp_934 = trunc i54 %tmp_55_5_3 to i27
  %storemerge_5_3 = select i1 %tmp_931, i27 -1, i27 0
  %tmp_57_5_3 = sext i27 %tmp_933 to i32
  %tmp_58_5_3 = shl i32 %tmp_57_5_3, %sh_amt_5_3_cast
  %tmp_935 = trunc i32 %tmp_58_5_3 to i27
  %sel_tmp387 = xor i1 %tmp_44_5_3, true
  %sel_tmp388 = and i1 %tmp_49_5_3, %sel_tmp387
  %sel_tmp1081_demorgan = or i1 %tmp_44_5_3, %tmp_49_5_3
  %sel_tmp389 = xor i1 %sel_tmp1081_demorgan, true
  %sel_tmp390 = and i1 %tmp_46_5_3, %sel_tmp389
  %sel_tmp391 = xor i1 %tmp_51_5_3, true
  %sel_tmp392 = and i1 %sel_tmp390, %sel_tmp391
  %sel_tmp393 = and i1 %sel_tmp390, %tmp_51_5_3
  %sel_tmp1096_demorgan = or i1 %sel_tmp1081_demorgan, %tmp_46_5_3
  %sel_tmp394 = xor i1 %sel_tmp1096_demorgan, true
  %sel_tmp395 = and i1 %tmp_53_5_3, %sel_tmp394
  %newSel172 = select i1 %sel_tmp395, i27 %tmp_935, i27 %tmp_934
  %or_cond129 = or i1 %sel_tmp395, %sel_tmp393
  %newSel173 = select i1 %sel_tmp392, i27 %storemerge_5_3, i27 %tmp_933
  %or_cond130 = or i1 %sel_tmp392, %sel_tmp388
  %newSel174 = select i1 %or_cond129, i27 %newSel172, i27 %newSel173
  %or_cond131 = or i1 %or_cond129, %or_cond130
  %newSel175 = select i1 %or_cond131, i27 %newSel174, i27 0
  %tmp_377 = sext i27 %newSel175 to i41
  %tmp_378 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_5_2, i32 14, i32 40)
  %tmp_61_5_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_378, i14 0)
  %tmp_6223_5_3_cast = mul i41 %tmp_377, %tmp_373
  %p_Val2_30_5_3 = add i41 %tmp_61_5_3, %tmp_6223_5_3_cast
  %tmp_379 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_5_2, i32 14, i32 40)
  %tmp_66_5_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_379, i14 0)
  %tmp_6724_5_3_cast = mul i41 %tmp_377, %tmp_374
  %p_Val2_33_5_3 = add i41 %tmp_66_5_3, %tmp_6724_5_3_cast
  %tmp_380 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_5_2, i32 14, i32 40)
  %tmp_71_5_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_380, i14 0)
  %tmp_7225_5_3_cast = mul i41 %tmp_377, %tmp_375
  %p_Val2_36_5_3 = add i41 %tmp_71_5_3, %tmp_7225_5_3_cast
  %p_Val2_12_5_4 = sub i27 %p_x_V_5_load, %p_x_V_4_load
  %p_Val2_15_5_4 = sub i27 %p_y_V_5_load, %p_y_V_4_load
  %p_Val2_18_5_4 = sub i27 %p_z_V_5_load, %p_z_V_4_load
  %tmp_381 = sext i27 %p_Val2_12_5_4 to i41
  %tmp_382 = sext i27 %p_Val2_15_5_4 to i41
  %tmp_2820_5_4 = mul i41 %tmp_381, %tmp_381
  %tmp_2919_5_4 = mul i41 %tmp_382, %tmp_382
  %p_Val2_20_5_4 = add i41 %tmp_2919_5_4, %tmp_2820_5_4
  %tmp_383 = sext i27 %p_Val2_18_5_4 to i41
  %tmp_3118_5_4_cast = mul i41 %tmp_383, %tmp_383
  %p_Val2_21_5_4 = add i41 %p_Val2_20_5_4, %tmp_3118_5_4_cast
  %tmp_384 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_5_4, i32 14, i32 28)
  %x_in_V_read_assign_43 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_384, i33 0)
  %sqrtX_out_V_write_as_43 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_43) nounwind
  %tmp_936 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_5_4, i32 14, i32 40)
  %OP1_V_537_4_cast_cas = sext i27 %tmp_936 to i42
  %tmp_937 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_43, i32 10, i32 24)
  %OP2_V_3_5_4_cast_cas = zext i15 %tmp_937 to i42
  %tmp_37_5_4 = mul i42 %OP2_V_3_5_4_cast_cas, %OP1_V_537_4_cast_cas
  %tmp_38_5_4 = icmp eq i42 %tmp_37_5_4, 0
  %dp_4_5_10 = sext i42 %tmp_37_5_4 to i64
  %dp_4_5_4 = sitofp i64 %dp_4_5_10 to double
  %res_V_5_4 = bitcast double %dp_4_5_4 to i64
  %p_Result_5_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_5_4, i32 52, i32 62)
  %exp_V_5_5_4 = add i11 -28, %p_Result_5_4
  %p_Result_43_5_4 = call i64 @llvm.part.set.i64.i11(i64 %res_V_5_4, i11 %exp_V_5_5_4, i32 52, i32 62) nounwind
  %dp_538_4 = bitcast i64 %p_Result_43_5_4 to double
  %p_0_i_5_4 = select i1 %tmp_38_5_4, double 0.000000e+00, double %dp_538_4
  %tmp_39_5_4 = fdiv double -1.000000e+00, %p_0_i_5_4
  %prefact_5_4 = fmul double %tmp_39_5_4, 0.000000e+00
  %ireg_V_5_4 = bitcast double %prefact_5_4 to i64
  %tmp_938 = trunc i64 %ireg_V_5_4 to i63
  %tmp_939 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_5_4, i32 63)
  %p_Result_40_5_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_5_4, i32 52, i32 62)
  %tmp_42_5_4 = zext i11 %p_Result_40_5_4 to i12
  %tmp_940 = trunc i64 %ireg_V_5_4 to i52
  %tmp_160 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_940)
  %p_Result_45_5_4 = zext i53 %tmp_160 to i54
  %man_V_1_5_4 = sub i54 0, %p_Result_45_5_4
  %man_V_2_5_4 = select i1 %tmp_939, i54 %man_V_1_5_4, i54 %p_Result_45_5_4
  %tmp_44_5_4 = icmp eq i63 %tmp_938, 0
  %F2_5_4 = sub i12 1075, %tmp_42_5_4
  %tmp_46_5_4 = icmp sgt i12 %F2_5_4, 14
  %tmp_47_5_4 = add i12 -14, %F2_5_4
  %tmp_48_5_4 = sub i12 14, %F2_5_4
  %sh_amt_5_4 = select i1 %tmp_46_5_4, i12 %tmp_47_5_4, i12 %tmp_48_5_4
  %sh_amt_5_4_cast = sext i12 %sh_amt_5_4 to i32
  %tmp_49_5_4 = icmp eq i12 %F2_5_4, 14
  %tmp_941 = trunc i54 %man_V_2_5_4 to i27
  %tmp_51_5_4 = icmp ult i12 %sh_amt_5_4, 54
  %tmp_53_5_4 = icmp ult i12 %sh_amt_5_4, 27
  %tmp_54_5_4 = zext i32 %sh_amt_5_4_cast to i54
  %tmp_55_5_4 = ashr i54 %man_V_2_5_4, %tmp_54_5_4
  %tmp_942 = trunc i54 %tmp_55_5_4 to i27
  %storemerge_5_4 = select i1 %tmp_939, i27 -1, i27 0
  %tmp_57_5_4 = sext i27 %tmp_941 to i32
  %tmp_58_5_4 = shl i32 %tmp_57_5_4, %sh_amt_5_4_cast
  %tmp_943 = trunc i32 %tmp_58_5_4 to i27
  %sel_tmp396 = xor i1 %tmp_44_5_4, true
  %sel_tmp397 = and i1 %tmp_49_5_4, %sel_tmp396
  %sel_tmp1106_demorgan = or i1 %tmp_44_5_4, %tmp_49_5_4
  %sel_tmp398 = xor i1 %sel_tmp1106_demorgan, true
  %sel_tmp399 = and i1 %tmp_46_5_4, %sel_tmp398
  %sel_tmp400 = xor i1 %tmp_51_5_4, true
  %sel_tmp401 = and i1 %sel_tmp399, %sel_tmp400
  %sel_tmp402 = and i1 %sel_tmp399, %tmp_51_5_4
  %sel_tmp1121_demorgan = or i1 %sel_tmp1106_demorgan, %tmp_46_5_4
  %sel_tmp403 = xor i1 %sel_tmp1121_demorgan, true
  %sel_tmp404 = and i1 %tmp_53_5_4, %sel_tmp403
  %newSel176 = select i1 %sel_tmp404, i27 %tmp_943, i27 %tmp_942
  %or_cond132 = or i1 %sel_tmp404, %sel_tmp402
  %newSel177 = select i1 %sel_tmp401, i27 %storemerge_5_4, i27 %tmp_941
  %or_cond133 = or i1 %sel_tmp401, %sel_tmp397
  %newSel178 = select i1 %or_cond132, i27 %newSel176, i27 %newSel177
  %or_cond134 = or i1 %or_cond132, %or_cond133
  %newSel179 = select i1 %or_cond134, i27 %newSel178, i27 0
  %tmp_385 = sext i27 %newSel179 to i41
  %tmp_386 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_5_3, i32 14, i32 40)
  %tmp_61_5_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_386, i14 0)
  %tmp_6223_5_4_cast = mul i41 %tmp_385, %tmp_381
  %p_Val2_30_5_4 = add i41 %tmp_61_5_4, %tmp_6223_5_4_cast
  %tmp_387 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_5_3, i32 14, i32 40)
  %tmp_66_5_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_387, i14 0)
  %tmp_6724_5_4_cast = mul i41 %tmp_385, %tmp_382
  %p_Val2_33_5_4 = add i41 %tmp_66_5_4, %tmp_6724_5_4_cast
  %tmp_388 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_5_3, i32 14, i32 40)
  %tmp_71_5_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_388, i14 0)
  %tmp_7225_5_4_cast = mul i41 %tmp_385, %tmp_383
  %p_Val2_36_5_4 = add i41 %tmp_71_5_4, %tmp_7225_5_4_cast
  %p_Val2_12_5_6 = sub i27 %p_x_V_5_load, %p_x_V_6_load
  %p_Val2_15_5_6 = sub i27 %p_y_V_5_load, %p_y_V_6_load
  %p_Val2_18_5_6 = sub i27 %p_z_V_5_load, %p_z_V_6_load
  %tmp_389 = sext i27 %p_Val2_12_5_6 to i41
  %tmp_390 = sext i27 %p_Val2_15_5_6 to i41
  %tmp_2820_5_6 = mul i41 %tmp_389, %tmp_389
  %tmp_2919_5_6 = mul i41 %tmp_390, %tmp_390
  %p_Val2_20_5_6 = add i41 %tmp_2919_5_6, %tmp_2820_5_6
  %tmp_391 = sext i27 %p_Val2_18_5_6 to i41
  %tmp_3118_5_6_cast = mul i41 %tmp_391, %tmp_391
  %p_Val2_21_5_6 = add i41 %p_Val2_20_5_6, %tmp_3118_5_6_cast
  %tmp_392 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_5_6, i32 14, i32 28)
  %x_in_V_read_assign_44 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_392, i33 0)
  %sqrtX_out_V_write_as_44 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_44) nounwind
  %tmp_944 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_5_6, i32 14, i32 40)
  %OP1_V_537_6_cast_cas = sext i27 %tmp_944 to i42
  %tmp_945 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_44, i32 10, i32 24)
  %OP2_V_3_5_6_cast_cas = zext i15 %tmp_945 to i42
  %tmp_37_5_6 = mul i42 %OP2_V_3_5_6_cast_cas, %OP1_V_537_6_cast_cas
  %tmp_38_5_6 = icmp eq i42 %tmp_37_5_6, 0
  %dp_4_5_11 = sext i42 %tmp_37_5_6 to i64
  %dp_4_5_6 = sitofp i64 %dp_4_5_11 to double
  %res_V_5_6 = bitcast double %dp_4_5_6 to i64
  %p_Result_5_6 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_5_6, i32 52, i32 62)
  %exp_V_5_5_6 = add i11 -28, %p_Result_5_6
  %p_Result_43_5_6 = call i64 @llvm.part.set.i64.i11(i64 %res_V_5_6, i11 %exp_V_5_5_6, i32 52, i32 62) nounwind
  %dp_538_6 = bitcast i64 %p_Result_43_5_6 to double
  %p_0_i_5_6 = select i1 %tmp_38_5_6, double 0.000000e+00, double %dp_538_6
  %tmp_39_5_6 = fdiv double -1.000000e+00, %p_0_i_5_6
  %prefact_5_6 = fmul double %tmp_39_5_6, 0x3F30000000000000
  %ireg_V_5_6 = bitcast double %prefact_5_6 to i64
  %tmp_946 = trunc i64 %ireg_V_5_6 to i63
  %tmp_947 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_5_6, i32 63)
  %p_Result_40_5_6 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_5_6, i32 52, i32 62)
  %tmp_42_5_6 = zext i11 %p_Result_40_5_6 to i12
  %tmp_948 = trunc i64 %ireg_V_5_6 to i52
  %tmp_161 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_948)
  %p_Result_45_5_6 = zext i53 %tmp_161 to i54
  %man_V_1_5_6 = sub i54 0, %p_Result_45_5_6
  %man_V_2_5_6 = select i1 %tmp_947, i54 %man_V_1_5_6, i54 %p_Result_45_5_6
  %tmp_44_5_6 = icmp eq i63 %tmp_946, 0
  %F2_5_6 = sub i12 1075, %tmp_42_5_6
  %tmp_46_5_6 = icmp sgt i12 %F2_5_6, 14
  %tmp_47_5_6 = add i12 -14, %F2_5_6
  %tmp_48_5_6 = sub i12 14, %F2_5_6
  %sh_amt_5_6 = select i1 %tmp_46_5_6, i12 %tmp_47_5_6, i12 %tmp_48_5_6
  %sh_amt_5_6_cast = sext i12 %sh_amt_5_6 to i32
  %tmp_49_5_6 = icmp eq i12 %F2_5_6, 14
  %tmp_949 = trunc i54 %man_V_2_5_6 to i27
  %tmp_51_5_6 = icmp ult i12 %sh_amt_5_6, 54
  %tmp_53_5_6 = icmp ult i12 %sh_amt_5_6, 27
  %tmp_54_5_6 = zext i32 %sh_amt_5_6_cast to i54
  %tmp_55_5_6 = ashr i54 %man_V_2_5_6, %tmp_54_5_6
  %tmp_950 = trunc i54 %tmp_55_5_6 to i27
  %storemerge_5_6 = select i1 %tmp_947, i27 -1, i27 0
  %tmp_57_5_6 = sext i27 %tmp_949 to i32
  %tmp_58_5_6 = shl i32 %tmp_57_5_6, %sh_amt_5_6_cast
  %tmp_951 = trunc i32 %tmp_58_5_6 to i27
  %sel_tmp405 = xor i1 %tmp_44_5_6, true
  %sel_tmp406 = and i1 %tmp_49_5_6, %sel_tmp405
  %sel_tmp1131_demorgan = or i1 %tmp_44_5_6, %tmp_49_5_6
  %sel_tmp407 = xor i1 %sel_tmp1131_demorgan, true
  %sel_tmp408 = and i1 %tmp_46_5_6, %sel_tmp407
  %sel_tmp409 = xor i1 %tmp_51_5_6, true
  %sel_tmp410 = and i1 %sel_tmp408, %sel_tmp409
  %sel_tmp411 = and i1 %sel_tmp408, %tmp_51_5_6
  %sel_tmp1146_demorgan = or i1 %sel_tmp1131_demorgan, %tmp_46_5_6
  %sel_tmp412 = xor i1 %sel_tmp1146_demorgan, true
  %sel_tmp413 = and i1 %tmp_53_5_6, %sel_tmp412
  %newSel180 = select i1 %sel_tmp413, i27 %tmp_951, i27 %tmp_950
  %or_cond135 = or i1 %sel_tmp413, %sel_tmp411
  %newSel181 = select i1 %sel_tmp410, i27 %storemerge_5_6, i27 %tmp_949
  %or_cond136 = or i1 %sel_tmp410, %sel_tmp406
  %newSel182 = select i1 %or_cond135, i27 %newSel180, i27 %newSel181
  %or_cond137 = or i1 %or_cond135, %or_cond136
  %newSel183 = select i1 %or_cond137, i27 %newSel182, i27 0
  %tmp_393 = sext i27 %newSel183 to i41
  %tmp_394 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_5_4, i32 14, i32 40)
  %tmp_61_5_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_394, i14 0)
  %tmp_6223_5_6_cast = mul i41 %tmp_393, %tmp_389
  %p_Val2_30_5_6 = add i41 %tmp_61_5_6, %tmp_6223_5_6_cast
  %tmp_395 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_5_4, i32 14, i32 40)
  %tmp_66_5_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_395, i14 0)
  %tmp_6724_5_6_cast = mul i41 %tmp_393, %tmp_390
  %p_Val2_33_5_6 = add i41 %tmp_66_5_6, %tmp_6724_5_6_cast
  %tmp_396 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_5_4, i32 14, i32 40)
  %tmp_71_5_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_396, i14 0)
  %tmp_7225_5_6_cast = mul i41 %tmp_393, %tmp_391
  %p_Val2_36_5_6 = add i41 %tmp_71_5_6, %tmp_7225_5_6_cast
  %p_Val2_12_5_7 = sub i27 %p_x_V_5_load, %p_x_V_7_load
  %p_Val2_15_5_7 = sub i27 %p_y_V_5_load, %p_y_V_7_load
  %p_Val2_18_5_7 = sub i27 %p_z_V_5_load, %p_z_V_7_load
  %tmp_397 = sext i27 %p_Val2_12_5_7 to i41
  %tmp_398 = sext i27 %p_Val2_15_5_7 to i41
  %tmp_2820_5_7 = mul i41 %tmp_397, %tmp_397
  %tmp_2919_5_7 = mul i41 %tmp_398, %tmp_398
  %p_Val2_20_5_7 = add i41 %tmp_2919_5_7, %tmp_2820_5_7
  %tmp_399 = sext i27 %p_Val2_18_5_7 to i41
  %tmp_3118_5_7_cast = mul i41 %tmp_399, %tmp_399
  %p_Val2_21_5_7 = add i41 %p_Val2_20_5_7, %tmp_3118_5_7_cast
  %tmp_400 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_5_7, i32 14, i32 28)
  %x_in_V_read_assign_45 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_400, i33 0)
  %sqrtX_out_V_write_as_45 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_45) nounwind
  %tmp_952 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_5_7, i32 14, i32 40)
  %OP1_V_537_7_cast_cas = sext i27 %tmp_952 to i42
  %tmp_953 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_45, i32 10, i32 24)
  %OP2_V_3_5_7_cast_cas = zext i15 %tmp_953 to i42
  %tmp_37_5_7 = mul i42 %OP2_V_3_5_7_cast_cas, %OP1_V_537_7_cast_cas
  %tmp_38_5_7 = icmp eq i42 %tmp_37_5_7, 0
  %dp_4_5_12 = sext i42 %tmp_37_5_7 to i64
  %dp_4_5_7 = sitofp i64 %dp_4_5_12 to double
  %res_V_5_7 = bitcast double %dp_4_5_7 to i64
  %p_Result_5_7 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_5_7, i32 52, i32 62)
  %exp_V_5_5_7 = add i11 -28, %p_Result_5_7
  %p_Result_43_5_7 = call i64 @llvm.part.set.i64.i11(i64 %res_V_5_7, i11 %exp_V_5_5_7, i32 52, i32 62) nounwind
  %dp_538_7 = bitcast i64 %p_Result_43_5_7 to double
  %p_0_i_5_7 = select i1 %tmp_38_5_7, double 0.000000e+00, double %dp_538_7
  %tmp_39_5_7 = fdiv double -1.000000e+00, %p_0_i_5_7
  %prefact_5_7 = fmul double %tmp_39_5_7, 0.000000e+00
  %ireg_V_5_7 = bitcast double %prefact_5_7 to i64
  %tmp_954 = trunc i64 %ireg_V_5_7 to i63
  %tmp_955 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_5_7, i32 63)
  %p_Result_40_5_7 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_5_7, i32 52, i32 62)
  %tmp_42_5_7 = zext i11 %p_Result_40_5_7 to i12
  %tmp_956 = trunc i64 %ireg_V_5_7 to i52
  %tmp_162 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_956)
  %p_Result_45_5_7 = zext i53 %tmp_162 to i54
  %man_V_1_5_7 = sub i54 0, %p_Result_45_5_7
  %man_V_2_5_7 = select i1 %tmp_955, i54 %man_V_1_5_7, i54 %p_Result_45_5_7
  %tmp_44_5_7 = icmp eq i63 %tmp_954, 0
  %F2_5_7 = sub i12 1075, %tmp_42_5_7
  %tmp_46_5_7 = icmp sgt i12 %F2_5_7, 14
  %tmp_47_5_7 = add i12 -14, %F2_5_7
  %tmp_48_5_7 = sub i12 14, %F2_5_7
  %sh_amt_5_7 = select i1 %tmp_46_5_7, i12 %tmp_47_5_7, i12 %tmp_48_5_7
  %sh_amt_5_7_cast = sext i12 %sh_amt_5_7 to i32
  %tmp_49_5_7 = icmp eq i12 %F2_5_7, 14
  %tmp_957 = trunc i54 %man_V_2_5_7 to i27
  %tmp_51_5_7 = icmp ult i12 %sh_amt_5_7, 54
  %tmp_53_5_7 = icmp ult i12 %sh_amt_5_7, 27
  %tmp_54_5_7 = zext i32 %sh_amt_5_7_cast to i54
  %tmp_55_5_7 = ashr i54 %man_V_2_5_7, %tmp_54_5_7
  %tmp_958 = trunc i54 %tmp_55_5_7 to i27
  %storemerge_5_7 = select i1 %tmp_955, i27 -1, i27 0
  %tmp_57_5_7 = sext i27 %tmp_957 to i32
  %tmp_58_5_7 = shl i32 %tmp_57_5_7, %sh_amt_5_7_cast
  %tmp_959 = trunc i32 %tmp_58_5_7 to i27
  %sel_tmp414 = xor i1 %tmp_44_5_7, true
  %sel_tmp415 = and i1 %tmp_49_5_7, %sel_tmp414
  %sel_tmp1156_demorgan = or i1 %tmp_44_5_7, %tmp_49_5_7
  %sel_tmp416 = xor i1 %sel_tmp1156_demorgan, true
  %sel_tmp417 = and i1 %tmp_46_5_7, %sel_tmp416
  %sel_tmp418 = xor i1 %tmp_51_5_7, true
  %sel_tmp419 = and i1 %sel_tmp417, %sel_tmp418
  %sel_tmp420 = and i1 %sel_tmp417, %tmp_51_5_7
  %sel_tmp1171_demorgan = or i1 %sel_tmp1156_demorgan, %tmp_46_5_7
  %sel_tmp421 = xor i1 %sel_tmp1171_demorgan, true
  %sel_tmp422 = and i1 %tmp_53_5_7, %sel_tmp421
  %newSel184 = select i1 %sel_tmp422, i27 %tmp_959, i27 %tmp_958
  %or_cond138 = or i1 %sel_tmp422, %sel_tmp420
  %newSel185 = select i1 %sel_tmp419, i27 %storemerge_5_7, i27 %tmp_957
  %or_cond139 = or i1 %sel_tmp419, %sel_tmp415
  %newSel186 = select i1 %or_cond138, i27 %newSel184, i27 %newSel185
  %or_cond140 = or i1 %or_cond138, %or_cond139
  %newSel187 = select i1 %or_cond140, i27 %newSel186, i27 0
  %tmp_401 = sext i27 %newSel187 to i41
  %tmp_402 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_5_6, i32 14, i32 40)
  %tmp_61_5_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_402, i14 0)
  %tmp_6223_5_7_cast = mul i41 %tmp_401, %tmp_397
  %p_Val2_30_5_7 = add i41 %tmp_61_5_7, %tmp_6223_5_7_cast
  %tmp_403 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_5_6, i32 14, i32 40)
  %tmp_66_5_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_403, i14 0)
  %tmp_6724_5_7_cast = mul i41 %tmp_401, %tmp_398
  %p_Val2_33_5_7 = add i41 %tmp_66_5_7, %tmp_6724_5_7_cast
  %tmp_404 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_5_6, i32 14, i32 40)
  %tmp_71_5_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_404, i14 0)
  %tmp_7225_5_7_cast = mul i41 %tmp_401, %tmp_399
  %p_Val2_36_5_7 = add i41 %tmp_71_5_7, %tmp_7225_5_7_cast
  %p_Val2_12_5_8 = sub i27 %p_x_V_5_load, %p_x_V_8_load
  %p_Val2_15_5_8 = sub i27 %p_y_V_5_load, %p_y_V_8_load
  %p_Val2_18_5_8 = sub i27 %p_z_V_5_load, %p_z_V_8_load
  %tmp_405 = sext i27 %p_Val2_12_5_8 to i41
  %tmp_406 = sext i27 %p_Val2_15_5_8 to i41
  %tmp_2820_5_8 = mul i41 %tmp_405, %tmp_405
  %tmp_2919_5_8 = mul i41 %tmp_406, %tmp_406
  %p_Val2_20_5_8 = add i41 %tmp_2919_5_8, %tmp_2820_5_8
  %tmp_407 = sext i27 %p_Val2_18_5_8 to i41
  %tmp_3118_5_8_cast = mul i41 %tmp_407, %tmp_407
  %p_Val2_21_5_8 = add i41 %p_Val2_20_5_8, %tmp_3118_5_8_cast
  %tmp_408 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_5_8, i32 14, i32 28)
  %x_in_V_read_assign_46 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_408, i33 0)
  %sqrtX_out_V_write_as_46 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_46) nounwind
  %tmp_960 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_5_8, i32 14, i32 40)
  %OP1_V_537_8_cast_cas = sext i27 %tmp_960 to i42
  %tmp_961 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_46, i32 10, i32 24)
  %OP2_V_3_5_8_cast_cas = zext i15 %tmp_961 to i42
  %tmp_37_5_8 = mul i42 %OP2_V_3_5_8_cast_cas, %OP1_V_537_8_cast_cas
  %tmp_38_5_8 = icmp eq i42 %tmp_37_5_8, 0
  %dp_4_5_13 = sext i42 %tmp_37_5_8 to i64
  %dp_4_5_8 = sitofp i64 %dp_4_5_13 to double
  %res_V_5_8 = bitcast double %dp_4_5_8 to i64
  %p_Result_5_8 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_5_8, i32 52, i32 62)
  %exp_V_5_5_8 = add i11 -28, %p_Result_5_8
  %p_Result_43_5_8 = call i64 @llvm.part.set.i64.i11(i64 %res_V_5_8, i11 %exp_V_5_5_8, i32 52, i32 62) nounwind
  %dp_538_8 = bitcast i64 %p_Result_43_5_8 to double
  %p_0_i_5_8 = select i1 %tmp_38_5_8, double 0.000000e+00, double %dp_538_8
  %tmp_39_5_8 = fdiv double -1.000000e+00, %p_0_i_5_8
  %prefact_5_8 = fmul double %tmp_39_5_8, 0.000000e+00
  %ireg_V_5_8 = bitcast double %prefact_5_8 to i64
  %tmp_962 = trunc i64 %ireg_V_5_8 to i63
  %tmp_963 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_5_8, i32 63)
  %p_Result_40_5_8 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_5_8, i32 52, i32 62)
  %tmp_42_5_8 = zext i11 %p_Result_40_5_8 to i12
  %tmp_964 = trunc i64 %ireg_V_5_8 to i52
  %tmp_163 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_964)
  %p_Result_45_5_8 = zext i53 %tmp_163 to i54
  %man_V_1_5_8 = sub i54 0, %p_Result_45_5_8
  %man_V_2_5_8 = select i1 %tmp_963, i54 %man_V_1_5_8, i54 %p_Result_45_5_8
  %tmp_44_5_8 = icmp eq i63 %tmp_962, 0
  %F2_5_8 = sub i12 1075, %tmp_42_5_8
  %tmp_46_5_8 = icmp sgt i12 %F2_5_8, 14
  %tmp_47_5_8 = add i12 -14, %F2_5_8
  %tmp_48_5_8 = sub i12 14, %F2_5_8
  %sh_amt_5_8 = select i1 %tmp_46_5_8, i12 %tmp_47_5_8, i12 %tmp_48_5_8
  %sh_amt_5_8_cast = sext i12 %sh_amt_5_8 to i32
  %tmp_49_5_8 = icmp eq i12 %F2_5_8, 14
  %tmp_965 = trunc i54 %man_V_2_5_8 to i27
  %tmp_51_5_8 = icmp ult i12 %sh_amt_5_8, 54
  %tmp_53_5_8 = icmp ult i12 %sh_amt_5_8, 27
  %tmp_54_5_8 = zext i32 %sh_amt_5_8_cast to i54
  %tmp_55_5_8 = ashr i54 %man_V_2_5_8, %tmp_54_5_8
  %tmp_966 = trunc i54 %tmp_55_5_8 to i27
  %storemerge_5_8 = select i1 %tmp_963, i27 -1, i27 0
  %tmp_57_5_8 = sext i27 %tmp_965 to i32
  %tmp_58_5_8 = shl i32 %tmp_57_5_8, %sh_amt_5_8_cast
  %tmp_967 = trunc i32 %tmp_58_5_8 to i27
  %sel_tmp423 = xor i1 %tmp_44_5_8, true
  %sel_tmp424 = and i1 %tmp_49_5_8, %sel_tmp423
  %sel_tmp1181_demorgan = or i1 %tmp_44_5_8, %tmp_49_5_8
  %sel_tmp425 = xor i1 %sel_tmp1181_demorgan, true
  %sel_tmp426 = and i1 %tmp_46_5_8, %sel_tmp425
  %sel_tmp427 = xor i1 %tmp_51_5_8, true
  %sel_tmp428 = and i1 %sel_tmp426, %sel_tmp427
  %sel_tmp429 = and i1 %sel_tmp426, %tmp_51_5_8
  %sel_tmp1196_demorgan = or i1 %sel_tmp1181_demorgan, %tmp_46_5_8
  %sel_tmp430 = xor i1 %sel_tmp1196_demorgan, true
  %sel_tmp431 = and i1 %tmp_53_5_8, %sel_tmp430
  %newSel188 = select i1 %sel_tmp431, i27 %tmp_967, i27 %tmp_966
  %or_cond141 = or i1 %sel_tmp431, %sel_tmp429
  %newSel189 = select i1 %sel_tmp428, i27 %storemerge_5_8, i27 %tmp_965
  %or_cond142 = or i1 %sel_tmp428, %sel_tmp424
  %newSel190 = select i1 %or_cond141, i27 %newSel188, i27 %newSel189
  %or_cond143 = or i1 %or_cond141, %or_cond142
  %newSel191 = select i1 %or_cond143, i27 %newSel190, i27 0
  %tmp_409 = sext i27 %newSel191 to i41
  %tmp_410 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_5_7, i32 14, i32 40)
  %tmp_61_5_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_410, i14 0)
  %tmp_6223_5_8_cast = mul i41 %tmp_409, %tmp_405
  %p_Val2_30_5_8 = add i41 %tmp_61_5_8, %tmp_6223_5_8_cast
  %tmp_64_5_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_5_8, i32 14, i32 40)
  store i27 %tmp_64_5_8, i27* @p_ax_V_5, align 8
  %tmp_411 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_5_7, i32 14, i32 40)
  %tmp_66_5_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_411, i14 0)
  %tmp_6724_5_8_cast = mul i41 %tmp_409, %tmp_406
  %p_Val2_33_5_8 = add i41 %tmp_66_5_8, %tmp_6724_5_8_cast
  %tmp_69_5_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_5_8, i32 14, i32 40)
  store i27 %tmp_69_5_8, i27* @p_ay_V_5, align 4
  %tmp_412 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_5_7, i32 14, i32 40)
  %tmp_71_5_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_412, i14 0)
  %tmp_7225_5_8_cast = mul i41 %tmp_409, %tmp_407
  %p_Val2_36_5_8 = add i41 %tmp_71_5_8, %tmp_7225_5_8_cast
  %tmp_74_5_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_5_8, i32 14, i32 40)
  store i27 %tmp_74_5_8, i27* @p_az_V_5, align 8
  %p_Val2_12_6 = sub i27 %p_x_V_6_load, %p_x_V_0_load
  %p_Val2_15_6 = sub i27 %p_y_V_6_load, %p_y_V_0_load
  %p_Val2_18_6 = sub i27 %p_z_V_6_load, %p_z_V_0_load
  %OP1_V_5_6_cast = sext i27 %p_Val2_12_6 to i41
  %OP1_V_6_6_cast = sext i27 %p_Val2_15_6 to i41
  %tmp_2820_6 = mul i41 %OP1_V_5_6_cast, %OP1_V_5_6_cast
  %tmp_2919_6 = mul i41 %OP1_V_6_6_cast, %OP1_V_6_6_cast
  %p_Val2_20_6 = add i41 %tmp_2919_6, %tmp_2820_6
  %OP1_V_7_6_cast = sext i27 %p_Val2_18_6 to i41
  %tmp_3118_6_cast = mul i41 %OP1_V_7_6_cast, %OP1_V_7_6_cast
  %p_Val2_21_6 = add i41 %p_Val2_20_6, %tmp_3118_6_cast
  %tmp_413 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_6, i32 14, i32 28)
  %x_in_V_read_assign_47 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_413, i33 0)
  %sqrtX_out_V_write_as_47 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_47) nounwind
  %tmp_968 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_6, i32 14, i32 40)
  %OP1_V_5_cast_cast = sext i27 %tmp_968 to i42
  %tmp_969 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_47, i32 10, i32 24)
  %OP2_V_3_6_cast_cast = zext i15 %tmp_969 to i42
  %tmp_37_6 = mul i42 %OP2_V_3_6_cast_cast, %OP1_V_5_cast_cast
  %tmp_38_6 = icmp eq i42 %tmp_37_6, 0
  %dp_4_13 = sext i42 %tmp_37_6 to i64
  %dp_4_6 = sitofp i64 %dp_4_13 to double
  %res_V_6 = bitcast double %dp_4_6 to i64
  %p_Result_6 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_6, i32 52, i32 62)
  %exp_V_5_6 = add i11 -28, %p_Result_6
  %p_Result_43_6 = call i64 @llvm.part.set.i64.i11(i64 %res_V_6, i11 %exp_V_5_6, i32 52, i32 62) nounwind
  %dp_6 = bitcast i64 %p_Result_43_6 to double
  %p_0_i_6 = select i1 %tmp_38_6, double 0.000000e+00, double %dp_6
  %tmp_39_6 = fdiv double -1.000000e+00, %p_0_i_6
  %ireg_V_6 = bitcast double %tmp_39_6 to i64
  %tmp_970 = trunc i64 %ireg_V_6 to i63
  %tmp_971 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_6, i32 63)
  %p_Result_40_6 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_6, i32 52, i32 62)
  %tmp_42_6 = zext i11 %p_Result_40_6 to i12
  %tmp_972 = trunc i64 %ireg_V_6 to i52
  %tmp_164 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_972)
  %p_Result_45_6 = zext i53 %tmp_164 to i54
  %man_V_1_6 = sub i54 0, %p_Result_45_6
  %man_V_2_6 = select i1 %tmp_971, i54 %man_V_1_6, i54 %p_Result_45_6
  %tmp_44_6 = icmp eq i63 %tmp_970, 0
  %F2_6 = sub i12 1075, %tmp_42_6
  %tmp_46_6 = icmp sgt i12 %F2_6, 14
  %tmp_47_6 = add i12 -14, %F2_6
  %tmp_48_6 = sub i12 14, %F2_6
  %sh_amt_6 = select i1 %tmp_46_6, i12 %tmp_47_6, i12 %tmp_48_6
  %sh_amt_6_cast = sext i12 %sh_amt_6 to i32
  %tmp_49_6 = icmp eq i12 %F2_6, 14
  %tmp_973 = trunc i54 %man_V_2_6 to i27
  %tmp_51_6 = icmp ult i12 %sh_amt_6, 54
  %tmp_53_6 = icmp ult i12 %sh_amt_6, 27
  %tmp_54_6 = zext i32 %sh_amt_6_cast to i54
  %tmp_55_6 = ashr i54 %man_V_2_6, %tmp_54_6
  %tmp_974 = trunc i54 %tmp_55_6 to i27
  %storemerge_6 = select i1 %tmp_971, i27 -1, i27 0
  %tmp_57_6 = sext i27 %tmp_973 to i32
  %tmp_58_6 = shl i32 %tmp_57_6, %sh_amt_6_cast
  %tmp_975 = trunc i32 %tmp_58_6 to i27
  %sel_tmp432 = xor i1 %tmp_44_6, true
  %sel_tmp433 = and i1 %tmp_49_6, %sel_tmp432
  %sel_tmp1206_demorgan = or i1 %tmp_44_6, %tmp_49_6
  %sel_tmp434 = xor i1 %sel_tmp1206_demorgan, true
  %sel_tmp435 = and i1 %tmp_46_6, %sel_tmp434
  %sel_tmp436 = xor i1 %tmp_51_6, true
  %sel_tmp437 = and i1 %sel_tmp435, %sel_tmp436
  %sel_tmp438 = and i1 %sel_tmp435, %tmp_51_6
  %sel_tmp1221_demorgan = or i1 %sel_tmp1206_demorgan, %tmp_46_6
  %sel_tmp439 = xor i1 %sel_tmp1221_demorgan, true
  %sel_tmp440 = and i1 %tmp_53_6, %sel_tmp439
  %newSel192 = select i1 %sel_tmp440, i27 %tmp_975, i27 %tmp_974
  %or_cond144 = or i1 %sel_tmp440, %sel_tmp438
  %newSel193 = select i1 %sel_tmp437, i27 %storemerge_6, i27 %tmp_973
  %or_cond145 = or i1 %sel_tmp437, %sel_tmp433
  %newSel194 = select i1 %or_cond144, i27 %newSel192, i27 %newSel193
  %or_cond146 = or i1 %or_cond144, %or_cond145
  %newSel195 = select i1 %or_cond146, i27 %newSel194, i27 0
  %OP1_V_1_6_cast = sext i27 %newSel195 to i41
  %p_Val2_29_6 = mul i41 %OP1_V_1_6_cast, %OP1_V_5_6_cast
  %p_Val2_32_6 = mul i41 %OP1_V_1_6_cast, %OP1_V_6_6_cast
  %p_Val2_35_6 = mul i41 %OP1_V_1_6_cast, %OP1_V_7_6_cast
  %p_Val2_12_6_1 = sub i27 %p_x_V_6_load, %p_x_V_1_load
  %p_Val2_15_6_1 = sub i27 %p_y_V_6_load, %p_y_V_1_load
  %p_Val2_18_6_1 = sub i27 %p_z_V_6_load, %p_z_V_1_load
  %tmp_414 = sext i27 %p_Val2_12_6_1 to i41
  %tmp_415 = sext i27 %p_Val2_15_6_1 to i41
  %tmp_2820_6_1 = mul i41 %tmp_414, %tmp_414
  %tmp_2919_6_1 = mul i41 %tmp_415, %tmp_415
  %p_Val2_20_6_1 = add i41 %tmp_2919_6_1, %tmp_2820_6_1
  %tmp_416 = sext i27 %p_Val2_18_6_1 to i41
  %tmp_3118_6_1_cast = mul i41 %tmp_416, %tmp_416
  %p_Val2_21_6_1 = add i41 %p_Val2_20_6_1, %tmp_3118_6_1_cast
  %tmp_417 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_6_1, i32 14, i32 28)
  %x_in_V_read_assign_48 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_417, i33 0)
  %sqrtX_out_V_write_as_48 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_48) nounwind
  %tmp_976 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_6_1, i32 14, i32 40)
  %OP1_V_639_1_cast_cas = sext i27 %tmp_976 to i42
  %tmp_977 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_48, i32 10, i32 24)
  %OP2_V_3_6_1_cast_cas = zext i15 %tmp_977 to i42
  %tmp_37_6_1 = mul i42 %OP2_V_3_6_1_cast_cas, %OP1_V_639_1_cast_cas
  %tmp_38_6_1 = icmp eq i42 %tmp_37_6_1, 0
  %dp_4_6_s = sext i42 %tmp_37_6_1 to i64
  %dp_4_6_1 = sitofp i64 %dp_4_6_s to double
  %res_V_6_1 = bitcast double %dp_4_6_1 to i64
  %p_Result_6_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_6_1, i32 52, i32 62)
  %exp_V_5_6_1 = add i11 -28, %p_Result_6_1
  %p_Result_43_6_1 = call i64 @llvm.part.set.i64.i11(i64 %res_V_6_1, i11 %exp_V_5_6_1, i32 52, i32 62) nounwind
  %dp_6_1 = bitcast i64 %p_Result_43_6_1 to double
  %p_0_i_6_1 = select i1 %tmp_38_6_1, double 0.000000e+00, double %dp_6_1
  %tmp_39_6_1 = fdiv double -1.000000e+00, %p_0_i_6_1
  %prefact_6_1 = fmul double %tmp_39_6_1, 0.000000e+00
  %ireg_V_6_1 = bitcast double %prefact_6_1 to i64
  %tmp_978 = trunc i64 %ireg_V_6_1 to i63
  %tmp_979 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_6_1, i32 63)
  %p_Result_40_6_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_6_1, i32 52, i32 62)
  %tmp_42_6_1 = zext i11 %p_Result_40_6_1 to i12
  %tmp_980 = trunc i64 %ireg_V_6_1 to i52
  %tmp_165 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_980)
  %p_Result_45_6_1 = zext i53 %tmp_165 to i54
  %man_V_1_6_1 = sub i54 0, %p_Result_45_6_1
  %man_V_2_6_1 = select i1 %tmp_979, i54 %man_V_1_6_1, i54 %p_Result_45_6_1
  %tmp_44_6_1 = icmp eq i63 %tmp_978, 0
  %F2_6_1 = sub i12 1075, %tmp_42_6_1
  %tmp_46_6_1 = icmp sgt i12 %F2_6_1, 14
  %tmp_47_6_1 = add i12 -14, %F2_6_1
  %tmp_48_6_1 = sub i12 14, %F2_6_1
  %sh_amt_6_1 = select i1 %tmp_46_6_1, i12 %tmp_47_6_1, i12 %tmp_48_6_1
  %sh_amt_6_1_cast = sext i12 %sh_amt_6_1 to i32
  %tmp_49_6_1 = icmp eq i12 %F2_6_1, 14
  %tmp_981 = trunc i54 %man_V_2_6_1 to i27
  %tmp_51_6_1 = icmp ult i12 %sh_amt_6_1, 54
  %tmp_53_6_1 = icmp ult i12 %sh_amt_6_1, 27
  %tmp_54_6_1 = zext i32 %sh_amt_6_1_cast to i54
  %tmp_55_6_1 = ashr i54 %man_V_2_6_1, %tmp_54_6_1
  %tmp_982 = trunc i54 %tmp_55_6_1 to i27
  %storemerge_6_1 = select i1 %tmp_979, i27 -1, i27 0
  %tmp_57_6_1 = sext i27 %tmp_981 to i32
  %tmp_58_6_1 = shl i32 %tmp_57_6_1, %sh_amt_6_1_cast
  %tmp_983 = trunc i32 %tmp_58_6_1 to i27
  %sel_tmp441 = xor i1 %tmp_44_6_1, true
  %sel_tmp442 = and i1 %tmp_49_6_1, %sel_tmp441
  %sel_tmp1231_demorgan = or i1 %tmp_44_6_1, %tmp_49_6_1
  %sel_tmp443 = xor i1 %sel_tmp1231_demorgan, true
  %sel_tmp444 = and i1 %tmp_46_6_1, %sel_tmp443
  %sel_tmp445 = xor i1 %tmp_51_6_1, true
  %sel_tmp446 = and i1 %sel_tmp444, %sel_tmp445
  %sel_tmp447 = and i1 %sel_tmp444, %tmp_51_6_1
  %sel_tmp1246_demorgan = or i1 %sel_tmp1231_demorgan, %tmp_46_6_1
  %sel_tmp448 = xor i1 %sel_tmp1246_demorgan, true
  %sel_tmp449 = and i1 %tmp_53_6_1, %sel_tmp448
  %newSel196 = select i1 %sel_tmp449, i27 %tmp_983, i27 %tmp_982
  %or_cond147 = or i1 %sel_tmp449, %sel_tmp447
  %newSel197 = select i1 %sel_tmp446, i27 %storemerge_6_1, i27 %tmp_981
  %or_cond148 = or i1 %sel_tmp446, %sel_tmp442
  %newSel198 = select i1 %or_cond147, i27 %newSel196, i27 %newSel197
  %or_cond149 = or i1 %or_cond147, %or_cond148
  %newSel199 = select i1 %or_cond149, i27 %newSel198, i27 0
  %tmp_418 = sext i27 %newSel199 to i41
  %tmp_419 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_29_6, i32 14, i32 40)
  %tmp_61_6_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_419, i14 0)
  %tmp_6223_6_1_cast = mul i41 %tmp_418, %tmp_414
  %p_Val2_30_6_1 = add i41 %tmp_61_6_1, %tmp_6223_6_1_cast
  %tmp_420 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_32_6, i32 14, i32 40)
  %tmp_66_6_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_420, i14 0)
  %tmp_6724_6_1_cast = mul i41 %tmp_418, %tmp_415
  %p_Val2_33_6_1 = add i41 %tmp_66_6_1, %tmp_6724_6_1_cast
  %tmp_421 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_35_6, i32 14, i32 40)
  %tmp_71_6_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_421, i14 0)
  %tmp_7225_6_1_cast = mul i41 %tmp_418, %tmp_416
  %p_Val2_36_6_1 = add i41 %tmp_71_6_1, %tmp_7225_6_1_cast
  %p_Val2_12_6_2 = sub i27 %p_x_V_6_load, %p_x_V_2_load
  %p_Val2_15_6_2 = sub i27 %p_y_V_6_load, %p_y_V_2_load
  %p_Val2_18_6_2 = sub i27 %p_z_V_6_load, %p_z_V_2_load
  %tmp_422 = sext i27 %p_Val2_12_6_2 to i41
  %tmp_423 = sext i27 %p_Val2_15_6_2 to i41
  %tmp_2820_6_2 = mul i41 %tmp_422, %tmp_422
  %tmp_2919_6_2 = mul i41 %tmp_423, %tmp_423
  %p_Val2_20_6_2 = add i41 %tmp_2919_6_2, %tmp_2820_6_2
  %tmp_424 = sext i27 %p_Val2_18_6_2 to i41
  %tmp_3118_6_2_cast = mul i41 %tmp_424, %tmp_424
  %p_Val2_21_6_2 = add i41 %p_Val2_20_6_2, %tmp_3118_6_2_cast
  %tmp_425 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_6_2, i32 14, i32 28)
  %x_in_V_read_assign_49 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_425, i33 0)
  %sqrtX_out_V_write_as_49 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_49) nounwind
  %tmp_984 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_6_2, i32 14, i32 40)
  %OP1_V_639_2_cast_cas = sext i27 %tmp_984 to i42
  %tmp_985 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_49, i32 10, i32 24)
  %OP2_V_3_6_2_cast_cas = zext i15 %tmp_985 to i42
  %tmp_37_6_2 = mul i42 %OP2_V_3_6_2_cast_cas, %OP1_V_639_2_cast_cas
  %tmp_38_6_2 = icmp eq i42 %tmp_37_6_2, 0
  %dp_4_6_6 = sext i42 %tmp_37_6_2 to i64
  %dp_4_6_2 = sitofp i64 %dp_4_6_6 to double
  %res_V_6_2 = bitcast double %dp_4_6_2 to i64
  %p_Result_6_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_6_2, i32 52, i32 62)
  %exp_V_5_6_2 = add i11 -28, %p_Result_6_2
  %p_Result_43_6_2 = call i64 @llvm.part.set.i64.i11(i64 %res_V_6_2, i11 %exp_V_5_6_2, i32 52, i32 62) nounwind
  %dp_6_2 = bitcast i64 %p_Result_43_6_2 to double
  %p_0_i_6_2 = select i1 %tmp_38_6_2, double 0.000000e+00, double %dp_6_2
  %tmp_39_6_2 = fdiv double -1.000000e+00, %p_0_i_6_2
  %prefact_6_2 = fmul double %tmp_39_6_2, 0.000000e+00
  %ireg_V_6_2 = bitcast double %prefact_6_2 to i64
  %tmp_986 = trunc i64 %ireg_V_6_2 to i63
  %tmp_987 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_6_2, i32 63)
  %p_Result_40_6_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_6_2, i32 52, i32 62)
  %tmp_42_6_2 = zext i11 %p_Result_40_6_2 to i12
  %tmp_988 = trunc i64 %ireg_V_6_2 to i52
  %tmp_166 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_988)
  %p_Result_45_6_2 = zext i53 %tmp_166 to i54
  %man_V_1_6_2 = sub i54 0, %p_Result_45_6_2
  %man_V_2_6_2 = select i1 %tmp_987, i54 %man_V_1_6_2, i54 %p_Result_45_6_2
  %tmp_44_6_2 = icmp eq i63 %tmp_986, 0
  %F2_6_2 = sub i12 1075, %tmp_42_6_2
  %tmp_46_6_2 = icmp sgt i12 %F2_6_2, 14
  %tmp_47_6_2 = add i12 -14, %F2_6_2
  %tmp_48_6_2 = sub i12 14, %F2_6_2
  %sh_amt_6_2 = select i1 %tmp_46_6_2, i12 %tmp_47_6_2, i12 %tmp_48_6_2
  %sh_amt_6_2_cast = sext i12 %sh_amt_6_2 to i32
  %tmp_49_6_2 = icmp eq i12 %F2_6_2, 14
  %tmp_989 = trunc i54 %man_V_2_6_2 to i27
  %tmp_51_6_2 = icmp ult i12 %sh_amt_6_2, 54
  %tmp_53_6_2 = icmp ult i12 %sh_amt_6_2, 27
  %tmp_54_6_2 = zext i32 %sh_amt_6_2_cast to i54
  %tmp_55_6_2 = ashr i54 %man_V_2_6_2, %tmp_54_6_2
  %tmp_990 = trunc i54 %tmp_55_6_2 to i27
  %storemerge_6_2 = select i1 %tmp_987, i27 -1, i27 0
  %tmp_57_6_2 = sext i27 %tmp_989 to i32
  %tmp_58_6_2 = shl i32 %tmp_57_6_2, %sh_amt_6_2_cast
  %tmp_991 = trunc i32 %tmp_58_6_2 to i27
  %sel_tmp450 = xor i1 %tmp_44_6_2, true
  %sel_tmp451 = and i1 %tmp_49_6_2, %sel_tmp450
  %sel_tmp1256_demorgan = or i1 %tmp_44_6_2, %tmp_49_6_2
  %sel_tmp452 = xor i1 %sel_tmp1256_demorgan, true
  %sel_tmp453 = and i1 %tmp_46_6_2, %sel_tmp452
  %sel_tmp454 = xor i1 %tmp_51_6_2, true
  %sel_tmp455 = and i1 %sel_tmp453, %sel_tmp454
  %sel_tmp456 = and i1 %sel_tmp453, %tmp_51_6_2
  %sel_tmp1271_demorgan = or i1 %sel_tmp1256_demorgan, %tmp_46_6_2
  %sel_tmp457 = xor i1 %sel_tmp1271_demorgan, true
  %sel_tmp458 = and i1 %tmp_53_6_2, %sel_tmp457
  %newSel200 = select i1 %sel_tmp458, i27 %tmp_991, i27 %tmp_990
  %or_cond150 = or i1 %sel_tmp458, %sel_tmp456
  %newSel201 = select i1 %sel_tmp455, i27 %storemerge_6_2, i27 %tmp_989
  %or_cond151 = or i1 %sel_tmp455, %sel_tmp451
  %newSel202 = select i1 %or_cond150, i27 %newSel200, i27 %newSel201
  %or_cond152 = or i1 %or_cond150, %or_cond151
  %newSel203 = select i1 %or_cond152, i27 %newSel202, i27 0
  %tmp_426 = sext i27 %newSel203 to i41
  %tmp_427 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_6_1, i32 14, i32 40)
  %tmp_61_6_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_427, i14 0)
  %tmp_6223_6_2_cast = mul i41 %tmp_426, %tmp_422
  %p_Val2_30_6_2 = add i41 %tmp_61_6_2, %tmp_6223_6_2_cast
  %tmp_428 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_6_1, i32 14, i32 40)
  %tmp_66_6_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_428, i14 0)
  %tmp_6724_6_2_cast = mul i41 %tmp_426, %tmp_423
  %p_Val2_33_6_2 = add i41 %tmp_66_6_2, %tmp_6724_6_2_cast
  %tmp_429 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_6_1, i32 14, i32 40)
  %tmp_71_6_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_429, i14 0)
  %tmp_7225_6_2_cast = mul i41 %tmp_426, %tmp_424
  %p_Val2_36_6_2 = add i41 %tmp_71_6_2, %tmp_7225_6_2_cast
  %p_Val2_12_6_3 = sub i27 %p_x_V_6_load, %p_x_V_3_load
  %p_Val2_15_6_3 = sub i27 %p_y_V_6_load, %p_y_V_3_load
  %p_Val2_18_6_3 = sub i27 %p_z_V_6_load, %p_z_V_3_load
  %tmp_430 = sext i27 %p_Val2_12_6_3 to i41
  %tmp_431 = sext i27 %p_Val2_15_6_3 to i41
  %tmp_2820_6_3 = mul i41 %tmp_430, %tmp_430
  %tmp_2919_6_3 = mul i41 %tmp_431, %tmp_431
  %p_Val2_20_6_3 = add i41 %tmp_2919_6_3, %tmp_2820_6_3
  %tmp_432 = sext i27 %p_Val2_18_6_3 to i41
  %tmp_3118_6_3_cast = mul i41 %tmp_432, %tmp_432
  %p_Val2_21_6_3 = add i41 %p_Val2_20_6_3, %tmp_3118_6_3_cast
  %tmp_433 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_6_3, i32 14, i32 28)
  %x_in_V_read_assign_50 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_433, i33 0)
  %sqrtX_out_V_write_as_50 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_50) nounwind
  %tmp_992 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_6_3, i32 14, i32 40)
  %OP1_V_639_3_cast_cas = sext i27 %tmp_992 to i42
  %tmp_993 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_50, i32 10, i32 24)
  %OP2_V_3_6_3_cast_cas = zext i15 %tmp_993 to i42
  %tmp_37_6_3 = mul i42 %OP2_V_3_6_3_cast_cas, %OP1_V_639_3_cast_cas
  %tmp_38_6_3 = icmp eq i42 %tmp_37_6_3, 0
  %dp_4_6_9 = sext i42 %tmp_37_6_3 to i64
  %dp_4_6_3 = sitofp i64 %dp_4_6_9 to double
  %res_V_6_3 = bitcast double %dp_4_6_3 to i64
  %p_Result_6_3 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_6_3, i32 52, i32 62)
  %exp_V_5_6_3 = add i11 -28, %p_Result_6_3
  %p_Result_43_6_3 = call i64 @llvm.part.set.i64.i11(i64 %res_V_6_3, i11 %exp_V_5_6_3, i32 52, i32 62) nounwind
  %dp_6_3 = bitcast i64 %p_Result_43_6_3 to double
  %p_0_i_6_3 = select i1 %tmp_38_6_3, double 0.000000e+00, double %dp_6_3
  %tmp_39_6_3 = fdiv double -1.000000e+00, %p_0_i_6_3
  %prefact_6_3 = fmul double %tmp_39_6_3, 0.000000e+00
  %ireg_V_6_3 = bitcast double %prefact_6_3 to i64
  %tmp_994 = trunc i64 %ireg_V_6_3 to i63
  %tmp_995 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_6_3, i32 63)
  %p_Result_40_6_3 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_6_3, i32 52, i32 62)
  %tmp_42_6_3 = zext i11 %p_Result_40_6_3 to i12
  %tmp_996 = trunc i64 %ireg_V_6_3 to i52
  %tmp_167 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_996)
  %p_Result_45_6_3 = zext i53 %tmp_167 to i54
  %man_V_1_6_3 = sub i54 0, %p_Result_45_6_3
  %man_V_2_6_3 = select i1 %tmp_995, i54 %man_V_1_6_3, i54 %p_Result_45_6_3
  %tmp_44_6_3 = icmp eq i63 %tmp_994, 0
  %F2_6_3 = sub i12 1075, %tmp_42_6_3
  %tmp_46_6_3 = icmp sgt i12 %F2_6_3, 14
  %tmp_47_6_3 = add i12 -14, %F2_6_3
  %tmp_48_6_3 = sub i12 14, %F2_6_3
  %sh_amt_6_3 = select i1 %tmp_46_6_3, i12 %tmp_47_6_3, i12 %tmp_48_6_3
  %sh_amt_6_3_cast = sext i12 %sh_amt_6_3 to i32
  %tmp_49_6_3 = icmp eq i12 %F2_6_3, 14
  %tmp_997 = trunc i54 %man_V_2_6_3 to i27
  %tmp_51_6_3 = icmp ult i12 %sh_amt_6_3, 54
  %tmp_53_6_3 = icmp ult i12 %sh_amt_6_3, 27
  %tmp_54_6_3 = zext i32 %sh_amt_6_3_cast to i54
  %tmp_55_6_3 = ashr i54 %man_V_2_6_3, %tmp_54_6_3
  %tmp_998 = trunc i54 %tmp_55_6_3 to i27
  %storemerge_6_3 = select i1 %tmp_995, i27 -1, i27 0
  %tmp_57_6_3 = sext i27 %tmp_997 to i32
  %tmp_58_6_3 = shl i32 %tmp_57_6_3, %sh_amt_6_3_cast
  %tmp_999 = trunc i32 %tmp_58_6_3 to i27
  %sel_tmp459 = xor i1 %tmp_44_6_3, true
  %sel_tmp460 = and i1 %tmp_49_6_3, %sel_tmp459
  %sel_tmp1281_demorgan = or i1 %tmp_44_6_3, %tmp_49_6_3
  %sel_tmp461 = xor i1 %sel_tmp1281_demorgan, true
  %sel_tmp462 = and i1 %tmp_46_6_3, %sel_tmp461
  %sel_tmp463 = xor i1 %tmp_51_6_3, true
  %sel_tmp464 = and i1 %sel_tmp462, %sel_tmp463
  %sel_tmp465 = and i1 %sel_tmp462, %tmp_51_6_3
  %sel_tmp1296_demorgan = or i1 %sel_tmp1281_demorgan, %tmp_46_6_3
  %sel_tmp466 = xor i1 %sel_tmp1296_demorgan, true
  %sel_tmp467 = and i1 %tmp_53_6_3, %sel_tmp466
  %newSel204 = select i1 %sel_tmp467, i27 %tmp_999, i27 %tmp_998
  %or_cond153 = or i1 %sel_tmp467, %sel_tmp465
  %newSel205 = select i1 %sel_tmp464, i27 %storemerge_6_3, i27 %tmp_997
  %or_cond154 = or i1 %sel_tmp464, %sel_tmp460
  %newSel206 = select i1 %or_cond153, i27 %newSel204, i27 %newSel205
  %or_cond155 = or i1 %or_cond153, %or_cond154
  %newSel207 = select i1 %or_cond155, i27 %newSel206, i27 0
  %tmp_434 = sext i27 %newSel207 to i41
  %tmp_435 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_6_2, i32 14, i32 40)
  %tmp_61_6_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_435, i14 0)
  %tmp_6223_6_3_cast = mul i41 %tmp_434, %tmp_430
  %p_Val2_30_6_3 = add i41 %tmp_61_6_3, %tmp_6223_6_3_cast
  %tmp_436 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_6_2, i32 14, i32 40)
  %tmp_66_6_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_436, i14 0)
  %tmp_6724_6_3_cast = mul i41 %tmp_434, %tmp_431
  %p_Val2_33_6_3 = add i41 %tmp_66_6_3, %tmp_6724_6_3_cast
  %tmp_437 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_6_2, i32 14, i32 40)
  %tmp_71_6_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_437, i14 0)
  %tmp_7225_6_3_cast = mul i41 %tmp_434, %tmp_432
  %p_Val2_36_6_3 = add i41 %tmp_71_6_3, %tmp_7225_6_3_cast
  %p_Val2_12_6_4 = sub i27 %p_x_V_6_load, %p_x_V_4_load
  %p_Val2_15_6_4 = sub i27 %p_y_V_6_load, %p_y_V_4_load
  %p_Val2_18_6_4 = sub i27 %p_z_V_6_load, %p_z_V_4_load
  %tmp_438 = sext i27 %p_Val2_12_6_4 to i41
  %tmp_439 = sext i27 %p_Val2_15_6_4 to i41
  %tmp_2820_6_4 = mul i41 %tmp_438, %tmp_438
  %tmp_2919_6_4 = mul i41 %tmp_439, %tmp_439
  %p_Val2_20_6_4 = add i41 %tmp_2919_6_4, %tmp_2820_6_4
  %tmp_440 = sext i27 %p_Val2_18_6_4 to i41
  %tmp_3118_6_4_cast = mul i41 %tmp_440, %tmp_440
  %p_Val2_21_6_4 = add i41 %p_Val2_20_6_4, %tmp_3118_6_4_cast
  %tmp_441 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_6_4, i32 14, i32 28)
  %x_in_V_read_assign_51 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_441, i33 0)
  %sqrtX_out_V_write_as_51 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_51) nounwind
  %tmp_1000 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_6_4, i32 14, i32 40)
  %OP1_V_639_4_cast_cas = sext i27 %tmp_1000 to i42
  %tmp_1001 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_51, i32 10, i32 24)
  %OP2_V_3_6_4_cast_cas = zext i15 %tmp_1001 to i42
  %tmp_37_6_4 = mul i42 %OP2_V_3_6_4_cast_cas, %OP1_V_639_4_cast_cas
  %tmp_38_6_4 = icmp eq i42 %tmp_37_6_4, 0
  %dp_4_6_10 = sext i42 %tmp_37_6_4 to i64
  %dp_4_6_4 = sitofp i64 %dp_4_6_10 to double
  %res_V_6_4 = bitcast double %dp_4_6_4 to i64
  %p_Result_6_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_6_4, i32 52, i32 62)
  %exp_V_5_6_4 = add i11 -28, %p_Result_6_4
  %p_Result_43_6_4 = call i64 @llvm.part.set.i64.i11(i64 %res_V_6_4, i11 %exp_V_5_6_4, i32 52, i32 62) nounwind
  %dp_6_4 = bitcast i64 %p_Result_43_6_4 to double
  %p_0_i_6_4 = select i1 %tmp_38_6_4, double 0.000000e+00, double %dp_6_4
  %tmp_39_6_4 = fdiv double -1.000000e+00, %p_0_i_6_4
  %prefact_6_4 = fmul double %tmp_39_6_4, 0.000000e+00
  %ireg_V_6_4 = bitcast double %prefact_6_4 to i64
  %tmp_1002 = trunc i64 %ireg_V_6_4 to i63
  %tmp_1003 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_6_4, i32 63)
  %p_Result_40_6_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_6_4, i32 52, i32 62)
  %tmp_42_6_4 = zext i11 %p_Result_40_6_4 to i12
  %tmp_1004 = trunc i64 %ireg_V_6_4 to i52
  %tmp_168 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1004)
  %p_Result_45_6_4 = zext i53 %tmp_168 to i54
  %man_V_1_6_4 = sub i54 0, %p_Result_45_6_4
  %man_V_2_6_4 = select i1 %tmp_1003, i54 %man_V_1_6_4, i54 %p_Result_45_6_4
  %tmp_44_6_4 = icmp eq i63 %tmp_1002, 0
  %F2_6_4 = sub i12 1075, %tmp_42_6_4
  %tmp_46_6_4 = icmp sgt i12 %F2_6_4, 14
  %tmp_47_6_4 = add i12 -14, %F2_6_4
  %tmp_48_6_4 = sub i12 14, %F2_6_4
  %sh_amt_6_4 = select i1 %tmp_46_6_4, i12 %tmp_47_6_4, i12 %tmp_48_6_4
  %sh_amt_6_4_cast = sext i12 %sh_amt_6_4 to i32
  %tmp_49_6_4 = icmp eq i12 %F2_6_4, 14
  %tmp_1005 = trunc i54 %man_V_2_6_4 to i27
  %tmp_51_6_4 = icmp ult i12 %sh_amt_6_4, 54
  %tmp_53_6_4 = icmp ult i12 %sh_amt_6_4, 27
  %tmp_54_6_4 = zext i32 %sh_amt_6_4_cast to i54
  %tmp_55_6_4 = ashr i54 %man_V_2_6_4, %tmp_54_6_4
  %tmp_1006 = trunc i54 %tmp_55_6_4 to i27
  %storemerge_6_4 = select i1 %tmp_1003, i27 -1, i27 0
  %tmp_57_6_4 = sext i27 %tmp_1005 to i32
  %tmp_58_6_4 = shl i32 %tmp_57_6_4, %sh_amt_6_4_cast
  %tmp_1007 = trunc i32 %tmp_58_6_4 to i27
  %sel_tmp468 = xor i1 %tmp_44_6_4, true
  %sel_tmp469 = and i1 %tmp_49_6_4, %sel_tmp468
  %sel_tmp1306_demorgan = or i1 %tmp_44_6_4, %tmp_49_6_4
  %sel_tmp470 = xor i1 %sel_tmp1306_demorgan, true
  %sel_tmp471 = and i1 %tmp_46_6_4, %sel_tmp470
  %sel_tmp472 = xor i1 %tmp_51_6_4, true
  %sel_tmp473 = and i1 %sel_tmp471, %sel_tmp472
  %sel_tmp474 = and i1 %sel_tmp471, %tmp_51_6_4
  %sel_tmp1321_demorgan = or i1 %sel_tmp1306_demorgan, %tmp_46_6_4
  %sel_tmp475 = xor i1 %sel_tmp1321_demorgan, true
  %sel_tmp476 = and i1 %tmp_53_6_4, %sel_tmp475
  %newSel208 = select i1 %sel_tmp476, i27 %tmp_1007, i27 %tmp_1006
  %or_cond156 = or i1 %sel_tmp476, %sel_tmp474
  %newSel209 = select i1 %sel_tmp473, i27 %storemerge_6_4, i27 %tmp_1005
  %or_cond157 = or i1 %sel_tmp473, %sel_tmp469
  %newSel210 = select i1 %or_cond156, i27 %newSel208, i27 %newSel209
  %or_cond158 = or i1 %or_cond156, %or_cond157
  %newSel211 = select i1 %or_cond158, i27 %newSel210, i27 0
  %tmp_442 = sext i27 %newSel211 to i41
  %tmp_443 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_6_3, i32 14, i32 40)
  %tmp_61_6_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_443, i14 0)
  %tmp_6223_6_4_cast = mul i41 %tmp_442, %tmp_438
  %p_Val2_30_6_4 = add i41 %tmp_61_6_4, %tmp_6223_6_4_cast
  %tmp_444 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_6_3, i32 14, i32 40)
  %tmp_66_6_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_444, i14 0)
  %tmp_6724_6_4_cast = mul i41 %tmp_442, %tmp_439
  %p_Val2_33_6_4 = add i41 %tmp_66_6_4, %tmp_6724_6_4_cast
  %tmp_445 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_6_3, i32 14, i32 40)
  %tmp_71_6_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_445, i14 0)
  %tmp_7225_6_4_cast = mul i41 %tmp_442, %tmp_440
  %p_Val2_36_6_4 = add i41 %tmp_71_6_4, %tmp_7225_6_4_cast
  %p_Val2_12_6_5 = sub i27 %p_x_V_6_load, %p_x_V_5_load
  %p_Val2_15_6_5 = sub i27 %p_y_V_6_load, %p_y_V_5_load
  %p_Val2_18_6_5 = sub i27 %p_z_V_6_load, %p_z_V_5_load
  %tmp_446 = sext i27 %p_Val2_12_6_5 to i41
  %tmp_447 = sext i27 %p_Val2_15_6_5 to i41
  %tmp_2820_6_5 = mul i41 %tmp_446, %tmp_446
  %tmp_2919_6_5 = mul i41 %tmp_447, %tmp_447
  %p_Val2_20_6_5 = add i41 %tmp_2919_6_5, %tmp_2820_6_5
  %tmp_448 = sext i27 %p_Val2_18_6_5 to i41
  %tmp_3118_6_5_cast = mul i41 %tmp_448, %tmp_448
  %p_Val2_21_6_5 = add i41 %p_Val2_20_6_5, %tmp_3118_6_5_cast
  %tmp_449 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_6_5, i32 14, i32 28)
  %x_in_V_read_assign_52 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_449, i33 0)
  %sqrtX_out_V_write_as_52 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_52) nounwind
  %tmp_1008 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_6_5, i32 14, i32 40)
  %OP1_V_639_5_cast_cas = sext i27 %tmp_1008 to i42
  %tmp_1009 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_52, i32 10, i32 24)
  %OP2_V_3_6_5_cast_cas = zext i15 %tmp_1009 to i42
  %tmp_37_6_5 = mul i42 %OP2_V_3_6_5_cast_cas, %OP1_V_639_5_cast_cas
  %tmp_38_6_5 = icmp eq i42 %tmp_37_6_5, 0
  %dp_4_6_11 = sext i42 %tmp_37_6_5 to i64
  %dp_4_6_5 = sitofp i64 %dp_4_6_11 to double
  %res_V_6_5 = bitcast double %dp_4_6_5 to i64
  %p_Result_6_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_6_5, i32 52, i32 62)
  %exp_V_5_6_5 = add i11 -28, %p_Result_6_5
  %p_Result_43_6_5 = call i64 @llvm.part.set.i64.i11(i64 %res_V_6_5, i11 %exp_V_5_6_5, i32 52, i32 62) nounwind
  %dp_6_5 = bitcast i64 %p_Result_43_6_5 to double
  %p_0_i_6_5 = select i1 %tmp_38_6_5, double 0.000000e+00, double %dp_6_5
  %tmp_39_6_5 = fdiv double -1.000000e+00, %p_0_i_6_5
  %prefact_6_5 = fmul double %tmp_39_6_5, 0x3F4E000000000000
  %ireg_V_6_5 = bitcast double %prefact_6_5 to i64
  %tmp_1010 = trunc i64 %ireg_V_6_5 to i63
  %tmp_1011 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_6_5, i32 63)
  %p_Result_40_6_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_6_5, i32 52, i32 62)
  %tmp_42_6_5 = zext i11 %p_Result_40_6_5 to i12
  %tmp_1012 = trunc i64 %ireg_V_6_5 to i52
  %tmp_169 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1012)
  %p_Result_45_6_5 = zext i53 %tmp_169 to i54
  %man_V_1_6_5 = sub i54 0, %p_Result_45_6_5
  %man_V_2_6_5 = select i1 %tmp_1011, i54 %man_V_1_6_5, i54 %p_Result_45_6_5
  %tmp_44_6_5 = icmp eq i63 %tmp_1010, 0
  %F2_6_5 = sub i12 1075, %tmp_42_6_5
  %tmp_46_6_5 = icmp sgt i12 %F2_6_5, 14
  %tmp_47_6_5 = add i12 -14, %F2_6_5
  %tmp_48_6_5 = sub i12 14, %F2_6_5
  %sh_amt_6_5 = select i1 %tmp_46_6_5, i12 %tmp_47_6_5, i12 %tmp_48_6_5
  %sh_amt_6_5_cast = sext i12 %sh_amt_6_5 to i32
  %tmp_49_6_5 = icmp eq i12 %F2_6_5, 14
  %tmp_1013 = trunc i54 %man_V_2_6_5 to i27
  %tmp_51_6_5 = icmp ult i12 %sh_amt_6_5, 54
  %tmp_53_6_5 = icmp ult i12 %sh_amt_6_5, 27
  %tmp_54_6_5 = zext i32 %sh_amt_6_5_cast to i54
  %tmp_55_6_5 = ashr i54 %man_V_2_6_5, %tmp_54_6_5
  %tmp_1014 = trunc i54 %tmp_55_6_5 to i27
  %storemerge_6_5 = select i1 %tmp_1011, i27 -1, i27 0
  %tmp_57_6_5 = sext i27 %tmp_1013 to i32
  %tmp_58_6_5 = shl i32 %tmp_57_6_5, %sh_amt_6_5_cast
  %tmp_1015 = trunc i32 %tmp_58_6_5 to i27
  %sel_tmp477 = xor i1 %tmp_44_6_5, true
  %sel_tmp478 = and i1 %tmp_49_6_5, %sel_tmp477
  %sel_tmp1331_demorgan = or i1 %tmp_44_6_5, %tmp_49_6_5
  %sel_tmp479 = xor i1 %sel_tmp1331_demorgan, true
  %sel_tmp480 = and i1 %tmp_46_6_5, %sel_tmp479
  %sel_tmp481 = xor i1 %tmp_51_6_5, true
  %sel_tmp482 = and i1 %sel_tmp480, %sel_tmp481
  %sel_tmp483 = and i1 %sel_tmp480, %tmp_51_6_5
  %sel_tmp1346_demorgan = or i1 %sel_tmp1331_demorgan, %tmp_46_6_5
  %sel_tmp484 = xor i1 %sel_tmp1346_demorgan, true
  %sel_tmp485 = and i1 %tmp_53_6_5, %sel_tmp484
  %newSel212 = select i1 %sel_tmp485, i27 %tmp_1015, i27 %tmp_1014
  %or_cond159 = or i1 %sel_tmp485, %sel_tmp483
  %newSel213 = select i1 %sel_tmp482, i27 %storemerge_6_5, i27 %tmp_1013
  %or_cond160 = or i1 %sel_tmp482, %sel_tmp478
  %newSel214 = select i1 %or_cond159, i27 %newSel212, i27 %newSel213
  %or_cond161 = or i1 %or_cond159, %or_cond160
  %newSel215 = select i1 %or_cond161, i27 %newSel214, i27 0
  %tmp_450 = sext i27 %newSel215 to i41
  %tmp_451 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_6_4, i32 14, i32 40)
  %tmp_61_6_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_451, i14 0)
  %tmp_6223_6_5_cast = mul i41 %tmp_450, %tmp_446
  %p_Val2_30_6_5 = add i41 %tmp_61_6_5, %tmp_6223_6_5_cast
  %tmp_452 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_6_4, i32 14, i32 40)
  %tmp_66_6_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_452, i14 0)
  %tmp_6724_6_5_cast = mul i41 %tmp_450, %tmp_447
  %p_Val2_33_6_5 = add i41 %tmp_66_6_5, %tmp_6724_6_5_cast
  %tmp_453 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_6_4, i32 14, i32 40)
  %tmp_71_6_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_453, i14 0)
  %tmp_7225_6_5_cast = mul i41 %tmp_450, %tmp_448
  %p_Val2_36_6_5 = add i41 %tmp_71_6_5, %tmp_7225_6_5_cast
  %p_Val2_12_6_7 = sub i27 %p_x_V_6_load, %p_x_V_7_load
  %p_Val2_15_6_7 = sub i27 %p_y_V_6_load, %p_y_V_7_load
  %p_Val2_18_6_7 = sub i27 %p_z_V_6_load, %p_z_V_7_load
  %tmp_454 = sext i27 %p_Val2_12_6_7 to i41
  %tmp_455 = sext i27 %p_Val2_15_6_7 to i41
  %tmp_2820_6_7 = mul i41 %tmp_454, %tmp_454
  %tmp_2919_6_7 = mul i41 %tmp_455, %tmp_455
  %p_Val2_20_6_7 = add i41 %tmp_2919_6_7, %tmp_2820_6_7
  %tmp_456 = sext i27 %p_Val2_18_6_7 to i41
  %tmp_3118_6_7_cast = mul i41 %tmp_456, %tmp_456
  %p_Val2_21_6_7 = add i41 %p_Val2_20_6_7, %tmp_3118_6_7_cast
  %tmp_457 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_6_7, i32 14, i32 28)
  %x_in_V_read_assign_53 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_457, i33 0)
  %sqrtX_out_V_write_as_53 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_53) nounwind
  %tmp_1016 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_6_7, i32 14, i32 40)
  %OP1_V_639_7_cast_cas = sext i27 %tmp_1016 to i42
  %tmp_1017 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_53, i32 10, i32 24)
  %OP2_V_3_6_7_cast_cas = zext i15 %tmp_1017 to i42
  %tmp_37_6_7 = mul i42 %OP2_V_3_6_7_cast_cas, %OP1_V_639_7_cast_cas
  %tmp_38_6_7 = icmp eq i42 %tmp_37_6_7, 0
  %dp_4_6_12 = sext i42 %tmp_37_6_7 to i64
  %dp_4_6_7 = sitofp i64 %dp_4_6_12 to double
  %res_V_6_7 = bitcast double %dp_4_6_7 to i64
  %p_Result_6_7 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_6_7, i32 52, i32 62)
  %exp_V_5_6_7 = add i11 -28, %p_Result_6_7
  %p_Result_43_6_7 = call i64 @llvm.part.set.i64.i11(i64 %res_V_6_7, i11 %exp_V_5_6_7, i32 52, i32 62) nounwind
  %dp_6_7 = bitcast i64 %p_Result_43_6_7 to double
  %p_0_i_6_7 = select i1 %tmp_38_6_7, double 0.000000e+00, double %dp_6_7
  %tmp_39_6_7 = fdiv double -1.000000e+00, %p_0_i_6_7
  %prefact_6_7 = fmul double %tmp_39_6_7, 0.000000e+00
  %ireg_V_6_7 = bitcast double %prefact_6_7 to i64
  %tmp_1018 = trunc i64 %ireg_V_6_7 to i63
  %tmp_1019 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_6_7, i32 63)
  %p_Result_40_6_7 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_6_7, i32 52, i32 62)
  %tmp_42_6_7 = zext i11 %p_Result_40_6_7 to i12
  %tmp_1020 = trunc i64 %ireg_V_6_7 to i52
  %tmp_170 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1020)
  %p_Result_45_6_7 = zext i53 %tmp_170 to i54
  %man_V_1_6_7 = sub i54 0, %p_Result_45_6_7
  %man_V_2_6_7 = select i1 %tmp_1019, i54 %man_V_1_6_7, i54 %p_Result_45_6_7
  %tmp_44_6_7 = icmp eq i63 %tmp_1018, 0
  %F2_6_7 = sub i12 1075, %tmp_42_6_7
  %tmp_46_6_7 = icmp sgt i12 %F2_6_7, 14
  %tmp_47_6_7 = add i12 -14, %F2_6_7
  %tmp_48_6_7 = sub i12 14, %F2_6_7
  %sh_amt_6_7 = select i1 %tmp_46_6_7, i12 %tmp_47_6_7, i12 %tmp_48_6_7
  %sh_amt_6_7_cast = sext i12 %sh_amt_6_7 to i32
  %tmp_49_6_7 = icmp eq i12 %F2_6_7, 14
  %tmp_1021 = trunc i54 %man_V_2_6_7 to i27
  %tmp_51_6_7 = icmp ult i12 %sh_amt_6_7, 54
  %tmp_53_6_7 = icmp ult i12 %sh_amt_6_7, 27
  %tmp_54_6_7 = zext i32 %sh_amt_6_7_cast to i54
  %tmp_55_6_7 = ashr i54 %man_V_2_6_7, %tmp_54_6_7
  %tmp_1022 = trunc i54 %tmp_55_6_7 to i27
  %storemerge_6_7 = select i1 %tmp_1019, i27 -1, i27 0
  %tmp_57_6_7 = sext i27 %tmp_1021 to i32
  %tmp_58_6_7 = shl i32 %tmp_57_6_7, %sh_amt_6_7_cast
  %tmp_1023 = trunc i32 %tmp_58_6_7 to i27
  %sel_tmp486 = xor i1 %tmp_44_6_7, true
  %sel_tmp487 = and i1 %tmp_49_6_7, %sel_tmp486
  %sel_tmp1356_demorgan = or i1 %tmp_44_6_7, %tmp_49_6_7
  %sel_tmp488 = xor i1 %sel_tmp1356_demorgan, true
  %sel_tmp489 = and i1 %tmp_46_6_7, %sel_tmp488
  %sel_tmp490 = xor i1 %tmp_51_6_7, true
  %sel_tmp491 = and i1 %sel_tmp489, %sel_tmp490
  %sel_tmp492 = and i1 %sel_tmp489, %tmp_51_6_7
  %sel_tmp1371_demorgan = or i1 %sel_tmp1356_demorgan, %tmp_46_6_7
  %sel_tmp493 = xor i1 %sel_tmp1371_demorgan, true
  %sel_tmp494 = and i1 %tmp_53_6_7, %sel_tmp493
  %newSel216 = select i1 %sel_tmp494, i27 %tmp_1023, i27 %tmp_1022
  %or_cond162 = or i1 %sel_tmp494, %sel_tmp492
  %newSel217 = select i1 %sel_tmp491, i27 %storemerge_6_7, i27 %tmp_1021
  %or_cond163 = or i1 %sel_tmp491, %sel_tmp487
  %newSel218 = select i1 %or_cond162, i27 %newSel216, i27 %newSel217
  %or_cond164 = or i1 %or_cond162, %or_cond163
  %newSel219 = select i1 %or_cond164, i27 %newSel218, i27 0
  %tmp_458 = sext i27 %newSel219 to i41
  %tmp_459 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_6_5, i32 14, i32 40)
  %tmp_61_6_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_459, i14 0)
  %tmp_6223_6_7_cast = mul i41 %tmp_458, %tmp_454
  %p_Val2_30_6_7 = add i41 %tmp_61_6_7, %tmp_6223_6_7_cast
  %tmp_460 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_6_5, i32 14, i32 40)
  %tmp_66_6_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_460, i14 0)
  %tmp_6724_6_7_cast = mul i41 %tmp_458, %tmp_455
  %p_Val2_33_6_7 = add i41 %tmp_66_6_7, %tmp_6724_6_7_cast
  %tmp_461 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_6_5, i32 14, i32 40)
  %tmp_71_6_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_461, i14 0)
  %tmp_7225_6_7_cast = mul i41 %tmp_458, %tmp_456
  %p_Val2_36_6_7 = add i41 %tmp_71_6_7, %tmp_7225_6_7_cast
  %p_Val2_12_6_8 = sub i27 %p_x_V_6_load, %p_x_V_8_load
  %p_Val2_15_6_8 = sub i27 %p_y_V_6_load, %p_y_V_8_load
  %p_Val2_18_6_8 = sub i27 %p_z_V_6_load, %p_z_V_8_load
  %tmp_462 = sext i27 %p_Val2_12_6_8 to i41
  %tmp_463 = sext i27 %p_Val2_15_6_8 to i41
  %tmp_2820_6_8 = mul i41 %tmp_462, %tmp_462
  %tmp_2919_6_8 = mul i41 %tmp_463, %tmp_463
  %p_Val2_20_6_8 = add i41 %tmp_2919_6_8, %tmp_2820_6_8
  %tmp_464 = sext i27 %p_Val2_18_6_8 to i41
  %tmp_3118_6_8_cast = mul i41 %tmp_464, %tmp_464
  %p_Val2_21_6_8 = add i41 %p_Val2_20_6_8, %tmp_3118_6_8_cast
  %tmp_465 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_6_8, i32 14, i32 28)
  %x_in_V_read_assign_54 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_465, i33 0)
  %sqrtX_out_V_write_as_54 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_54) nounwind
  %tmp_1024 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_6_8, i32 14, i32 40)
  %OP1_V_639_8_cast_cas = sext i27 %tmp_1024 to i42
  %tmp_1025 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_54, i32 10, i32 24)
  %OP2_V_3_6_8_cast_cas = zext i15 %tmp_1025 to i42
  %tmp_37_6_8 = mul i42 %OP2_V_3_6_8_cast_cas, %OP1_V_639_8_cast_cas
  %tmp_38_6_8 = icmp eq i42 %tmp_37_6_8, 0
  %dp_4_6_13 = sext i42 %tmp_37_6_8 to i64
  %dp_4_6_8 = sitofp i64 %dp_4_6_13 to double
  %res_V_6_8 = bitcast double %dp_4_6_8 to i64
  %p_Result_6_8 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_6_8, i32 52, i32 62)
  %exp_V_5_6_8 = add i11 -28, %p_Result_6_8
  %p_Result_43_6_8 = call i64 @llvm.part.set.i64.i11(i64 %res_V_6_8, i11 %exp_V_5_6_8, i32 52, i32 62) nounwind
  %dp_6_8 = bitcast i64 %p_Result_43_6_8 to double
  %p_0_i_6_8 = select i1 %tmp_38_6_8, double 0.000000e+00, double %dp_6_8
  %tmp_39_6_8 = fdiv double -1.000000e+00, %p_0_i_6_8
  %prefact_6_8 = fmul double %tmp_39_6_8, 0.000000e+00
  %ireg_V_6_8 = bitcast double %prefact_6_8 to i64
  %tmp_1026 = trunc i64 %ireg_V_6_8 to i63
  %tmp_1027 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_6_8, i32 63)
  %p_Result_40_6_8 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_6_8, i32 52, i32 62)
  %tmp_42_6_8 = zext i11 %p_Result_40_6_8 to i12
  %tmp_1028 = trunc i64 %ireg_V_6_8 to i52
  %tmp_171 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1028)
  %p_Result_45_6_8 = zext i53 %tmp_171 to i54
  %man_V_1_6_8 = sub i54 0, %p_Result_45_6_8
  %man_V_2_6_8 = select i1 %tmp_1027, i54 %man_V_1_6_8, i54 %p_Result_45_6_8
  %tmp_44_6_8 = icmp eq i63 %tmp_1026, 0
  %F2_6_8 = sub i12 1075, %tmp_42_6_8
  %tmp_46_6_8 = icmp sgt i12 %F2_6_8, 14
  %tmp_47_6_8 = add i12 -14, %F2_6_8
  %tmp_48_6_8 = sub i12 14, %F2_6_8
  %sh_amt_6_8 = select i1 %tmp_46_6_8, i12 %tmp_47_6_8, i12 %tmp_48_6_8
  %sh_amt_6_8_cast = sext i12 %sh_amt_6_8 to i32
  %tmp_49_6_8 = icmp eq i12 %F2_6_8, 14
  %tmp_1029 = trunc i54 %man_V_2_6_8 to i27
  %tmp_51_6_8 = icmp ult i12 %sh_amt_6_8, 54
  %tmp_53_6_8 = icmp ult i12 %sh_amt_6_8, 27
  %tmp_54_6_8 = zext i32 %sh_amt_6_8_cast to i54
  %tmp_55_6_8 = ashr i54 %man_V_2_6_8, %tmp_54_6_8
  %tmp_1030 = trunc i54 %tmp_55_6_8 to i27
  %storemerge_6_8 = select i1 %tmp_1027, i27 -1, i27 0
  %tmp_57_6_8 = sext i27 %tmp_1029 to i32
  %tmp_58_6_8 = shl i32 %tmp_57_6_8, %sh_amt_6_8_cast
  %tmp_1031 = trunc i32 %tmp_58_6_8 to i27
  %sel_tmp495 = xor i1 %tmp_44_6_8, true
  %sel_tmp496 = and i1 %tmp_49_6_8, %sel_tmp495
  %sel_tmp1381_demorgan = or i1 %tmp_44_6_8, %tmp_49_6_8
  %sel_tmp497 = xor i1 %sel_tmp1381_demorgan, true
  %sel_tmp498 = and i1 %tmp_46_6_8, %sel_tmp497
  %sel_tmp499 = xor i1 %tmp_51_6_8, true
  %sel_tmp500 = and i1 %sel_tmp498, %sel_tmp499
  %sel_tmp501 = and i1 %sel_tmp498, %tmp_51_6_8
  %sel_tmp1396_demorgan = or i1 %sel_tmp1381_demorgan, %tmp_46_6_8
  %sel_tmp502 = xor i1 %sel_tmp1396_demorgan, true
  %sel_tmp503 = and i1 %tmp_53_6_8, %sel_tmp502
  %newSel220 = select i1 %sel_tmp503, i27 %tmp_1031, i27 %tmp_1030
  %or_cond165 = or i1 %sel_tmp503, %sel_tmp501
  %newSel221 = select i1 %sel_tmp500, i27 %storemerge_6_8, i27 %tmp_1029
  %or_cond166 = or i1 %sel_tmp500, %sel_tmp496
  %newSel222 = select i1 %or_cond165, i27 %newSel220, i27 %newSel221
  %or_cond167 = or i1 %or_cond165, %or_cond166
  %newSel223 = select i1 %or_cond167, i27 %newSel222, i27 0
  %tmp_466 = sext i27 %newSel223 to i41
  %tmp_467 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_6_7, i32 14, i32 40)
  %tmp_61_6_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_467, i14 0)
  %tmp_6223_6_8_cast = mul i41 %tmp_466, %tmp_462
  %p_Val2_30_6_8 = add i41 %tmp_61_6_8, %tmp_6223_6_8_cast
  %tmp_64_6_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_6_8, i32 14, i32 40)
  store i27 %tmp_64_6_8, i27* @p_ax_V_6, align 8
  %tmp_468 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_6_7, i32 14, i32 40)
  %tmp_66_6_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_468, i14 0)
  %tmp_6724_6_8_cast = mul i41 %tmp_466, %tmp_463
  %p_Val2_33_6_8 = add i41 %tmp_66_6_8, %tmp_6724_6_8_cast
  %tmp_69_6_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_6_8, i32 14, i32 40)
  store i27 %tmp_69_6_8, i27* @p_ay_V_6, align 8
  %tmp_469 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_6_7, i32 14, i32 40)
  %tmp_71_6_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_469, i14 0)
  %tmp_7225_6_8_cast = mul i41 %tmp_466, %tmp_464
  %p_Val2_36_6_8 = add i41 %tmp_71_6_8, %tmp_7225_6_8_cast
  %tmp_74_6_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_6_8, i32 14, i32 40)
  store i27 %tmp_74_6_8, i27* @p_az_V_6, align 8
  %p_Val2_12_7 = sub i27 %p_x_V_7_load, %p_x_V_0_load
  %p_Val2_15_7 = sub i27 %p_y_V_7_load, %p_y_V_0_load
  %p_Val2_18_7 = sub i27 %p_z_V_7_load, %p_z_V_0_load
  %OP1_V_5_7_cast = sext i27 %p_Val2_12_7 to i41
  %OP1_V_6_7_cast = sext i27 %p_Val2_15_7 to i41
  %tmp_2820_7 = mul i41 %OP1_V_5_7_cast, %OP1_V_5_7_cast
  %tmp_2919_7 = mul i41 %OP1_V_6_7_cast, %OP1_V_6_7_cast
  %p_Val2_20_7 = add i41 %tmp_2919_7, %tmp_2820_7
  %OP1_V_7_7_cast = sext i27 %p_Val2_18_7 to i41
  %tmp_3118_7_cast = mul i41 %OP1_V_7_7_cast, %OP1_V_7_7_cast
  %p_Val2_21_7 = add i41 %p_Val2_20_7, %tmp_3118_7_cast
  %tmp_470 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_7, i32 14, i32 28)
  %x_in_V_read_assign_55 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_470, i33 0)
  %sqrtX_out_V_write_as_55 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_55) nounwind
  %tmp_1032 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_7, i32 14, i32 40)
  %OP1_V_6_cast_cast = sext i27 %tmp_1032 to i42
  %tmp_1033 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_55, i32 10, i32 24)
  %OP2_V_3_7_cast_cast = zext i15 %tmp_1033 to i42
  %tmp_37_7 = mul i42 %OP2_V_3_7_cast_cast, %OP1_V_6_cast_cast
  %tmp_38_7 = icmp eq i42 %tmp_37_7, 0
  %dp_4_14 = sext i42 %tmp_37_7 to i64
  %dp_4_7 = sitofp i64 %dp_4_14 to double
  %res_V_7 = bitcast double %dp_4_7 to i64
  %p_Result_7 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_7, i32 52, i32 62)
  %exp_V_5_7 = add i11 -28, %p_Result_7
  %p_Result_43_7 = call i64 @llvm.part.set.i64.i11(i64 %res_V_7, i11 %exp_V_5_7, i32 52, i32 62) nounwind
  %dp_7 = bitcast i64 %p_Result_43_7 to double
  %p_0_i_7 = select i1 %tmp_38_7, double 0.000000e+00, double %dp_7
  %tmp_39_7 = fdiv double -1.000000e+00, %p_0_i_7
  %ireg_V_7 = bitcast double %tmp_39_7 to i64
  %tmp_1034 = trunc i64 %ireg_V_7 to i63
  %tmp_1035 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_7, i32 63)
  %p_Result_40_7 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_7, i32 52, i32 62)
  %tmp_42_7 = zext i11 %p_Result_40_7 to i12
  %tmp_1036 = trunc i64 %ireg_V_7 to i52
  %tmp_172 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1036)
  %p_Result_45_7 = zext i53 %tmp_172 to i54
  %man_V_1_7 = sub i54 0, %p_Result_45_7
  %man_V_2_7 = select i1 %tmp_1035, i54 %man_V_1_7, i54 %p_Result_45_7
  %tmp_44_7 = icmp eq i63 %tmp_1034, 0
  %F2_7 = sub i12 1075, %tmp_42_7
  %tmp_46_7 = icmp sgt i12 %F2_7, 14
  %tmp_47_7 = add i12 -14, %F2_7
  %tmp_48_7 = sub i12 14, %F2_7
  %sh_amt_7 = select i1 %tmp_46_7, i12 %tmp_47_7, i12 %tmp_48_7
  %sh_amt_7_cast = sext i12 %sh_amt_7 to i32
  %tmp_49_7 = icmp eq i12 %F2_7, 14
  %tmp_1037 = trunc i54 %man_V_2_7 to i27
  %tmp_51_7 = icmp ult i12 %sh_amt_7, 54
  %tmp_53_7 = icmp ult i12 %sh_amt_7, 27
  %tmp_54_7 = zext i32 %sh_amt_7_cast to i54
  %tmp_55_7 = ashr i54 %man_V_2_7, %tmp_54_7
  %tmp_1038 = trunc i54 %tmp_55_7 to i27
  %storemerge_7 = select i1 %tmp_1035, i27 -1, i27 0
  %tmp_57_7 = sext i27 %tmp_1037 to i32
  %tmp_58_7 = shl i32 %tmp_57_7, %sh_amt_7_cast
  %tmp_1039 = trunc i32 %tmp_58_7 to i27
  %sel_tmp504 = xor i1 %tmp_44_7, true
  %sel_tmp505 = and i1 %tmp_49_7, %sel_tmp504
  %sel_tmp1406_demorgan = or i1 %tmp_44_7, %tmp_49_7
  %sel_tmp506 = xor i1 %sel_tmp1406_demorgan, true
  %sel_tmp507 = and i1 %tmp_46_7, %sel_tmp506
  %sel_tmp508 = xor i1 %tmp_51_7, true
  %sel_tmp509 = and i1 %sel_tmp507, %sel_tmp508
  %sel_tmp510 = and i1 %sel_tmp507, %tmp_51_7
  %sel_tmp1421_demorgan = or i1 %sel_tmp1406_demorgan, %tmp_46_7
  %sel_tmp511 = xor i1 %sel_tmp1421_demorgan, true
  %sel_tmp512 = and i1 %tmp_53_7, %sel_tmp511
  %newSel224 = select i1 %sel_tmp512, i27 %tmp_1039, i27 %tmp_1038
  %or_cond168 = or i1 %sel_tmp512, %sel_tmp510
  %newSel225 = select i1 %sel_tmp509, i27 %storemerge_7, i27 %tmp_1037
  %or_cond169 = or i1 %sel_tmp509, %sel_tmp505
  %newSel226 = select i1 %or_cond168, i27 %newSel224, i27 %newSel225
  %or_cond170 = or i1 %or_cond168, %or_cond169
  %newSel227 = select i1 %or_cond170, i27 %newSel226, i27 0
  %OP1_V_1_7_cast = sext i27 %newSel227 to i41
  %p_Val2_29_7 = mul i41 %OP1_V_1_7_cast, %OP1_V_5_7_cast
  %p_Val2_32_7 = mul i41 %OP1_V_1_7_cast, %OP1_V_6_7_cast
  %p_Val2_35_7 = mul i41 %OP1_V_1_7_cast, %OP1_V_7_7_cast
  %p_Val2_12_7_1 = sub i27 %p_x_V_7_load, %p_x_V_1_load
  %p_Val2_15_7_1 = sub i27 %p_y_V_7_load, %p_y_V_1_load
  %p_Val2_18_7_1 = sub i27 %p_z_V_7_load, %p_z_V_1_load
  %tmp_471 = sext i27 %p_Val2_12_7_1 to i41
  %tmp_472 = sext i27 %p_Val2_15_7_1 to i41
  %tmp_2820_7_1 = mul i41 %tmp_471, %tmp_471
  %tmp_2919_7_1 = mul i41 %tmp_472, %tmp_472
  %p_Val2_20_7_1 = add i41 %tmp_2919_7_1, %tmp_2820_7_1
  %tmp_473 = sext i27 %p_Val2_18_7_1 to i41
  %tmp_3118_7_1_cast = mul i41 %tmp_473, %tmp_473
  %p_Val2_21_7_1 = add i41 %p_Val2_20_7_1, %tmp_3118_7_1_cast
  %tmp_474 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_7_1, i32 14, i32 28)
  %x_in_V_read_assign_56 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_474, i33 0)
  %sqrtX_out_V_write_as_56 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_56) nounwind
  %tmp_1040 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_7_1, i32 14, i32 40)
  %OP1_V_740_1_cast_cas = sext i27 %tmp_1040 to i42
  %tmp_1041 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_56, i32 10, i32 24)
  %OP2_V_3_7_1_cast_cas = zext i15 %tmp_1041 to i42
  %tmp_37_7_1 = mul i42 %OP2_V_3_7_1_cast_cas, %OP1_V_740_1_cast_cas
  %tmp_38_7_1 = icmp eq i42 %tmp_37_7_1, 0
  %dp_4_7_s = sext i42 %tmp_37_7_1 to i64
  %dp_4_7_1 = sitofp i64 %dp_4_7_s to double
  %res_V_7_1 = bitcast double %dp_4_7_1 to i64
  %p_Result_7_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_7_1, i32 52, i32 62)
  %exp_V_5_7_1 = add i11 -28, %p_Result_7_1
  %p_Result_43_7_1 = call i64 @llvm.part.set.i64.i11(i64 %res_V_7_1, i11 %exp_V_5_7_1, i32 52, i32 62) nounwind
  %dp_7_1 = bitcast i64 %p_Result_43_7_1 to double
  %p_0_i_7_1 = select i1 %tmp_38_7_1, double 0.000000e+00, double %dp_7_1
  %tmp_39_7_1 = fdiv double -1.000000e+00, %p_0_i_7_1
  %prefact_7_1 = fmul double %tmp_39_7_1, 0.000000e+00
  %ireg_V_7_1 = bitcast double %prefact_7_1 to i64
  %tmp_1042 = trunc i64 %ireg_V_7_1 to i63
  %tmp_1043 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_7_1, i32 63)
  %p_Result_40_7_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_7_1, i32 52, i32 62)
  %tmp_42_7_1 = zext i11 %p_Result_40_7_1 to i12
  %tmp_1044 = trunc i64 %ireg_V_7_1 to i52
  %tmp_173 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1044)
  %p_Result_45_7_1 = zext i53 %tmp_173 to i54
  %man_V_1_7_1 = sub i54 0, %p_Result_45_7_1
  %man_V_2_7_1 = select i1 %tmp_1043, i54 %man_V_1_7_1, i54 %p_Result_45_7_1
  %tmp_44_7_1 = icmp eq i63 %tmp_1042, 0
  %F2_7_1 = sub i12 1075, %tmp_42_7_1
  %tmp_46_7_1 = icmp sgt i12 %F2_7_1, 14
  %tmp_47_7_1 = add i12 -14, %F2_7_1
  %tmp_48_7_1 = sub i12 14, %F2_7_1
  %sh_amt_7_1 = select i1 %tmp_46_7_1, i12 %tmp_47_7_1, i12 %tmp_48_7_1
  %sh_amt_7_1_cast = sext i12 %sh_amt_7_1 to i32
  %tmp_49_7_1 = icmp eq i12 %F2_7_1, 14
  %tmp_1045 = trunc i54 %man_V_2_7_1 to i27
  %tmp_51_7_1 = icmp ult i12 %sh_amt_7_1, 54
  %tmp_53_7_1 = icmp ult i12 %sh_amt_7_1, 27
  %tmp_54_7_1 = zext i32 %sh_amt_7_1_cast to i54
  %tmp_55_7_1 = ashr i54 %man_V_2_7_1, %tmp_54_7_1
  %tmp_1046 = trunc i54 %tmp_55_7_1 to i27
  %storemerge_7_1 = select i1 %tmp_1043, i27 -1, i27 0
  %tmp_57_7_1 = sext i27 %tmp_1045 to i32
  %tmp_58_7_1 = shl i32 %tmp_57_7_1, %sh_amt_7_1_cast
  %tmp_1047 = trunc i32 %tmp_58_7_1 to i27
  %sel_tmp513 = xor i1 %tmp_44_7_1, true
  %sel_tmp514 = and i1 %tmp_49_7_1, %sel_tmp513
  %sel_tmp1431_demorgan = or i1 %tmp_44_7_1, %tmp_49_7_1
  %sel_tmp515 = xor i1 %sel_tmp1431_demorgan, true
  %sel_tmp516 = and i1 %tmp_46_7_1, %sel_tmp515
  %sel_tmp517 = xor i1 %tmp_51_7_1, true
  %sel_tmp518 = and i1 %sel_tmp516, %sel_tmp517
  %sel_tmp519 = and i1 %sel_tmp516, %tmp_51_7_1
  %sel_tmp1446_demorgan = or i1 %sel_tmp1431_demorgan, %tmp_46_7_1
  %sel_tmp520 = xor i1 %sel_tmp1446_demorgan, true
  %sel_tmp521 = and i1 %tmp_53_7_1, %sel_tmp520
  %newSel228 = select i1 %sel_tmp521, i27 %tmp_1047, i27 %tmp_1046
  %or_cond171 = or i1 %sel_tmp521, %sel_tmp519
  %newSel229 = select i1 %sel_tmp518, i27 %storemerge_7_1, i27 %tmp_1045
  %or_cond172 = or i1 %sel_tmp518, %sel_tmp514
  %newSel230 = select i1 %or_cond171, i27 %newSel228, i27 %newSel229
  %or_cond173 = or i1 %or_cond171, %or_cond172
  %newSel231 = select i1 %or_cond173, i27 %newSel230, i27 0
  %tmp_475 = sext i27 %newSel231 to i41
  %tmp_476 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_29_7, i32 14, i32 40)
  %tmp_61_7_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_476, i14 0)
  %tmp_6223_7_1_cast = mul i41 %tmp_475, %tmp_471
  %p_Val2_30_7_1 = add i41 %tmp_61_7_1, %tmp_6223_7_1_cast
  %tmp_477 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_32_7, i32 14, i32 40)
  %tmp_66_7_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_477, i14 0)
  %tmp_6724_7_1_cast = mul i41 %tmp_475, %tmp_472
  %p_Val2_33_7_1 = add i41 %tmp_66_7_1, %tmp_6724_7_1_cast
  %tmp_478 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_35_7, i32 14, i32 40)
  %tmp_71_7_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_478, i14 0)
  %tmp_7225_7_1_cast = mul i41 %tmp_475, %tmp_473
  %p_Val2_36_7_1 = add i41 %tmp_71_7_1, %tmp_7225_7_1_cast
  %p_Val2_12_7_2 = sub i27 %p_x_V_7_load, %p_x_V_2_load
  %p_Val2_15_7_2 = sub i27 %p_y_V_7_load, %p_y_V_2_load
  %p_Val2_18_7_2 = sub i27 %p_z_V_7_load, %p_z_V_2_load
  %tmp_479 = sext i27 %p_Val2_12_7_2 to i41
  %tmp_480 = sext i27 %p_Val2_15_7_2 to i41
  %tmp_2820_7_2 = mul i41 %tmp_479, %tmp_479
  %tmp_2919_7_2 = mul i41 %tmp_480, %tmp_480
  %p_Val2_20_7_2 = add i41 %tmp_2919_7_2, %tmp_2820_7_2
  %tmp_481 = sext i27 %p_Val2_18_7_2 to i41
  %tmp_3118_7_2_cast = mul i41 %tmp_481, %tmp_481
  %p_Val2_21_7_2 = add i41 %p_Val2_20_7_2, %tmp_3118_7_2_cast
  %tmp_482 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_7_2, i32 14, i32 28)
  %x_in_V_read_assign_57 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_482, i33 0)
  %sqrtX_out_V_write_as_57 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_57) nounwind
  %tmp_1048 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_7_2, i32 14, i32 40)
  %OP1_V_740_2_cast_cas = sext i27 %tmp_1048 to i42
  %tmp_1049 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_57, i32 10, i32 24)
  %OP2_V_3_7_2_cast_cas = zext i15 %tmp_1049 to i42
  %tmp_37_7_2 = mul i42 %OP2_V_3_7_2_cast_cas, %OP1_V_740_2_cast_cas
  %tmp_38_7_2 = icmp eq i42 %tmp_37_7_2, 0
  %dp_4_7_7 = sext i42 %tmp_37_7_2 to i64
  %dp_4_7_2 = sitofp i64 %dp_4_7_7 to double
  %res_V_7_2 = bitcast double %dp_4_7_2 to i64
  %p_Result_7_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_7_2, i32 52, i32 62)
  %exp_V_5_7_2 = add i11 -28, %p_Result_7_2
  %p_Result_43_7_2 = call i64 @llvm.part.set.i64.i11(i64 %res_V_7_2, i11 %exp_V_5_7_2, i32 52, i32 62) nounwind
  %dp_7_2 = bitcast i64 %p_Result_43_7_2 to double
  %p_0_i_7_2 = select i1 %tmp_38_7_2, double 0.000000e+00, double %dp_7_2
  %tmp_39_7_2 = fdiv double -1.000000e+00, %p_0_i_7_2
  %prefact_7_2 = fmul double %tmp_39_7_2, 0.000000e+00
  %ireg_V_7_2 = bitcast double %prefact_7_2 to i64
  %tmp_1050 = trunc i64 %ireg_V_7_2 to i63
  %tmp_1051 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_7_2, i32 63)
  %p_Result_40_7_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_7_2, i32 52, i32 62)
  %tmp_42_7_2 = zext i11 %p_Result_40_7_2 to i12
  %tmp_1052 = trunc i64 %ireg_V_7_2 to i52
  %tmp_174 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1052)
  %p_Result_45_7_2 = zext i53 %tmp_174 to i54
  %man_V_1_7_2 = sub i54 0, %p_Result_45_7_2
  %man_V_2_7_2 = select i1 %tmp_1051, i54 %man_V_1_7_2, i54 %p_Result_45_7_2
  %tmp_44_7_2 = icmp eq i63 %tmp_1050, 0
  %F2_7_2 = sub i12 1075, %tmp_42_7_2
  %tmp_46_7_2 = icmp sgt i12 %F2_7_2, 14
  %tmp_47_7_2 = add i12 -14, %F2_7_2
  %tmp_48_7_2 = sub i12 14, %F2_7_2
  %sh_amt_7_2 = select i1 %tmp_46_7_2, i12 %tmp_47_7_2, i12 %tmp_48_7_2
  %sh_amt_7_2_cast = sext i12 %sh_amt_7_2 to i32
  %tmp_49_7_2 = icmp eq i12 %F2_7_2, 14
  %tmp_1053 = trunc i54 %man_V_2_7_2 to i27
  %tmp_51_7_2 = icmp ult i12 %sh_amt_7_2, 54
  %tmp_53_7_2 = icmp ult i12 %sh_amt_7_2, 27
  %tmp_54_7_2 = zext i32 %sh_amt_7_2_cast to i54
  %tmp_55_7_2 = ashr i54 %man_V_2_7_2, %tmp_54_7_2
  %tmp_1054 = trunc i54 %tmp_55_7_2 to i27
  %storemerge_7_2 = select i1 %tmp_1051, i27 -1, i27 0
  %tmp_57_7_2 = sext i27 %tmp_1053 to i32
  %tmp_58_7_2 = shl i32 %tmp_57_7_2, %sh_amt_7_2_cast
  %tmp_1055 = trunc i32 %tmp_58_7_2 to i27
  %sel_tmp522 = xor i1 %tmp_44_7_2, true
  %sel_tmp523 = and i1 %tmp_49_7_2, %sel_tmp522
  %sel_tmp1456_demorgan = or i1 %tmp_44_7_2, %tmp_49_7_2
  %sel_tmp524 = xor i1 %sel_tmp1456_demorgan, true
  %sel_tmp525 = and i1 %tmp_46_7_2, %sel_tmp524
  %sel_tmp526 = xor i1 %tmp_51_7_2, true
  %sel_tmp527 = and i1 %sel_tmp525, %sel_tmp526
  %sel_tmp528 = and i1 %sel_tmp525, %tmp_51_7_2
  %sel_tmp1471_demorgan = or i1 %sel_tmp1456_demorgan, %tmp_46_7_2
  %sel_tmp529 = xor i1 %sel_tmp1471_demorgan, true
  %sel_tmp530 = and i1 %tmp_53_7_2, %sel_tmp529
  %newSel232 = select i1 %sel_tmp530, i27 %tmp_1055, i27 %tmp_1054
  %or_cond174 = or i1 %sel_tmp530, %sel_tmp528
  %newSel233 = select i1 %sel_tmp527, i27 %storemerge_7_2, i27 %tmp_1053
  %or_cond175 = or i1 %sel_tmp527, %sel_tmp523
  %newSel234 = select i1 %or_cond174, i27 %newSel232, i27 %newSel233
  %or_cond176 = or i1 %or_cond174, %or_cond175
  %newSel235 = select i1 %or_cond176, i27 %newSel234, i27 0
  %tmp_483 = sext i27 %newSel235 to i41
  %tmp_484 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_7_1, i32 14, i32 40)
  %tmp_61_7_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_484, i14 0)
  %tmp_6223_7_2_cast = mul i41 %tmp_483, %tmp_479
  %p_Val2_30_7_2 = add i41 %tmp_61_7_2, %tmp_6223_7_2_cast
  %tmp_485 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_7_1, i32 14, i32 40)
  %tmp_66_7_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_485, i14 0)
  %tmp_6724_7_2_cast = mul i41 %tmp_483, %tmp_480
  %p_Val2_33_7_2 = add i41 %tmp_66_7_2, %tmp_6724_7_2_cast
  %tmp_486 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_7_1, i32 14, i32 40)
  %tmp_71_7_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_486, i14 0)
  %tmp_7225_7_2_cast = mul i41 %tmp_483, %tmp_481
  %p_Val2_36_7_2 = add i41 %tmp_71_7_2, %tmp_7225_7_2_cast
  %p_Val2_12_7_3 = sub i27 %p_x_V_7_load, %p_x_V_3_load
  %p_Val2_15_7_3 = sub i27 %p_y_V_7_load, %p_y_V_3_load
  %p_Val2_18_7_3 = sub i27 %p_z_V_7_load, %p_z_V_3_load
  %tmp_487 = sext i27 %p_Val2_12_7_3 to i41
  %tmp_488 = sext i27 %p_Val2_15_7_3 to i41
  %tmp_2820_7_3 = mul i41 %tmp_487, %tmp_487
  %tmp_2919_7_3 = mul i41 %tmp_488, %tmp_488
  %p_Val2_20_7_3 = add i41 %tmp_2919_7_3, %tmp_2820_7_3
  %tmp_489 = sext i27 %p_Val2_18_7_3 to i41
  %tmp_3118_7_3_cast = mul i41 %tmp_489, %tmp_489
  %p_Val2_21_7_3 = add i41 %p_Val2_20_7_3, %tmp_3118_7_3_cast
  %tmp_490 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_7_3, i32 14, i32 28)
  %x_in_V_read_assign_58 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_490, i33 0)
  %sqrtX_out_V_write_as_58 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_58) nounwind
  %tmp_1056 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_7_3, i32 14, i32 40)
  %OP1_V_740_3_cast_cas = sext i27 %tmp_1056 to i42
  %tmp_1057 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_58, i32 10, i32 24)
  %OP2_V_3_7_3_cast_cas = zext i15 %tmp_1057 to i42
  %tmp_37_7_3 = mul i42 %OP2_V_3_7_3_cast_cas, %OP1_V_740_3_cast_cas
  %tmp_38_7_3 = icmp eq i42 %tmp_37_7_3, 0
  %dp_4_7_9 = sext i42 %tmp_37_7_3 to i64
  %dp_4_7_3 = sitofp i64 %dp_4_7_9 to double
  %res_V_7_3 = bitcast double %dp_4_7_3 to i64
  %p_Result_7_3 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_7_3, i32 52, i32 62)
  %exp_V_5_7_3 = add i11 -28, %p_Result_7_3
  %p_Result_43_7_3 = call i64 @llvm.part.set.i64.i11(i64 %res_V_7_3, i11 %exp_V_5_7_3, i32 52, i32 62) nounwind
  %dp_7_3 = bitcast i64 %p_Result_43_7_3 to double
  %p_0_i_7_3 = select i1 %tmp_38_7_3, double 0.000000e+00, double %dp_7_3
  %tmp_39_7_3 = fdiv double -1.000000e+00, %p_0_i_7_3
  %prefact_7_3 = fmul double %tmp_39_7_3, 0.000000e+00
  %ireg_V_7_3 = bitcast double %prefact_7_3 to i64
  %tmp_1058 = trunc i64 %ireg_V_7_3 to i63
  %tmp_1059 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_7_3, i32 63)
  %p_Result_40_7_3 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_7_3, i32 52, i32 62)
  %tmp_42_7_3 = zext i11 %p_Result_40_7_3 to i12
  %tmp_1060 = trunc i64 %ireg_V_7_3 to i52
  %tmp_175 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1060)
  %p_Result_45_7_3 = zext i53 %tmp_175 to i54
  %man_V_1_7_3 = sub i54 0, %p_Result_45_7_3
  %man_V_2_7_3 = select i1 %tmp_1059, i54 %man_V_1_7_3, i54 %p_Result_45_7_3
  %tmp_44_7_3 = icmp eq i63 %tmp_1058, 0
  %F2_7_3 = sub i12 1075, %tmp_42_7_3
  %tmp_46_7_3 = icmp sgt i12 %F2_7_3, 14
  %tmp_47_7_3 = add i12 -14, %F2_7_3
  %tmp_48_7_3 = sub i12 14, %F2_7_3
  %sh_amt_7_3 = select i1 %tmp_46_7_3, i12 %tmp_47_7_3, i12 %tmp_48_7_3
  %sh_amt_7_3_cast = sext i12 %sh_amt_7_3 to i32
  %tmp_49_7_3 = icmp eq i12 %F2_7_3, 14
  %tmp_1061 = trunc i54 %man_V_2_7_3 to i27
  %tmp_51_7_3 = icmp ult i12 %sh_amt_7_3, 54
  %tmp_53_7_3 = icmp ult i12 %sh_amt_7_3, 27
  %tmp_54_7_3 = zext i32 %sh_amt_7_3_cast to i54
  %tmp_55_7_3 = ashr i54 %man_V_2_7_3, %tmp_54_7_3
  %tmp_1062 = trunc i54 %tmp_55_7_3 to i27
  %storemerge_7_3 = select i1 %tmp_1059, i27 -1, i27 0
  %tmp_57_7_3 = sext i27 %tmp_1061 to i32
  %tmp_58_7_3 = shl i32 %tmp_57_7_3, %sh_amt_7_3_cast
  %tmp_1063 = trunc i32 %tmp_58_7_3 to i27
  %sel_tmp531 = xor i1 %tmp_44_7_3, true
  %sel_tmp532 = and i1 %tmp_49_7_3, %sel_tmp531
  %sel_tmp1481_demorgan = or i1 %tmp_44_7_3, %tmp_49_7_3
  %sel_tmp533 = xor i1 %sel_tmp1481_demorgan, true
  %sel_tmp534 = and i1 %tmp_46_7_3, %sel_tmp533
  %sel_tmp535 = xor i1 %tmp_51_7_3, true
  %sel_tmp536 = and i1 %sel_tmp534, %sel_tmp535
  %sel_tmp537 = and i1 %sel_tmp534, %tmp_51_7_3
  %sel_tmp1496_demorgan = or i1 %sel_tmp1481_demorgan, %tmp_46_7_3
  %sel_tmp538 = xor i1 %sel_tmp1496_demorgan, true
  %sel_tmp539 = and i1 %tmp_53_7_3, %sel_tmp538
  %newSel236 = select i1 %sel_tmp539, i27 %tmp_1063, i27 %tmp_1062
  %or_cond177 = or i1 %sel_tmp539, %sel_tmp537
  %newSel237 = select i1 %sel_tmp536, i27 %storemerge_7_3, i27 %tmp_1061
  %or_cond178 = or i1 %sel_tmp536, %sel_tmp532
  %newSel238 = select i1 %or_cond177, i27 %newSel236, i27 %newSel237
  %or_cond179 = or i1 %or_cond177, %or_cond178
  %newSel239 = select i1 %or_cond179, i27 %newSel238, i27 0
  %tmp_491 = sext i27 %newSel239 to i41
  %tmp_492 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_7_2, i32 14, i32 40)
  %tmp_61_7_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_492, i14 0)
  %tmp_6223_7_3_cast = mul i41 %tmp_491, %tmp_487
  %p_Val2_30_7_3 = add i41 %tmp_61_7_3, %tmp_6223_7_3_cast
  %tmp_493 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_7_2, i32 14, i32 40)
  %tmp_66_7_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_493, i14 0)
  %tmp_6724_7_3_cast = mul i41 %tmp_491, %tmp_488
  %p_Val2_33_7_3 = add i41 %tmp_66_7_3, %tmp_6724_7_3_cast
  %tmp_494 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_7_2, i32 14, i32 40)
  %tmp_71_7_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_494, i14 0)
  %tmp_7225_7_3_cast = mul i41 %tmp_491, %tmp_489
  %p_Val2_36_7_3 = add i41 %tmp_71_7_3, %tmp_7225_7_3_cast
  %p_Val2_12_7_4 = sub i27 %p_x_V_7_load, %p_x_V_4_load
  %p_Val2_15_7_4 = sub i27 %p_y_V_7_load, %p_y_V_4_load
  %p_Val2_18_7_4 = sub i27 %p_z_V_7_load, %p_z_V_4_load
  %tmp_495 = sext i27 %p_Val2_12_7_4 to i41
  %tmp_496 = sext i27 %p_Val2_15_7_4 to i41
  %tmp_2820_7_4 = mul i41 %tmp_495, %tmp_495
  %tmp_2919_7_4 = mul i41 %tmp_496, %tmp_496
  %p_Val2_20_7_4 = add i41 %tmp_2919_7_4, %tmp_2820_7_4
  %tmp_497 = sext i27 %p_Val2_18_7_4 to i41
  %tmp_3118_7_4_cast = mul i41 %tmp_497, %tmp_497
  %p_Val2_21_7_4 = add i41 %p_Val2_20_7_4, %tmp_3118_7_4_cast
  %tmp_498 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_7_4, i32 14, i32 28)
  %x_in_V_read_assign_59 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_498, i33 0)
  %sqrtX_out_V_write_as_59 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_59) nounwind
  %tmp_1064 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_7_4, i32 14, i32 40)
  %OP1_V_740_4_cast_cas = sext i27 %tmp_1064 to i42
  %tmp_1065 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_59, i32 10, i32 24)
  %OP2_V_3_7_4_cast_cas = zext i15 %tmp_1065 to i42
  %tmp_37_7_4 = mul i42 %OP2_V_3_7_4_cast_cas, %OP1_V_740_4_cast_cas
  %tmp_38_7_4 = icmp eq i42 %tmp_37_7_4, 0
  %dp_4_7_10 = sext i42 %tmp_37_7_4 to i64
  %dp_4_7_4 = sitofp i64 %dp_4_7_10 to double
  %res_V_7_4 = bitcast double %dp_4_7_4 to i64
  %p_Result_7_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_7_4, i32 52, i32 62)
  %exp_V_5_7_4 = add i11 -28, %p_Result_7_4
  %p_Result_43_7_4 = call i64 @llvm.part.set.i64.i11(i64 %res_V_7_4, i11 %exp_V_5_7_4, i32 52, i32 62) nounwind
  %dp_7_4 = bitcast i64 %p_Result_43_7_4 to double
  %p_0_i_7_4 = select i1 %tmp_38_7_4, double 0.000000e+00, double %dp_7_4
  %tmp_39_7_4 = fdiv double -1.000000e+00, %p_0_i_7_4
  %prefact_7_4 = fmul double %tmp_39_7_4, 0.000000e+00
  %ireg_V_7_4 = bitcast double %prefact_7_4 to i64
  %tmp_1066 = trunc i64 %ireg_V_7_4 to i63
  %tmp_1067 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_7_4, i32 63)
  %p_Result_40_7_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_7_4, i32 52, i32 62)
  %tmp_42_7_4 = zext i11 %p_Result_40_7_4 to i12
  %tmp_1068 = trunc i64 %ireg_V_7_4 to i52
  %tmp_176 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1068)
  %p_Result_45_7_4 = zext i53 %tmp_176 to i54
  %man_V_1_7_4 = sub i54 0, %p_Result_45_7_4
  %man_V_2_7_4 = select i1 %tmp_1067, i54 %man_V_1_7_4, i54 %p_Result_45_7_4
  %tmp_44_7_4 = icmp eq i63 %tmp_1066, 0
  %F2_7_4 = sub i12 1075, %tmp_42_7_4
  %tmp_46_7_4 = icmp sgt i12 %F2_7_4, 14
  %tmp_47_7_4 = add i12 -14, %F2_7_4
  %tmp_48_7_4 = sub i12 14, %F2_7_4
  %sh_amt_7_4 = select i1 %tmp_46_7_4, i12 %tmp_47_7_4, i12 %tmp_48_7_4
  %sh_amt_7_4_cast = sext i12 %sh_amt_7_4 to i32
  %tmp_49_7_4 = icmp eq i12 %F2_7_4, 14
  %tmp_1069 = trunc i54 %man_V_2_7_4 to i27
  %tmp_51_7_4 = icmp ult i12 %sh_amt_7_4, 54
  %tmp_53_7_4 = icmp ult i12 %sh_amt_7_4, 27
  %tmp_54_7_4 = zext i32 %sh_amt_7_4_cast to i54
  %tmp_55_7_4 = ashr i54 %man_V_2_7_4, %tmp_54_7_4
  %tmp_1070 = trunc i54 %tmp_55_7_4 to i27
  %storemerge_7_4 = select i1 %tmp_1067, i27 -1, i27 0
  %tmp_57_7_4 = sext i27 %tmp_1069 to i32
  %tmp_58_7_4 = shl i32 %tmp_57_7_4, %sh_amt_7_4_cast
  %tmp_1071 = trunc i32 %tmp_58_7_4 to i27
  %sel_tmp540 = xor i1 %tmp_44_7_4, true
  %sel_tmp541 = and i1 %tmp_49_7_4, %sel_tmp540
  %sel_tmp1506_demorgan = or i1 %tmp_44_7_4, %tmp_49_7_4
  %sel_tmp542 = xor i1 %sel_tmp1506_demorgan, true
  %sel_tmp543 = and i1 %tmp_46_7_4, %sel_tmp542
  %sel_tmp544 = xor i1 %tmp_51_7_4, true
  %sel_tmp545 = and i1 %sel_tmp543, %sel_tmp544
  %sel_tmp546 = and i1 %sel_tmp543, %tmp_51_7_4
  %sel_tmp1521_demorgan = or i1 %sel_tmp1506_demorgan, %tmp_46_7_4
  %sel_tmp547 = xor i1 %sel_tmp1521_demorgan, true
  %sel_tmp548 = and i1 %tmp_53_7_4, %sel_tmp547
  %newSel240 = select i1 %sel_tmp548, i27 %tmp_1071, i27 %tmp_1070
  %or_cond180 = or i1 %sel_tmp548, %sel_tmp546
  %newSel241 = select i1 %sel_tmp545, i27 %storemerge_7_4, i27 %tmp_1069
  %or_cond181 = or i1 %sel_tmp545, %sel_tmp541
  %newSel242 = select i1 %or_cond180, i27 %newSel240, i27 %newSel241
  %or_cond182 = or i1 %or_cond180, %or_cond181
  %newSel243 = select i1 %or_cond182, i27 %newSel242, i27 0
  %tmp_499 = sext i27 %newSel243 to i41
  %tmp_500 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_7_3, i32 14, i32 40)
  %tmp_61_7_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_500, i14 0)
  %tmp_6223_7_4_cast = mul i41 %tmp_499, %tmp_495
  %p_Val2_30_7_4 = add i41 %tmp_61_7_4, %tmp_6223_7_4_cast
  %tmp_501 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_7_3, i32 14, i32 40)
  %tmp_66_7_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_501, i14 0)
  %tmp_6724_7_4_cast = mul i41 %tmp_499, %tmp_496
  %p_Val2_33_7_4 = add i41 %tmp_66_7_4, %tmp_6724_7_4_cast
  %tmp_502 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_7_3, i32 14, i32 40)
  %tmp_71_7_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_502, i14 0)
  %tmp_7225_7_4_cast = mul i41 %tmp_499, %tmp_497
  %p_Val2_36_7_4 = add i41 %tmp_71_7_4, %tmp_7225_7_4_cast
  %p_Val2_12_7_5 = sub i27 %p_x_V_7_load, %p_x_V_5_load
  %p_Val2_15_7_5 = sub i27 %p_y_V_7_load, %p_y_V_5_load
  %p_Val2_18_7_5 = sub i27 %p_z_V_7_load, %p_z_V_5_load
  %tmp_503 = sext i27 %p_Val2_12_7_5 to i41
  %tmp_504 = sext i27 %p_Val2_15_7_5 to i41
  %tmp_2820_7_5 = mul i41 %tmp_503, %tmp_503
  %tmp_2919_7_5 = mul i41 %tmp_504, %tmp_504
  %p_Val2_20_7_5 = add i41 %tmp_2919_7_5, %tmp_2820_7_5
  %tmp_505 = sext i27 %p_Val2_18_7_5 to i41
  %tmp_3118_7_5_cast = mul i41 %tmp_505, %tmp_505
  %p_Val2_21_7_5 = add i41 %p_Val2_20_7_5, %tmp_3118_7_5_cast
  %tmp_506 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_7_5, i32 14, i32 28)
  %x_in_V_read_assign_60 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_506, i33 0)
  %sqrtX_out_V_write_as_60 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_60) nounwind
  %tmp_1072 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_7_5, i32 14, i32 40)
  %OP1_V_740_5_cast_cas = sext i27 %tmp_1072 to i42
  %tmp_1073 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_60, i32 10, i32 24)
  %OP2_V_3_7_5_cast_cas = zext i15 %tmp_1073 to i42
  %tmp_37_7_5 = mul i42 %OP2_V_3_7_5_cast_cas, %OP1_V_740_5_cast_cas
  %tmp_38_7_5 = icmp eq i42 %tmp_37_7_5, 0
  %dp_4_7_11 = sext i42 %tmp_37_7_5 to i64
  %dp_4_7_5 = sitofp i64 %dp_4_7_11 to double
  %res_V_7_5 = bitcast double %dp_4_7_5 to i64
  %p_Result_7_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_7_5, i32 52, i32 62)
  %exp_V_5_7_5 = add i11 -28, %p_Result_7_5
  %p_Result_43_7_5 = call i64 @llvm.part.set.i64.i11(i64 %res_V_7_5, i11 %exp_V_5_7_5, i32 52, i32 62) nounwind
  %dp_7_5 = bitcast i64 %p_Result_43_7_5 to double
  %p_0_i_7_5 = select i1 %tmp_38_7_5, double 0.000000e+00, double %dp_7_5
  %tmp_39_7_5 = fdiv double -1.000000e+00, %p_0_i_7_5
  %prefact_7_5 = fmul double %tmp_39_7_5, 0x3F4E000000000000
  %ireg_V_7_5 = bitcast double %prefact_7_5 to i64
  %tmp_1074 = trunc i64 %ireg_V_7_5 to i63
  %tmp_1075 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_7_5, i32 63)
  %p_Result_40_7_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_7_5, i32 52, i32 62)
  %tmp_42_7_5 = zext i11 %p_Result_40_7_5 to i12
  %tmp_1076 = trunc i64 %ireg_V_7_5 to i52
  %tmp_177 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1076)
  %p_Result_45_7_5 = zext i53 %tmp_177 to i54
  %man_V_1_7_5 = sub i54 0, %p_Result_45_7_5
  %man_V_2_7_5 = select i1 %tmp_1075, i54 %man_V_1_7_5, i54 %p_Result_45_7_5
  %tmp_44_7_5 = icmp eq i63 %tmp_1074, 0
  %F2_7_5 = sub i12 1075, %tmp_42_7_5
  %tmp_46_7_5 = icmp sgt i12 %F2_7_5, 14
  %tmp_47_7_5 = add i12 -14, %F2_7_5
  %tmp_48_7_5 = sub i12 14, %F2_7_5
  %sh_amt_7_5 = select i1 %tmp_46_7_5, i12 %tmp_47_7_5, i12 %tmp_48_7_5
  %sh_amt_7_5_cast = sext i12 %sh_amt_7_5 to i32
  %tmp_49_7_5 = icmp eq i12 %F2_7_5, 14
  %tmp_1077 = trunc i54 %man_V_2_7_5 to i27
  %tmp_51_7_5 = icmp ult i12 %sh_amt_7_5, 54
  %tmp_53_7_5 = icmp ult i12 %sh_amt_7_5, 27
  %tmp_54_7_5 = zext i32 %sh_amt_7_5_cast to i54
  %tmp_55_7_5 = ashr i54 %man_V_2_7_5, %tmp_54_7_5
  %tmp_1078 = trunc i54 %tmp_55_7_5 to i27
  %storemerge_7_5 = select i1 %tmp_1075, i27 -1, i27 0
  %tmp_57_7_5 = sext i27 %tmp_1077 to i32
  %tmp_58_7_5 = shl i32 %tmp_57_7_5, %sh_amt_7_5_cast
  %tmp_1079 = trunc i32 %tmp_58_7_5 to i27
  %sel_tmp549 = xor i1 %tmp_44_7_5, true
  %sel_tmp550 = and i1 %tmp_49_7_5, %sel_tmp549
  %sel_tmp1531_demorgan = or i1 %tmp_44_7_5, %tmp_49_7_5
  %sel_tmp551 = xor i1 %sel_tmp1531_demorgan, true
  %sel_tmp552 = and i1 %tmp_46_7_5, %sel_tmp551
  %sel_tmp553 = xor i1 %tmp_51_7_5, true
  %sel_tmp554 = and i1 %sel_tmp552, %sel_tmp553
  %sel_tmp555 = and i1 %sel_tmp552, %tmp_51_7_5
  %sel_tmp1546_demorgan = or i1 %sel_tmp1531_demorgan, %tmp_46_7_5
  %sel_tmp556 = xor i1 %sel_tmp1546_demorgan, true
  %sel_tmp557 = and i1 %tmp_53_7_5, %sel_tmp556
  %newSel244 = select i1 %sel_tmp557, i27 %tmp_1079, i27 %tmp_1078
  %or_cond183 = or i1 %sel_tmp557, %sel_tmp555
  %newSel245 = select i1 %sel_tmp554, i27 %storemerge_7_5, i27 %tmp_1077
  %or_cond184 = or i1 %sel_tmp554, %sel_tmp550
  %newSel246 = select i1 %or_cond183, i27 %newSel244, i27 %newSel245
  %or_cond185 = or i1 %or_cond183, %or_cond184
  %newSel247 = select i1 %or_cond185, i27 %newSel246, i27 0
  %tmp_507 = sext i27 %newSel247 to i41
  %tmp_508 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_7_4, i32 14, i32 40)
  %tmp_61_7_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_508, i14 0)
  %tmp_6223_7_5_cast = mul i41 %tmp_507, %tmp_503
  %p_Val2_30_7_5 = add i41 %tmp_61_7_5, %tmp_6223_7_5_cast
  %tmp_509 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_7_4, i32 14, i32 40)
  %tmp_66_7_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_509, i14 0)
  %tmp_6724_7_5_cast = mul i41 %tmp_507, %tmp_504
  %p_Val2_33_7_5 = add i41 %tmp_66_7_5, %tmp_6724_7_5_cast
  %tmp_510 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_7_4, i32 14, i32 40)
  %tmp_71_7_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_510, i14 0)
  %tmp_7225_7_5_cast = mul i41 %tmp_507, %tmp_505
  %p_Val2_36_7_5 = add i41 %tmp_71_7_5, %tmp_7225_7_5_cast
  %p_Val2_12_7_6 = sub i27 %p_x_V_7_load, %p_x_V_6_load
  %p_Val2_15_7_6 = sub i27 %p_y_V_7_load, %p_y_V_6_load
  %p_Val2_18_7_6 = sub i27 %p_z_V_7_load, %p_z_V_6_load
  %tmp_511 = sext i27 %p_Val2_12_7_6 to i41
  %tmp_512 = sext i27 %p_Val2_15_7_6 to i41
  %tmp_2820_7_6 = mul i41 %tmp_511, %tmp_511
  %tmp_2919_7_6 = mul i41 %tmp_512, %tmp_512
  %p_Val2_20_7_6 = add i41 %tmp_2919_7_6, %tmp_2820_7_6
  %tmp_513 = sext i27 %p_Val2_18_7_6 to i41
  %tmp_3118_7_6_cast = mul i41 %tmp_513, %tmp_513
  %p_Val2_21_7_6 = add i41 %p_Val2_20_7_6, %tmp_3118_7_6_cast
  %tmp_514 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_7_6, i32 14, i32 28)
  %x_in_V_read_assign_61 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_514, i33 0)
  %sqrtX_out_V_write_as_61 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_61) nounwind
  %tmp_1080 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_7_6, i32 14, i32 40)
  %OP1_V_740_6_cast_cas = sext i27 %tmp_1080 to i42
  %tmp_1081 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_61, i32 10, i32 24)
  %OP2_V_3_7_6_cast_cas = zext i15 %tmp_1081 to i42
  %tmp_37_7_6 = mul i42 %OP2_V_3_7_6_cast_cas, %OP1_V_740_6_cast_cas
  %tmp_38_7_6 = icmp eq i42 %tmp_37_7_6, 0
  %dp_4_7_12 = sext i42 %tmp_37_7_6 to i64
  %dp_4_7_6 = sitofp i64 %dp_4_7_12 to double
  %res_V_7_6 = bitcast double %dp_4_7_6 to i64
  %p_Result_7_6 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_7_6, i32 52, i32 62)
  %exp_V_5_7_6 = add i11 -28, %p_Result_7_6
  %p_Result_43_7_6 = call i64 @llvm.part.set.i64.i11(i64 %res_V_7_6, i11 %exp_V_5_7_6, i32 52, i32 62) nounwind
  %dp_7_6 = bitcast i64 %p_Result_43_7_6 to double
  %p_0_i_7_6 = select i1 %tmp_38_7_6, double 0.000000e+00, double %dp_7_6
  %tmp_39_7_6 = fdiv double -1.000000e+00, %p_0_i_7_6
  %prefact_7_6 = fmul double %tmp_39_7_6, 0x3F30000000000000
  %ireg_V_7_6 = bitcast double %prefact_7_6 to i64
  %tmp_1082 = trunc i64 %ireg_V_7_6 to i63
  %tmp_1083 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_7_6, i32 63)
  %p_Result_40_7_6 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_7_6, i32 52, i32 62)
  %tmp_42_7_6 = zext i11 %p_Result_40_7_6 to i12
  %tmp_1084 = trunc i64 %ireg_V_7_6 to i52
  %tmp_178 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1084)
  %p_Result_45_7_6 = zext i53 %tmp_178 to i54
  %man_V_1_7_6 = sub i54 0, %p_Result_45_7_6
  %man_V_2_7_6 = select i1 %tmp_1083, i54 %man_V_1_7_6, i54 %p_Result_45_7_6
  %tmp_44_7_6 = icmp eq i63 %tmp_1082, 0
  %F2_7_6 = sub i12 1075, %tmp_42_7_6
  %tmp_46_7_6 = icmp sgt i12 %F2_7_6, 14
  %tmp_47_7_6 = add i12 -14, %F2_7_6
  %tmp_48_7_6 = sub i12 14, %F2_7_6
  %sh_amt_7_6 = select i1 %tmp_46_7_6, i12 %tmp_47_7_6, i12 %tmp_48_7_6
  %sh_amt_7_6_cast = sext i12 %sh_amt_7_6 to i32
  %tmp_49_7_6 = icmp eq i12 %F2_7_6, 14
  %tmp_1085 = trunc i54 %man_V_2_7_6 to i27
  %tmp_51_7_6 = icmp ult i12 %sh_amt_7_6, 54
  %tmp_53_7_6 = icmp ult i12 %sh_amt_7_6, 27
  %tmp_54_7_6 = zext i32 %sh_amt_7_6_cast to i54
  %tmp_55_7_6 = ashr i54 %man_V_2_7_6, %tmp_54_7_6
  %tmp_1086 = trunc i54 %tmp_55_7_6 to i27
  %storemerge_7_6 = select i1 %tmp_1083, i27 -1, i27 0
  %tmp_57_7_6 = sext i27 %tmp_1085 to i32
  %tmp_58_7_6 = shl i32 %tmp_57_7_6, %sh_amt_7_6_cast
  %tmp_1087 = trunc i32 %tmp_58_7_6 to i27
  %sel_tmp558 = xor i1 %tmp_44_7_6, true
  %sel_tmp559 = and i1 %tmp_49_7_6, %sel_tmp558
  %sel_tmp1556_demorgan = or i1 %tmp_44_7_6, %tmp_49_7_6
  %sel_tmp560 = xor i1 %sel_tmp1556_demorgan, true
  %sel_tmp561 = and i1 %tmp_46_7_6, %sel_tmp560
  %sel_tmp562 = xor i1 %tmp_51_7_6, true
  %sel_tmp563 = and i1 %sel_tmp561, %sel_tmp562
  %sel_tmp564 = and i1 %sel_tmp561, %tmp_51_7_6
  %sel_tmp1571_demorgan = or i1 %sel_tmp1556_demorgan, %tmp_46_7_6
  %sel_tmp565 = xor i1 %sel_tmp1571_demorgan, true
  %sel_tmp566 = and i1 %tmp_53_7_6, %sel_tmp565
  %newSel248 = select i1 %sel_tmp566, i27 %tmp_1087, i27 %tmp_1086
  %or_cond186 = or i1 %sel_tmp566, %sel_tmp564
  %newSel249 = select i1 %sel_tmp563, i27 %storemerge_7_6, i27 %tmp_1085
  %or_cond187 = or i1 %sel_tmp563, %sel_tmp559
  %newSel250 = select i1 %or_cond186, i27 %newSel248, i27 %newSel249
  %or_cond188 = or i1 %or_cond186, %or_cond187
  %newSel251 = select i1 %or_cond188, i27 %newSel250, i27 0
  %tmp_515 = sext i27 %newSel251 to i41
  %tmp_516 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_7_5, i32 14, i32 40)
  %tmp_61_7_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_516, i14 0)
  %tmp_6223_7_6_cast = mul i41 %tmp_515, %tmp_511
  %p_Val2_30_7_6 = add i41 %tmp_61_7_6, %tmp_6223_7_6_cast
  %tmp_517 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_7_5, i32 14, i32 40)
  %tmp_66_7_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_517, i14 0)
  %tmp_6724_7_6_cast = mul i41 %tmp_515, %tmp_512
  %p_Val2_33_7_6 = add i41 %tmp_66_7_6, %tmp_6724_7_6_cast
  %tmp_518 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_7_5, i32 14, i32 40)
  %tmp_71_7_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_518, i14 0)
  %tmp_7225_7_6_cast = mul i41 %tmp_515, %tmp_513
  %p_Val2_36_7_6 = add i41 %tmp_71_7_6, %tmp_7225_7_6_cast
  %p_Val2_12_7_8 = sub i27 %p_x_V_7_load, %p_x_V_8_load
  %p_Val2_15_7_8 = sub i27 %p_y_V_7_load, %p_y_V_8_load
  %p_Val2_18_7_8 = sub i27 %p_z_V_7_load, %p_z_V_8_load
  %tmp_519 = sext i27 %p_Val2_12_7_8 to i41
  %tmp_520 = sext i27 %p_Val2_15_7_8 to i41
  %tmp_2820_7_8 = mul i41 %tmp_519, %tmp_519
  %tmp_2919_7_8 = mul i41 %tmp_520, %tmp_520
  %p_Val2_20_7_8 = add i41 %tmp_2919_7_8, %tmp_2820_7_8
  %tmp_521 = sext i27 %p_Val2_18_7_8 to i41
  %tmp_3118_7_8_cast = mul i41 %tmp_521, %tmp_521
  %p_Val2_21_7_8 = add i41 %p_Val2_20_7_8, %tmp_3118_7_8_cast
  %tmp_522 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_7_8, i32 14, i32 28)
  %x_in_V_read_assign_62 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_522, i33 0)
  %sqrtX_out_V_write_as_62 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_62) nounwind
  %tmp_1088 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_7_8, i32 14, i32 40)
  %OP1_V_740_8_cast_cas = sext i27 %tmp_1088 to i42
  %tmp_1089 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_62, i32 10, i32 24)
  %OP2_V_3_7_8_cast_cas = zext i15 %tmp_1089 to i42
  %tmp_37_7_8 = mul i42 %OP2_V_3_7_8_cast_cas, %OP1_V_740_8_cast_cas
  %tmp_38_7_8 = icmp eq i42 %tmp_37_7_8, 0
  %dp_4_7_13 = sext i42 %tmp_37_7_8 to i64
  %dp_4_7_8 = sitofp i64 %dp_4_7_13 to double
  %res_V_7_8 = bitcast double %dp_4_7_8 to i64
  %p_Result_7_8 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_7_8, i32 52, i32 62)
  %exp_V_5_7_8 = add i11 -28, %p_Result_7_8
  %p_Result_43_7_8 = call i64 @llvm.part.set.i64.i11(i64 %res_V_7_8, i11 %exp_V_5_7_8, i32 52, i32 62) nounwind
  %dp_7_8 = bitcast i64 %p_Result_43_7_8 to double
  %p_0_i_7_8 = select i1 %tmp_38_7_8, double 0.000000e+00, double %dp_7_8
  %tmp_39_7_8 = fdiv double -1.000000e+00, %p_0_i_7_8
  %prefact_7_8 = fmul double %tmp_39_7_8, 0.000000e+00
  %ireg_V_7_8 = bitcast double %prefact_7_8 to i64
  %tmp_1090 = trunc i64 %ireg_V_7_8 to i63
  %tmp_1091 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_7_8, i32 63)
  %p_Result_40_7_8 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_7_8, i32 52, i32 62)
  %tmp_42_7_8 = zext i11 %p_Result_40_7_8 to i12
  %tmp_1092 = trunc i64 %ireg_V_7_8 to i52
  %tmp_179 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1092)
  %p_Result_45_7_8 = zext i53 %tmp_179 to i54
  %man_V_1_7_8 = sub i54 0, %p_Result_45_7_8
  %man_V_2_7_8 = select i1 %tmp_1091, i54 %man_V_1_7_8, i54 %p_Result_45_7_8
  %tmp_44_7_8 = icmp eq i63 %tmp_1090, 0
  %F2_7_8 = sub i12 1075, %tmp_42_7_8
  %tmp_46_7_8 = icmp sgt i12 %F2_7_8, 14
  %tmp_47_7_8 = add i12 -14, %F2_7_8
  %tmp_48_7_8 = sub i12 14, %F2_7_8
  %sh_amt_7_8 = select i1 %tmp_46_7_8, i12 %tmp_47_7_8, i12 %tmp_48_7_8
  %sh_amt_7_8_cast = sext i12 %sh_amt_7_8 to i32
  %tmp_49_7_8 = icmp eq i12 %F2_7_8, 14
  %tmp_1093 = trunc i54 %man_V_2_7_8 to i27
  %tmp_51_7_8 = icmp ult i12 %sh_amt_7_8, 54
  %tmp_53_7_8 = icmp ult i12 %sh_amt_7_8, 27
  %tmp_54_7_8 = zext i32 %sh_amt_7_8_cast to i54
  %tmp_55_7_8 = ashr i54 %man_V_2_7_8, %tmp_54_7_8
  %tmp_1094 = trunc i54 %tmp_55_7_8 to i27
  %storemerge_7_8 = select i1 %tmp_1091, i27 -1, i27 0
  %tmp_57_7_8 = sext i27 %tmp_1093 to i32
  %tmp_58_7_8 = shl i32 %tmp_57_7_8, %sh_amt_7_8_cast
  %tmp_1095 = trunc i32 %tmp_58_7_8 to i27
  %sel_tmp567 = xor i1 %tmp_44_7_8, true
  %sel_tmp568 = and i1 %tmp_49_7_8, %sel_tmp567
  %sel_tmp1581_demorgan = or i1 %tmp_44_7_8, %tmp_49_7_8
  %sel_tmp569 = xor i1 %sel_tmp1581_demorgan, true
  %sel_tmp570 = and i1 %tmp_46_7_8, %sel_tmp569
  %sel_tmp571 = xor i1 %tmp_51_7_8, true
  %sel_tmp572 = and i1 %sel_tmp570, %sel_tmp571
  %sel_tmp573 = and i1 %sel_tmp570, %tmp_51_7_8
  %sel_tmp1596_demorgan = or i1 %sel_tmp1581_demorgan, %tmp_46_7_8
  %sel_tmp574 = xor i1 %sel_tmp1596_demorgan, true
  %sel_tmp575 = and i1 %tmp_53_7_8, %sel_tmp574
  %newSel252 = select i1 %sel_tmp575, i27 %tmp_1095, i27 %tmp_1094
  %or_cond189 = or i1 %sel_tmp575, %sel_tmp573
  %newSel253 = select i1 %sel_tmp572, i27 %storemerge_7_8, i27 %tmp_1093
  %or_cond190 = or i1 %sel_tmp572, %sel_tmp568
  %newSel254 = select i1 %or_cond189, i27 %newSel252, i27 %newSel253
  %or_cond191 = or i1 %or_cond189, %or_cond190
  %newSel255 = select i1 %or_cond191, i27 %newSel254, i27 0
  %tmp_523 = sext i27 %newSel255 to i41
  %tmp_524 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_7_6, i32 14, i32 40)
  %tmp_61_7_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_524, i14 0)
  %tmp_6223_7_8_cast = mul i41 %tmp_523, %tmp_519
  %p_Val2_30_7_8 = add i41 %tmp_61_7_8, %tmp_6223_7_8_cast
  %tmp_64_7_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_7_8, i32 14, i32 40)
  store i27 %tmp_64_7_8, i27* @p_ax_V_7, align 8
  %tmp_525 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_7_6, i32 14, i32 40)
  %tmp_66_7_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_525, i14 0)
  %tmp_6724_7_8_cast = mul i41 %tmp_523, %tmp_520
  %p_Val2_33_7_8 = add i41 %tmp_66_7_8, %tmp_6724_7_8_cast
  %tmp_69_7_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_7_8, i32 14, i32 40)
  store i27 %tmp_69_7_8, i27* @p_ay_V_7, align 4
  %tmp_526 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_7_6, i32 14, i32 40)
  %tmp_71_7_8 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_526, i14 0)
  %tmp_7225_7_8_cast = mul i41 %tmp_523, %tmp_521
  %p_Val2_36_7_8 = add i41 %tmp_71_7_8, %tmp_7225_7_8_cast
  %tmp_74_7_8 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_7_8, i32 14, i32 40)
  store i27 %tmp_74_7_8, i27* @p_az_V_7, align 8
  %p_Val2_12_8 = sub i27 %p_x_V_8_load, %p_x_V_0_load
  %p_Val2_15_8 = sub i27 %p_y_V_8_load, %p_y_V_0_load
  %p_Val2_18_8 = sub i27 %p_z_V_8_load, %p_z_V_0_load
  %OP1_V_5_8_cast = sext i27 %p_Val2_12_8 to i41
  %OP1_V_6_8_cast = sext i27 %p_Val2_15_8 to i41
  %tmp_2820_8 = mul i41 %OP1_V_5_8_cast, %OP1_V_5_8_cast
  %tmp_2919_8 = mul i41 %OP1_V_6_8_cast, %OP1_V_6_8_cast
  %p_Val2_20_8 = add i41 %tmp_2919_8, %tmp_2820_8
  %OP1_V_7_8_cast = sext i27 %p_Val2_18_8 to i41
  %tmp_3118_8_cast = mul i41 %OP1_V_7_8_cast, %OP1_V_7_8_cast
  %p_Val2_21_8 = add i41 %p_Val2_20_8, %tmp_3118_8_cast
  %tmp_527 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_8, i32 14, i32 28)
  %x_in_V_read_assign_63 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_527, i33 0)
  %sqrtX_out_V_write_as_63 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_63) nounwind
  %tmp_1096 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_8, i32 14, i32 40)
  %OP1_V_8_cast_cast = sext i27 %tmp_1096 to i42
  %tmp_1097 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_63, i32 10, i32 24)
  %OP2_V_3_8_cast_cast = zext i15 %tmp_1097 to i42
  %tmp_37_8 = mul i42 %OP2_V_3_8_cast_cast, %OP1_V_8_cast_cast
  %tmp_38_8 = icmp eq i42 %tmp_37_8, 0
  %dp_4_15 = sext i42 %tmp_37_8 to i64
  %dp_4_8 = sitofp i64 %dp_4_15 to double
  %res_V_8 = bitcast double %dp_4_8 to i64
  %p_Result_8 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_8, i32 52, i32 62)
  %exp_V_5_8 = add i11 -28, %p_Result_8
  %p_Result_43_8 = call i64 @llvm.part.set.i64.i11(i64 %res_V_8, i11 %exp_V_5_8, i32 52, i32 62) nounwind
  %dp_8 = bitcast i64 %p_Result_43_8 to double
  %p_0_i_8 = select i1 %tmp_38_8, double 0.000000e+00, double %dp_8
  %tmp_39_8 = fdiv double -1.000000e+00, %p_0_i_8
  %ireg_V_8 = bitcast double %tmp_39_8 to i64
  %tmp_1098 = trunc i64 %ireg_V_8 to i63
  %tmp_1099 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_8, i32 63)
  %p_Result_40_8 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_8, i32 52, i32 62)
  %tmp_42_8 = zext i11 %p_Result_40_8 to i12
  %tmp_1100 = trunc i64 %ireg_V_8 to i52
  %tmp_180 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1100)
  %p_Result_45_8 = zext i53 %tmp_180 to i54
  %man_V_1_8 = sub i54 0, %p_Result_45_8
  %man_V_2_8 = select i1 %tmp_1099, i54 %man_V_1_8, i54 %p_Result_45_8
  %tmp_44_8 = icmp eq i63 %tmp_1098, 0
  %F2_8 = sub i12 1075, %tmp_42_8
  %tmp_46_8 = icmp sgt i12 %F2_8, 14
  %tmp_47_8 = add i12 -14, %F2_8
  %tmp_48_8 = sub i12 14, %F2_8
  %sh_amt_8 = select i1 %tmp_46_8, i12 %tmp_47_8, i12 %tmp_48_8
  %sh_amt_8_cast = sext i12 %sh_amt_8 to i32
  %tmp_49_8 = icmp eq i12 %F2_8, 14
  %tmp_1101 = trunc i54 %man_V_2_8 to i27
  %tmp_51_8 = icmp ult i12 %sh_amt_8, 54
  %tmp_53_8 = icmp ult i12 %sh_amt_8, 27
  %tmp_54_8 = zext i32 %sh_amt_8_cast to i54
  %tmp_55_8 = ashr i54 %man_V_2_8, %tmp_54_8
  %tmp_1102 = trunc i54 %tmp_55_8 to i27
  %storemerge_8 = select i1 %tmp_1099, i27 -1, i27 0
  %tmp_57_8 = sext i27 %tmp_1101 to i32
  %tmp_58_8 = shl i32 %tmp_57_8, %sh_amt_8_cast
  %tmp_1103 = trunc i32 %tmp_58_8 to i27
  %sel_tmp576 = xor i1 %tmp_44_8, true
  %sel_tmp577 = and i1 %tmp_49_8, %sel_tmp576
  %sel_tmp1606_demorgan = or i1 %tmp_44_8, %tmp_49_8
  %sel_tmp578 = xor i1 %sel_tmp1606_demorgan, true
  %sel_tmp579 = and i1 %tmp_46_8, %sel_tmp578
  %sel_tmp580 = xor i1 %tmp_51_8, true
  %sel_tmp581 = and i1 %sel_tmp579, %sel_tmp580
  %sel_tmp582 = and i1 %sel_tmp579, %tmp_51_8
  %sel_tmp1621_demorgan = or i1 %sel_tmp1606_demorgan, %tmp_46_8
  %sel_tmp583 = xor i1 %sel_tmp1621_demorgan, true
  %sel_tmp584 = and i1 %tmp_53_8, %sel_tmp583
  %newSel256 = select i1 %sel_tmp584, i27 %tmp_1103, i27 %tmp_1102
  %or_cond192 = or i1 %sel_tmp584, %sel_tmp582
  %newSel257 = select i1 %sel_tmp581, i27 %storemerge_8, i27 %tmp_1101
  %or_cond193 = or i1 %sel_tmp581, %sel_tmp577
  %newSel258 = select i1 %or_cond192, i27 %newSel256, i27 %newSel257
  %or_cond194 = or i1 %or_cond192, %or_cond193
  %newSel259 = select i1 %or_cond194, i27 %newSel258, i27 0
  %OP1_V_1_8_cast = sext i27 %newSel259 to i41
  %p_Val2_29_8 = mul i41 %OP1_V_1_8_cast, %OP1_V_5_8_cast
  %p_Val2_32_8 = mul i41 %OP1_V_1_8_cast, %OP1_V_6_8_cast
  %p_Val2_35_8 = mul i41 %OP1_V_1_8_cast, %OP1_V_7_8_cast
  %p_Val2_12_8_1 = sub i27 %p_x_V_8_load, %p_x_V_1_load
  %p_Val2_15_8_1 = sub i27 %p_y_V_8_load, %p_y_V_1_load
  %p_Val2_18_8_1 = sub i27 %p_z_V_8_load, %p_z_V_1_load
  %tmp_528 = sext i27 %p_Val2_12_8_1 to i41
  %tmp_529 = sext i27 %p_Val2_15_8_1 to i41
  %tmp_2820_8_1 = mul i41 %tmp_528, %tmp_528
  %tmp_2919_8_1 = mul i41 %tmp_529, %tmp_529
  %p_Val2_20_8_1 = add i41 %tmp_2919_8_1, %tmp_2820_8_1
  %tmp_530 = sext i27 %p_Val2_18_8_1 to i41
  %tmp_3118_8_1_cast = mul i41 %tmp_530, %tmp_530
  %p_Val2_21_8_1 = add i41 %p_Val2_20_8_1, %tmp_3118_8_1_cast
  %tmp_531 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_8_1, i32 14, i32 28)
  %x_in_V_read_assign_64 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_531, i33 0)
  %sqrtX_out_V_write_as_64 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_64) nounwind
  %tmp_1104 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_8_1, i32 14, i32 40)
  %OP1_V_8_1_cast_cast = sext i27 %tmp_1104 to i42
  %tmp_1105 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_64, i32 10, i32 24)
  %OP2_V_3_8_1_cast_cas = zext i15 %tmp_1105 to i42
  %tmp_37_8_1 = mul i42 %OP2_V_3_8_1_cast_cas, %OP1_V_8_1_cast_cast
  %tmp_38_8_1 = icmp eq i42 %tmp_37_8_1, 0
  %dp_4_8_s = sext i42 %tmp_37_8_1 to i64
  %dp_4_8_1 = sitofp i64 %dp_4_8_s to double
  %res_V_8_1 = bitcast double %dp_4_8_1 to i64
  %p_Result_8_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_8_1, i32 52, i32 62)
  %exp_V_5_8_1 = add i11 -28, %p_Result_8_1
  %p_Result_43_8_1 = call i64 @llvm.part.set.i64.i11(i64 %res_V_8_1, i11 %exp_V_5_8_1, i32 52, i32 62) nounwind
  %dp_8_1 = bitcast i64 %p_Result_43_8_1 to double
  %p_0_i_8_1 = select i1 %tmp_38_8_1, double 0.000000e+00, double %dp_8_1
  %tmp_39_8_1 = fdiv double -1.000000e+00, %p_0_i_8_1
  %prefact_8_1 = fmul double %tmp_39_8_1, 0.000000e+00
  %ireg_V_8_1 = bitcast double %prefact_8_1 to i64
  %tmp_1106 = trunc i64 %ireg_V_8_1 to i63
  %tmp_1107 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_8_1, i32 63)
  %p_Result_40_8_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_8_1, i32 52, i32 62)
  %tmp_42_8_1 = zext i11 %p_Result_40_8_1 to i12
  %tmp_1108 = trunc i64 %ireg_V_8_1 to i52
  %tmp_181 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1108)
  %p_Result_45_8_1 = zext i53 %tmp_181 to i54
  %man_V_1_8_1 = sub i54 0, %p_Result_45_8_1
  %man_V_2_8_1 = select i1 %tmp_1107, i54 %man_V_1_8_1, i54 %p_Result_45_8_1
  %tmp_44_8_1 = icmp eq i63 %tmp_1106, 0
  %F2_8_1 = sub i12 1075, %tmp_42_8_1
  %tmp_46_8_1 = icmp sgt i12 %F2_8_1, 14
  %tmp_47_8_1 = add i12 -14, %F2_8_1
  %tmp_48_8_1 = sub i12 14, %F2_8_1
  %sh_amt_8_1 = select i1 %tmp_46_8_1, i12 %tmp_47_8_1, i12 %tmp_48_8_1
  %sh_amt_8_1_cast = sext i12 %sh_amt_8_1 to i32
  %tmp_49_8_1 = icmp eq i12 %F2_8_1, 14
  %tmp_1109 = trunc i54 %man_V_2_8_1 to i27
  %tmp_51_8_1 = icmp ult i12 %sh_amt_8_1, 54
  %tmp_53_8_1 = icmp ult i12 %sh_amt_8_1, 27
  %tmp_54_8_1 = zext i32 %sh_amt_8_1_cast to i54
  %tmp_55_8_1 = ashr i54 %man_V_2_8_1, %tmp_54_8_1
  %tmp_1110 = trunc i54 %tmp_55_8_1 to i27
  %storemerge_8_1 = select i1 %tmp_1107, i27 -1, i27 0
  %tmp_57_8_1 = sext i27 %tmp_1109 to i32
  %tmp_58_8_1 = shl i32 %tmp_57_8_1, %sh_amt_8_1_cast
  %tmp_1111 = trunc i32 %tmp_58_8_1 to i27
  %sel_tmp585 = xor i1 %tmp_44_8_1, true
  %sel_tmp586 = and i1 %tmp_49_8_1, %sel_tmp585
  %sel_tmp1631_demorgan = or i1 %tmp_44_8_1, %tmp_49_8_1
  %sel_tmp587 = xor i1 %sel_tmp1631_demorgan, true
  %sel_tmp588 = and i1 %tmp_46_8_1, %sel_tmp587
  %sel_tmp589 = xor i1 %tmp_51_8_1, true
  %sel_tmp590 = and i1 %sel_tmp588, %sel_tmp589
  %sel_tmp591 = and i1 %sel_tmp588, %tmp_51_8_1
  %sel_tmp1646_demorgan = or i1 %sel_tmp1631_demorgan, %tmp_46_8_1
  %sel_tmp592 = xor i1 %sel_tmp1646_demorgan, true
  %sel_tmp593 = and i1 %tmp_53_8_1, %sel_tmp592
  %newSel260 = select i1 %sel_tmp593, i27 %tmp_1111, i27 %tmp_1110
  %or_cond195 = or i1 %sel_tmp593, %sel_tmp591
  %newSel261 = select i1 %sel_tmp590, i27 %storemerge_8_1, i27 %tmp_1109
  %or_cond196 = or i1 %sel_tmp590, %sel_tmp586
  %newSel262 = select i1 %or_cond195, i27 %newSel260, i27 %newSel261
  %or_cond197 = or i1 %or_cond195, %or_cond196
  %newSel263 = select i1 %or_cond197, i27 %newSel262, i27 0
  %tmp_532 = sext i27 %newSel263 to i41
  %tmp_533 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_29_8, i32 14, i32 40)
  %tmp_61_8_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_533, i14 0)
  %tmp_6223_8_1_cast = mul i41 %tmp_532, %tmp_528
  %p_Val2_30_8_1 = add i41 %tmp_61_8_1, %tmp_6223_8_1_cast
  %tmp_534 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_32_8, i32 14, i32 40)
  %tmp_66_8_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_534, i14 0)
  %tmp_6724_8_1_cast = mul i41 %tmp_532, %tmp_529
  %p_Val2_33_8_1 = add i41 %tmp_66_8_1, %tmp_6724_8_1_cast
  %tmp_535 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_35_8, i32 14, i32 40)
  %tmp_71_8_1 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_535, i14 0)
  %tmp_7225_8_1_cast = mul i41 %tmp_532, %tmp_530
  %p_Val2_36_8_1 = add i41 %tmp_71_8_1, %tmp_7225_8_1_cast
  %p_Val2_12_8_2 = sub i27 %p_x_V_8_load, %p_x_V_2_load
  %p_Val2_15_8_2 = sub i27 %p_y_V_8_load, %p_y_V_2_load
  %p_Val2_18_8_2 = sub i27 %p_z_V_8_load, %p_z_V_2_load
  %tmp_536 = sext i27 %p_Val2_12_8_2 to i41
  %tmp_537 = sext i27 %p_Val2_15_8_2 to i41
  %tmp_2820_8_2 = mul i41 %tmp_536, %tmp_536
  %tmp_2919_8_2 = mul i41 %tmp_537, %tmp_537
  %p_Val2_20_8_2 = add i41 %tmp_2919_8_2, %tmp_2820_8_2
  %tmp_538 = sext i27 %p_Val2_18_8_2 to i41
  %tmp_3118_8_2_cast = mul i41 %tmp_538, %tmp_538
  %p_Val2_21_8_2 = add i41 %p_Val2_20_8_2, %tmp_3118_8_2_cast
  %tmp_539 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_8_2, i32 14, i32 28)
  %x_in_V_read_assign_65 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_539, i33 0)
  %sqrtX_out_V_write_as_65 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_65) nounwind
  %tmp_1112 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_8_2, i32 14, i32 40)
  %OP1_V_8_2_cast_cast = sext i27 %tmp_1112 to i42
  %tmp_1113 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_65, i32 10, i32 24)
  %OP2_V_3_8_2_cast_cas = zext i15 %tmp_1113 to i42
  %tmp_37_8_2 = mul i42 %OP2_V_3_8_2_cast_cas, %OP1_V_8_2_cast_cast
  %tmp_38_8_2 = icmp eq i42 %tmp_37_8_2, 0
  %dp_4_8_8 = sext i42 %tmp_37_8_2 to i64
  %dp_4_8_2 = sitofp i64 %dp_4_8_8 to double
  %res_V_8_2 = bitcast double %dp_4_8_2 to i64
  %p_Result_8_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_8_2, i32 52, i32 62)
  %exp_V_5_8_2 = add i11 -28, %p_Result_8_2
  %p_Result_43_8_2 = call i64 @llvm.part.set.i64.i11(i64 %res_V_8_2, i11 %exp_V_5_8_2, i32 52, i32 62) nounwind
  %dp_8_2 = bitcast i64 %p_Result_43_8_2 to double
  %p_0_i_8_2 = select i1 %tmp_38_8_2, double 0.000000e+00, double %dp_8_2
  %tmp_39_8_2 = fdiv double -1.000000e+00, %p_0_i_8_2
  %prefact_8_2 = fmul double %tmp_39_8_2, 0.000000e+00
  %ireg_V_8_2 = bitcast double %prefact_8_2 to i64
  %tmp_1114 = trunc i64 %ireg_V_8_2 to i63
  %tmp_1115 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_8_2, i32 63)
  %p_Result_40_8_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_8_2, i32 52, i32 62)
  %tmp_42_8_2 = zext i11 %p_Result_40_8_2 to i12
  %tmp_1116 = trunc i64 %ireg_V_8_2 to i52
  %tmp_182 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1116)
  %p_Result_45_8_2 = zext i53 %tmp_182 to i54
  %man_V_1_8_2 = sub i54 0, %p_Result_45_8_2
  %man_V_2_8_2 = select i1 %tmp_1115, i54 %man_V_1_8_2, i54 %p_Result_45_8_2
  %tmp_44_8_2 = icmp eq i63 %tmp_1114, 0
  %F2_8_2 = sub i12 1075, %tmp_42_8_2
  %tmp_46_8_2 = icmp sgt i12 %F2_8_2, 14
  %tmp_47_8_2 = add i12 -14, %F2_8_2
  %tmp_48_8_2 = sub i12 14, %F2_8_2
  %sh_amt_8_2 = select i1 %tmp_46_8_2, i12 %tmp_47_8_2, i12 %tmp_48_8_2
  %sh_amt_8_2_cast = sext i12 %sh_amt_8_2 to i32
  %tmp_49_8_2 = icmp eq i12 %F2_8_2, 14
  %tmp_1117 = trunc i54 %man_V_2_8_2 to i27
  %tmp_51_8_2 = icmp ult i12 %sh_amt_8_2, 54
  %tmp_53_8_2 = icmp ult i12 %sh_amt_8_2, 27
  %tmp_54_8_2 = zext i32 %sh_amt_8_2_cast to i54
  %tmp_55_8_2 = ashr i54 %man_V_2_8_2, %tmp_54_8_2
  %tmp_1118 = trunc i54 %tmp_55_8_2 to i27
  %storemerge_8_2 = select i1 %tmp_1115, i27 -1, i27 0
  %tmp_57_8_2 = sext i27 %tmp_1117 to i32
  %tmp_58_8_2 = shl i32 %tmp_57_8_2, %sh_amt_8_2_cast
  %tmp_1119 = trunc i32 %tmp_58_8_2 to i27
  %sel_tmp594 = xor i1 %tmp_44_8_2, true
  %sel_tmp595 = and i1 %tmp_49_8_2, %sel_tmp594
  %sel_tmp1656_demorgan = or i1 %tmp_44_8_2, %tmp_49_8_2
  %sel_tmp596 = xor i1 %sel_tmp1656_demorgan, true
  %sel_tmp597 = and i1 %tmp_46_8_2, %sel_tmp596
  %sel_tmp598 = xor i1 %tmp_51_8_2, true
  %sel_tmp599 = and i1 %sel_tmp597, %sel_tmp598
  %sel_tmp600 = and i1 %sel_tmp597, %tmp_51_8_2
  %sel_tmp1671_demorgan = or i1 %sel_tmp1656_demorgan, %tmp_46_8_2
  %sel_tmp601 = xor i1 %sel_tmp1671_demorgan, true
  %sel_tmp602 = and i1 %tmp_53_8_2, %sel_tmp601
  %newSel264 = select i1 %sel_tmp602, i27 %tmp_1119, i27 %tmp_1118
  %or_cond198 = or i1 %sel_tmp602, %sel_tmp600
  %newSel265 = select i1 %sel_tmp599, i27 %storemerge_8_2, i27 %tmp_1117
  %or_cond199 = or i1 %sel_tmp599, %sel_tmp595
  %newSel266 = select i1 %or_cond198, i27 %newSel264, i27 %newSel265
  %or_cond200 = or i1 %or_cond198, %or_cond199
  %newSel267 = select i1 %or_cond200, i27 %newSel266, i27 0
  %tmp_540 = sext i27 %newSel267 to i41
  %tmp_541 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_8_1, i32 14, i32 40)
  %tmp_61_8_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_541, i14 0)
  %tmp_6223_8_2_cast = mul i41 %tmp_540, %tmp_536
  %p_Val2_30_8_2 = add i41 %tmp_61_8_2, %tmp_6223_8_2_cast
  %tmp_542 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_8_1, i32 14, i32 40)
  %tmp_66_8_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_542, i14 0)
  %tmp_6724_8_2_cast = mul i41 %tmp_540, %tmp_537
  %p_Val2_33_8_2 = add i41 %tmp_66_8_2, %tmp_6724_8_2_cast
  %tmp_543 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_8_1, i32 14, i32 40)
  %tmp_71_8_2 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_543, i14 0)
  %tmp_7225_8_2_cast = mul i41 %tmp_540, %tmp_538
  %p_Val2_36_8_2 = add i41 %tmp_71_8_2, %tmp_7225_8_2_cast
  %p_Val2_12_8_3 = sub i27 %p_x_V_8_load, %p_x_V_3_load
  %p_Val2_15_8_3 = sub i27 %p_y_V_8_load, %p_y_V_3_load
  %p_Val2_18_8_3 = sub i27 %p_z_V_8_load, %p_z_V_3_load
  %tmp_544 = sext i27 %p_Val2_12_8_3 to i41
  %tmp_545 = sext i27 %p_Val2_15_8_3 to i41
  %tmp_2820_8_3 = mul i41 %tmp_544, %tmp_544
  %tmp_2919_8_3 = mul i41 %tmp_545, %tmp_545
  %p_Val2_20_8_3 = add i41 %tmp_2919_8_3, %tmp_2820_8_3
  %tmp_546 = sext i27 %p_Val2_18_8_3 to i41
  %tmp_3118_8_3_cast = mul i41 %tmp_546, %tmp_546
  %p_Val2_21_8_3 = add i41 %p_Val2_20_8_3, %tmp_3118_8_3_cast
  %tmp_547 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_8_3, i32 14, i32 28)
  %x_in_V_read_assign_66 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_547, i33 0)
  %sqrtX_out_V_write_as_66 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_66) nounwind
  %tmp_1120 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_8_3, i32 14, i32 40)
  %OP1_V_8_3_cast_cast = sext i27 %tmp_1120 to i42
  %tmp_1121 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_66, i32 10, i32 24)
  %OP2_V_3_8_3_cast_cas = zext i15 %tmp_1121 to i42
  %tmp_37_8_3 = mul i42 %OP2_V_3_8_3_cast_cas, %OP1_V_8_3_cast_cast
  %tmp_38_8_3 = icmp eq i42 %tmp_37_8_3, 0
  %dp_4_8_9 = sext i42 %tmp_37_8_3 to i64
  %dp_4_8_3 = sitofp i64 %dp_4_8_9 to double
  %res_V_8_3 = bitcast double %dp_4_8_3 to i64
  %p_Result_8_3 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_8_3, i32 52, i32 62)
  %exp_V_5_8_3 = add i11 -28, %p_Result_8_3
  %p_Result_43_8_3 = call i64 @llvm.part.set.i64.i11(i64 %res_V_8_3, i11 %exp_V_5_8_3, i32 52, i32 62) nounwind
  %dp_8_3 = bitcast i64 %p_Result_43_8_3 to double
  %p_0_i_8_3 = select i1 %tmp_38_8_3, double 0.000000e+00, double %dp_8_3
  %tmp_39_8_3 = fdiv double -1.000000e+00, %p_0_i_8_3
  %prefact_8_3 = fmul double %tmp_39_8_3, 0.000000e+00
  %ireg_V_8_3 = bitcast double %prefact_8_3 to i64
  %tmp_1122 = trunc i64 %ireg_V_8_3 to i63
  %tmp_1123 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_8_3, i32 63)
  %p_Result_40_8_3 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_8_3, i32 52, i32 62)
  %tmp_42_8_3 = zext i11 %p_Result_40_8_3 to i12
  %tmp_1124 = trunc i64 %ireg_V_8_3 to i52
  %tmp_183 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1124)
  %p_Result_45_8_3 = zext i53 %tmp_183 to i54
  %man_V_1_8_3 = sub i54 0, %p_Result_45_8_3
  %man_V_2_8_3 = select i1 %tmp_1123, i54 %man_V_1_8_3, i54 %p_Result_45_8_3
  %tmp_44_8_3 = icmp eq i63 %tmp_1122, 0
  %F2_8_3 = sub i12 1075, %tmp_42_8_3
  %tmp_46_8_3 = icmp sgt i12 %F2_8_3, 14
  %tmp_47_8_3 = add i12 -14, %F2_8_3
  %tmp_48_8_3 = sub i12 14, %F2_8_3
  %sh_amt_8_3 = select i1 %tmp_46_8_3, i12 %tmp_47_8_3, i12 %tmp_48_8_3
  %sh_amt_8_3_cast = sext i12 %sh_amt_8_3 to i32
  %tmp_49_8_3 = icmp eq i12 %F2_8_3, 14
  %tmp_1125 = trunc i54 %man_V_2_8_3 to i27
  %tmp_51_8_3 = icmp ult i12 %sh_amt_8_3, 54
  %tmp_53_8_3 = icmp ult i12 %sh_amt_8_3, 27
  %tmp_54_8_3 = zext i32 %sh_amt_8_3_cast to i54
  %tmp_55_8_3 = ashr i54 %man_V_2_8_3, %tmp_54_8_3
  %tmp_1126 = trunc i54 %tmp_55_8_3 to i27
  %storemerge_8_3 = select i1 %tmp_1123, i27 -1, i27 0
  %tmp_57_8_3 = sext i27 %tmp_1125 to i32
  %tmp_58_8_3 = shl i32 %tmp_57_8_3, %sh_amt_8_3_cast
  %tmp_1127 = trunc i32 %tmp_58_8_3 to i27
  %sel_tmp603 = xor i1 %tmp_44_8_3, true
  %sel_tmp604 = and i1 %tmp_49_8_3, %sel_tmp603
  %sel_tmp1681_demorgan = or i1 %tmp_44_8_3, %tmp_49_8_3
  %sel_tmp605 = xor i1 %sel_tmp1681_demorgan, true
  %sel_tmp606 = and i1 %tmp_46_8_3, %sel_tmp605
  %sel_tmp607 = xor i1 %tmp_51_8_3, true
  %sel_tmp608 = and i1 %sel_tmp606, %sel_tmp607
  %sel_tmp609 = and i1 %sel_tmp606, %tmp_51_8_3
  %sel_tmp1696_demorgan = or i1 %sel_tmp1681_demorgan, %tmp_46_8_3
  %sel_tmp610 = xor i1 %sel_tmp1696_demorgan, true
  %sel_tmp611 = and i1 %tmp_53_8_3, %sel_tmp610
  %newSel268 = select i1 %sel_tmp611, i27 %tmp_1127, i27 %tmp_1126
  %or_cond201 = or i1 %sel_tmp611, %sel_tmp609
  %newSel269 = select i1 %sel_tmp608, i27 %storemerge_8_3, i27 %tmp_1125
  %or_cond202 = or i1 %sel_tmp608, %sel_tmp604
  %newSel270 = select i1 %or_cond201, i27 %newSel268, i27 %newSel269
  %or_cond203 = or i1 %or_cond201, %or_cond202
  %newSel271 = select i1 %or_cond203, i27 %newSel270, i27 0
  %tmp_548 = sext i27 %newSel271 to i41
  %tmp_549 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_8_2, i32 14, i32 40)
  %tmp_61_8_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_549, i14 0)
  %tmp_6223_8_3_cast = mul i41 %tmp_548, %tmp_544
  %p_Val2_30_8_3 = add i41 %tmp_61_8_3, %tmp_6223_8_3_cast
  %tmp_550 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_8_2, i32 14, i32 40)
  %tmp_66_8_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_550, i14 0)
  %tmp_6724_8_3_cast = mul i41 %tmp_548, %tmp_545
  %p_Val2_33_8_3 = add i41 %tmp_66_8_3, %tmp_6724_8_3_cast
  %tmp_551 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_8_2, i32 14, i32 40)
  %tmp_71_8_3 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_551, i14 0)
  %tmp_7225_8_3_cast = mul i41 %tmp_548, %tmp_546
  %p_Val2_36_8_3 = add i41 %tmp_71_8_3, %tmp_7225_8_3_cast
  %p_Val2_12_8_4 = sub i27 %p_x_V_8_load, %p_x_V_4_load
  %p_Val2_15_8_4 = sub i27 %p_y_V_8_load, %p_y_V_4_load
  %p_Val2_18_8_4 = sub i27 %p_z_V_8_load, %p_z_V_4_load
  %tmp_552 = sext i27 %p_Val2_12_8_4 to i41
  %tmp_553 = sext i27 %p_Val2_15_8_4 to i41
  %tmp_2820_8_4 = mul i41 %tmp_552, %tmp_552
  %tmp_2919_8_4 = mul i41 %tmp_553, %tmp_553
  %p_Val2_20_8_4 = add i41 %tmp_2919_8_4, %tmp_2820_8_4
  %tmp_554 = sext i27 %p_Val2_18_8_4 to i41
  %tmp_3118_8_4_cast = mul i41 %tmp_554, %tmp_554
  %p_Val2_21_8_4 = add i41 %p_Val2_20_8_4, %tmp_3118_8_4_cast
  %tmp_555 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_8_4, i32 14, i32 28)
  %x_in_V_read_assign_67 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_555, i33 0)
  %sqrtX_out_V_write_as_67 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_67) nounwind
  %tmp_1128 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_8_4, i32 14, i32 40)
  %OP1_V_8_4_cast_cast = sext i27 %tmp_1128 to i42
  %tmp_1129 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_67, i32 10, i32 24)
  %OP2_V_3_8_4_cast_cas = zext i15 %tmp_1129 to i42
  %tmp_37_8_4 = mul i42 %OP2_V_3_8_4_cast_cas, %OP1_V_8_4_cast_cast
  %tmp_38_8_4 = icmp eq i42 %tmp_37_8_4, 0
  %dp_4_8_10 = sext i42 %tmp_37_8_4 to i64
  %dp_4_8_4 = sitofp i64 %dp_4_8_10 to double
  %res_V_8_4 = bitcast double %dp_4_8_4 to i64
  %p_Result_8_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_8_4, i32 52, i32 62)
  %exp_V_5_8_4 = add i11 -28, %p_Result_8_4
  %p_Result_43_8_4 = call i64 @llvm.part.set.i64.i11(i64 %res_V_8_4, i11 %exp_V_5_8_4, i32 52, i32 62) nounwind
  %dp_8_4 = bitcast i64 %p_Result_43_8_4 to double
  %p_0_i_8_4 = select i1 %tmp_38_8_4, double 0.000000e+00, double %dp_8_4
  %tmp_39_8_4 = fdiv double -1.000000e+00, %p_0_i_8_4
  %prefact_8_4 = fmul double %tmp_39_8_4, 0.000000e+00
  %ireg_V_8_4 = bitcast double %prefact_8_4 to i64
  %tmp_1130 = trunc i64 %ireg_V_8_4 to i63
  %tmp_1131 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_8_4, i32 63)
  %p_Result_40_8_4 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_8_4, i32 52, i32 62)
  %tmp_42_8_4 = zext i11 %p_Result_40_8_4 to i12
  %tmp_1132 = trunc i64 %ireg_V_8_4 to i52
  %tmp_184 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1132)
  %p_Result_45_8_4 = zext i53 %tmp_184 to i54
  %man_V_1_8_4 = sub i54 0, %p_Result_45_8_4
  %man_V_2_8_4 = select i1 %tmp_1131, i54 %man_V_1_8_4, i54 %p_Result_45_8_4
  %tmp_44_8_4 = icmp eq i63 %tmp_1130, 0
  %F2_8_4 = sub i12 1075, %tmp_42_8_4
  %tmp_46_8_4 = icmp sgt i12 %F2_8_4, 14
  %tmp_47_8_4 = add i12 -14, %F2_8_4
  %tmp_48_8_4 = sub i12 14, %F2_8_4
  %sh_amt_8_4 = select i1 %tmp_46_8_4, i12 %tmp_47_8_4, i12 %tmp_48_8_4
  %sh_amt_8_4_cast = sext i12 %sh_amt_8_4 to i32
  %tmp_49_8_4 = icmp eq i12 %F2_8_4, 14
  %tmp_1133 = trunc i54 %man_V_2_8_4 to i27
  %tmp_51_8_4 = icmp ult i12 %sh_amt_8_4, 54
  %tmp_53_8_4 = icmp ult i12 %sh_amt_8_4, 27
  %tmp_54_8_4 = zext i32 %sh_amt_8_4_cast to i54
  %tmp_55_8_4 = ashr i54 %man_V_2_8_4, %tmp_54_8_4
  %tmp_1134 = trunc i54 %tmp_55_8_4 to i27
  %storemerge_8_4 = select i1 %tmp_1131, i27 -1, i27 0
  %tmp_57_8_4 = sext i27 %tmp_1133 to i32
  %tmp_58_8_4 = shl i32 %tmp_57_8_4, %sh_amt_8_4_cast
  %tmp_1135 = trunc i32 %tmp_58_8_4 to i27
  %sel_tmp612 = xor i1 %tmp_44_8_4, true
  %sel_tmp613 = and i1 %tmp_49_8_4, %sel_tmp612
  %sel_tmp1706_demorgan = or i1 %tmp_44_8_4, %tmp_49_8_4
  %sel_tmp614 = xor i1 %sel_tmp1706_demorgan, true
  %sel_tmp615 = and i1 %tmp_46_8_4, %sel_tmp614
  %sel_tmp616 = xor i1 %tmp_51_8_4, true
  %sel_tmp617 = and i1 %sel_tmp615, %sel_tmp616
  %sel_tmp618 = and i1 %sel_tmp615, %tmp_51_8_4
  %sel_tmp1721_demorgan = or i1 %sel_tmp1706_demorgan, %tmp_46_8_4
  %sel_tmp619 = xor i1 %sel_tmp1721_demorgan, true
  %sel_tmp620 = and i1 %tmp_53_8_4, %sel_tmp619
  %newSel272 = select i1 %sel_tmp620, i27 %tmp_1135, i27 %tmp_1134
  %or_cond204 = or i1 %sel_tmp620, %sel_tmp618
  %newSel273 = select i1 %sel_tmp617, i27 %storemerge_8_4, i27 %tmp_1133
  %or_cond205 = or i1 %sel_tmp617, %sel_tmp613
  %newSel274 = select i1 %or_cond204, i27 %newSel272, i27 %newSel273
  %or_cond206 = or i1 %or_cond204, %or_cond205
  %newSel275 = select i1 %or_cond206, i27 %newSel274, i27 0
  %tmp_556 = sext i27 %newSel275 to i41
  %tmp_557 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_8_3, i32 14, i32 40)
  %tmp_61_8_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_557, i14 0)
  %tmp_6223_8_4_cast = mul i41 %tmp_556, %tmp_552
  %p_Val2_30_8_4 = add i41 %tmp_61_8_4, %tmp_6223_8_4_cast
  %tmp_558 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_8_3, i32 14, i32 40)
  %tmp_66_8_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_558, i14 0)
  %tmp_6724_8_4_cast = mul i41 %tmp_556, %tmp_553
  %p_Val2_33_8_4 = add i41 %tmp_66_8_4, %tmp_6724_8_4_cast
  %tmp_559 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_8_3, i32 14, i32 40)
  %tmp_71_8_4 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_559, i14 0)
  %tmp_7225_8_4_cast = mul i41 %tmp_556, %tmp_554
  %p_Val2_36_8_4 = add i41 %tmp_71_8_4, %tmp_7225_8_4_cast
  %p_Val2_12_8_5 = sub i27 %p_x_V_8_load, %p_x_V_5_load
  %p_Val2_15_8_5 = sub i27 %p_y_V_8_load, %p_y_V_5_load
  %p_Val2_18_8_5 = sub i27 %p_z_V_8_load, %p_z_V_5_load
  %tmp_560 = sext i27 %p_Val2_12_8_5 to i41
  %tmp_561 = sext i27 %p_Val2_15_8_5 to i41
  %tmp_2820_8_5 = mul i41 %tmp_560, %tmp_560
  %tmp_2919_8_5 = mul i41 %tmp_561, %tmp_561
  %p_Val2_20_8_5 = add i41 %tmp_2919_8_5, %tmp_2820_8_5
  %tmp_562 = sext i27 %p_Val2_18_8_5 to i41
  %tmp_3118_8_5_cast = mul i41 %tmp_562, %tmp_562
  %p_Val2_21_8_5 = add i41 %p_Val2_20_8_5, %tmp_3118_8_5_cast
  %tmp_563 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_8_5, i32 14, i32 28)
  %x_in_V_read_assign_68 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_563, i33 0)
  %sqrtX_out_V_write_as_68 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_68) nounwind
  %tmp_1136 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_8_5, i32 14, i32 40)
  %OP1_V_8_5_cast_cast = sext i27 %tmp_1136 to i42
  %tmp_1137 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_68, i32 10, i32 24)
  %OP2_V_3_8_5_cast_cas = zext i15 %tmp_1137 to i42
  %tmp_37_8_5 = mul i42 %OP2_V_3_8_5_cast_cas, %OP1_V_8_5_cast_cast
  %tmp_38_8_5 = icmp eq i42 %tmp_37_8_5, 0
  %dp_4_8_11 = sext i42 %tmp_37_8_5 to i64
  %dp_4_8_5 = sitofp i64 %dp_4_8_11 to double
  %res_V_8_5 = bitcast double %dp_4_8_5 to i64
  %p_Result_8_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_8_5, i32 52, i32 62)
  %exp_V_5_8_5 = add i11 -28, %p_Result_8_5
  %p_Result_43_8_5 = call i64 @llvm.part.set.i64.i11(i64 %res_V_8_5, i11 %exp_V_5_8_5, i32 52, i32 62) nounwind
  %dp_8_5 = bitcast i64 %p_Result_43_8_5 to double
  %p_0_i_8_5 = select i1 %tmp_38_8_5, double 0.000000e+00, double %dp_8_5
  %tmp_39_8_5 = fdiv double -1.000000e+00, %p_0_i_8_5
  %prefact_8_5 = fmul double %tmp_39_8_5, 0x3F4E000000000000
  %ireg_V_8_5 = bitcast double %prefact_8_5 to i64
  %tmp_1138 = trunc i64 %ireg_V_8_5 to i63
  %tmp_1139 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_8_5, i32 63)
  %p_Result_40_8_5 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_8_5, i32 52, i32 62)
  %tmp_42_8_5 = zext i11 %p_Result_40_8_5 to i12
  %tmp_1140 = trunc i64 %ireg_V_8_5 to i52
  %tmp_185 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1140)
  %p_Result_45_8_5 = zext i53 %tmp_185 to i54
  %man_V_1_8_5 = sub i54 0, %p_Result_45_8_5
  %man_V_2_8_5 = select i1 %tmp_1139, i54 %man_V_1_8_5, i54 %p_Result_45_8_5
  %tmp_44_8_5 = icmp eq i63 %tmp_1138, 0
  %F2_8_5 = sub i12 1075, %tmp_42_8_5
  %tmp_46_8_5 = icmp sgt i12 %F2_8_5, 14
  %tmp_47_8_5 = add i12 -14, %F2_8_5
  %tmp_48_8_5 = sub i12 14, %F2_8_5
  %sh_amt_8_5 = select i1 %tmp_46_8_5, i12 %tmp_47_8_5, i12 %tmp_48_8_5
  %sh_amt_8_5_cast = sext i12 %sh_amt_8_5 to i32
  %tmp_49_8_5 = icmp eq i12 %F2_8_5, 14
  %tmp_1141 = trunc i54 %man_V_2_8_5 to i27
  %tmp_51_8_5 = icmp ult i12 %sh_amt_8_5, 54
  %tmp_53_8_5 = icmp ult i12 %sh_amt_8_5, 27
  %tmp_54_8_5 = zext i32 %sh_amt_8_5_cast to i54
  %tmp_55_8_5 = ashr i54 %man_V_2_8_5, %tmp_54_8_5
  %tmp_1142 = trunc i54 %tmp_55_8_5 to i27
  %storemerge_8_5 = select i1 %tmp_1139, i27 -1, i27 0
  %tmp_57_8_5 = sext i27 %tmp_1141 to i32
  %tmp_58_8_5 = shl i32 %tmp_57_8_5, %sh_amt_8_5_cast
  %tmp_1143 = trunc i32 %tmp_58_8_5 to i27
  %sel_tmp621 = xor i1 %tmp_44_8_5, true
  %sel_tmp622 = and i1 %tmp_49_8_5, %sel_tmp621
  %sel_tmp1731_demorgan = or i1 %tmp_44_8_5, %tmp_49_8_5
  %sel_tmp623 = xor i1 %sel_tmp1731_demorgan, true
  %sel_tmp624 = and i1 %tmp_46_8_5, %sel_tmp623
  %sel_tmp625 = xor i1 %tmp_51_8_5, true
  %sel_tmp626 = and i1 %sel_tmp624, %sel_tmp625
  %sel_tmp627 = and i1 %sel_tmp624, %tmp_51_8_5
  %sel_tmp1746_demorgan = or i1 %sel_tmp1731_demorgan, %tmp_46_8_5
  %sel_tmp628 = xor i1 %sel_tmp1746_demorgan, true
  %sel_tmp629 = and i1 %tmp_53_8_5, %sel_tmp628
  %newSel276 = select i1 %sel_tmp629, i27 %tmp_1143, i27 %tmp_1142
  %or_cond207 = or i1 %sel_tmp629, %sel_tmp627
  %newSel277 = select i1 %sel_tmp626, i27 %storemerge_8_5, i27 %tmp_1141
  %or_cond208 = or i1 %sel_tmp626, %sel_tmp622
  %newSel278 = select i1 %or_cond207, i27 %newSel276, i27 %newSel277
  %or_cond209 = or i1 %or_cond207, %or_cond208
  %newSel279 = select i1 %or_cond209, i27 %newSel278, i27 0
  %tmp_564 = sext i27 %newSel279 to i41
  %tmp_565 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_8_4, i32 14, i32 40)
  %tmp_61_8_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_565, i14 0)
  %tmp_6223_8_5_cast = mul i41 %tmp_564, %tmp_560
  %p_Val2_30_8_5 = add i41 %tmp_61_8_5, %tmp_6223_8_5_cast
  %tmp_566 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_8_4, i32 14, i32 40)
  %tmp_66_8_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_566, i14 0)
  %tmp_6724_8_5_cast = mul i41 %tmp_564, %tmp_561
  %p_Val2_33_8_5 = add i41 %tmp_66_8_5, %tmp_6724_8_5_cast
  %tmp_567 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_8_4, i32 14, i32 40)
  %tmp_71_8_5 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_567, i14 0)
  %tmp_7225_8_5_cast = mul i41 %tmp_564, %tmp_562
  %p_Val2_36_8_5 = add i41 %tmp_71_8_5, %tmp_7225_8_5_cast
  %p_Val2_12_8_6 = sub i27 %p_x_V_8_load, %p_x_V_6_load
  %p_Val2_15_8_6 = sub i27 %p_y_V_8_load, %p_y_V_6_load
  %p_Val2_18_8_6 = sub i27 %p_z_V_8_load, %p_z_V_6_load
  %tmp_568 = sext i27 %p_Val2_12_8_6 to i41
  %tmp_569 = sext i27 %p_Val2_15_8_6 to i41
  %tmp_2820_8_6 = mul i41 %tmp_568, %tmp_568
  %tmp_2919_8_6 = mul i41 %tmp_569, %tmp_569
  %p_Val2_20_8_6 = add i41 %tmp_2919_8_6, %tmp_2820_8_6
  %tmp_570 = sext i27 %p_Val2_18_8_6 to i41
  %tmp_3118_8_6_cast = mul i41 %tmp_570, %tmp_570
  %p_Val2_21_8_6 = add i41 %p_Val2_20_8_6, %tmp_3118_8_6_cast
  %tmp_571 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_8_6, i32 14, i32 28)
  %x_in_V_read_assign_69 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_571, i33 0)
  %sqrtX_out_V_write_as_69 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_69) nounwind
  %tmp_1144 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_8_6, i32 14, i32 40)
  %OP1_V_8_6_cast_cast = sext i27 %tmp_1144 to i42
  %tmp_1145 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_69, i32 10, i32 24)
  %OP2_V_3_8_6_cast_cas = zext i15 %tmp_1145 to i42
  %tmp_37_8_6 = mul i42 %OP2_V_3_8_6_cast_cas, %OP1_V_8_6_cast_cast
  %tmp_38_8_6 = icmp eq i42 %tmp_37_8_6, 0
  %dp_4_8_12 = sext i42 %tmp_37_8_6 to i64
  %dp_4_8_6 = sitofp i64 %dp_4_8_12 to double
  %res_V_8_6 = bitcast double %dp_4_8_6 to i64
  %p_Result_8_6 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_8_6, i32 52, i32 62)
  %exp_V_5_8_6 = add i11 -28, %p_Result_8_6
  %p_Result_43_8_6 = call i64 @llvm.part.set.i64.i11(i64 %res_V_8_6, i11 %exp_V_5_8_6, i32 52, i32 62) nounwind
  %dp_8_6 = bitcast i64 %p_Result_43_8_6 to double
  %p_0_i_8_6 = select i1 %tmp_38_8_6, double 0.000000e+00, double %dp_8_6
  %tmp_39_8_6 = fdiv double -1.000000e+00, %p_0_i_8_6
  %prefact_8_6 = fmul double %tmp_39_8_6, 0x3F30000000000000
  %ireg_V_8_6 = bitcast double %prefact_8_6 to i64
  %tmp_1146 = trunc i64 %ireg_V_8_6 to i63
  %tmp_1147 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_8_6, i32 63)
  %p_Result_40_8_6 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_8_6, i32 52, i32 62)
  %tmp_42_8_6 = zext i11 %p_Result_40_8_6 to i12
  %tmp_1148 = trunc i64 %ireg_V_8_6 to i52
  %tmp_186 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1148)
  %p_Result_45_8_6 = zext i53 %tmp_186 to i54
  %man_V_1_8_6 = sub i54 0, %p_Result_45_8_6
  %man_V_2_8_6 = select i1 %tmp_1147, i54 %man_V_1_8_6, i54 %p_Result_45_8_6
  %tmp_44_8_6 = icmp eq i63 %tmp_1146, 0
  %F2_8_6 = sub i12 1075, %tmp_42_8_6
  %tmp_46_8_6 = icmp sgt i12 %F2_8_6, 14
  %tmp_47_8_6 = add i12 -14, %F2_8_6
  %tmp_48_8_6 = sub i12 14, %F2_8_6
  %sh_amt_8_6 = select i1 %tmp_46_8_6, i12 %tmp_47_8_6, i12 %tmp_48_8_6
  %sh_amt_8_6_cast = sext i12 %sh_amt_8_6 to i32
  %tmp_49_8_6 = icmp eq i12 %F2_8_6, 14
  %tmp_1149 = trunc i54 %man_V_2_8_6 to i27
  %tmp_51_8_6 = icmp ult i12 %sh_amt_8_6, 54
  %tmp_53_8_6 = icmp ult i12 %sh_amt_8_6, 27
  %tmp_54_8_6 = zext i32 %sh_amt_8_6_cast to i54
  %tmp_55_8_6 = ashr i54 %man_V_2_8_6, %tmp_54_8_6
  %tmp_1150 = trunc i54 %tmp_55_8_6 to i27
  %storemerge_8_6 = select i1 %tmp_1147, i27 -1, i27 0
  %tmp_57_8_6 = sext i27 %tmp_1149 to i32
  %tmp_58_8_6 = shl i32 %tmp_57_8_6, %sh_amt_8_6_cast
  %tmp_1151 = trunc i32 %tmp_58_8_6 to i27
  %sel_tmp630 = xor i1 %tmp_44_8_6, true
  %sel_tmp631 = and i1 %tmp_49_8_6, %sel_tmp630
  %sel_tmp1756_demorgan = or i1 %tmp_44_8_6, %tmp_49_8_6
  %sel_tmp632 = xor i1 %sel_tmp1756_demorgan, true
  %sel_tmp633 = and i1 %tmp_46_8_6, %sel_tmp632
  %sel_tmp634 = xor i1 %tmp_51_8_6, true
  %sel_tmp635 = and i1 %sel_tmp633, %sel_tmp634
  %sel_tmp636 = and i1 %sel_tmp633, %tmp_51_8_6
  %sel_tmp1771_demorgan = or i1 %sel_tmp1756_demorgan, %tmp_46_8_6
  %sel_tmp637 = xor i1 %sel_tmp1771_demorgan, true
  %sel_tmp638 = and i1 %tmp_53_8_6, %sel_tmp637
  %newSel280 = select i1 %sel_tmp638, i27 %tmp_1151, i27 %tmp_1150
  %or_cond210 = or i1 %sel_tmp638, %sel_tmp636
  %newSel281 = select i1 %sel_tmp635, i27 %storemerge_8_6, i27 %tmp_1149
  %or_cond211 = or i1 %sel_tmp635, %sel_tmp631
  %newSel282 = select i1 %or_cond210, i27 %newSel280, i27 %newSel281
  %or_cond212 = or i1 %or_cond210, %or_cond211
  %newSel283 = select i1 %or_cond212, i27 %newSel282, i27 0
  %tmp_572 = sext i27 %newSel283 to i41
  %tmp_573 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_8_5, i32 14, i32 40)
  %tmp_61_8_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_573, i14 0)
  %tmp_6223_8_6_cast = mul i41 %tmp_572, %tmp_568
  %p_Val2_30_8_6 = add i41 %tmp_61_8_6, %tmp_6223_8_6_cast
  %tmp_574 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_8_5, i32 14, i32 40)
  %tmp_66_8_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_574, i14 0)
  %tmp_6724_8_6_cast = mul i41 %tmp_572, %tmp_569
  %p_Val2_33_8_6 = add i41 %tmp_66_8_6, %tmp_6724_8_6_cast
  %tmp_575 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_8_5, i32 14, i32 40)
  %tmp_71_8_6 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_575, i14 0)
  %tmp_7225_8_6_cast = mul i41 %tmp_572, %tmp_570
  %p_Val2_36_8_6 = add i41 %tmp_71_8_6, %tmp_7225_8_6_cast
  %p_Val2_12_8_7 = sub i27 %p_x_V_8_load, %p_x_V_7_load
  %p_Val2_15_8_7 = sub i27 %p_y_V_8_load, %p_y_V_7_load
  %p_Val2_18_8_7 = sub i27 %p_z_V_8_load, %p_z_V_7_load
  %tmp_576 = sext i27 %p_Val2_12_8_7 to i41
  %tmp_577 = sext i27 %p_Val2_15_8_7 to i41
  %tmp_2820_8_7 = mul i41 %tmp_576, %tmp_576
  %tmp_2919_8_7 = mul i41 %tmp_577, %tmp_577
  %p_Val2_20_8_7 = add i41 %tmp_2919_8_7, %tmp_2820_8_7
  %tmp_578 = sext i27 %p_Val2_18_8_7 to i41
  %tmp_3118_8_7_cast = mul i41 %tmp_578, %tmp_578
  %p_Val2_21_8_7 = add i41 %p_Val2_20_8_7, %tmp_3118_8_7_cast
  %tmp_579 = call i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41 %p_Val2_21_8_7, i32 14, i32 28)
  %x_in_V_read_assign_70 = call i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15 %tmp_579, i33 0)
  %sqrtX_out_V_write_as_70 = call fastcc i25 @cordic_base(i48 %x_in_V_read_assign_70) nounwind
  %tmp_1152 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_21_8_7, i32 14, i32 40)
  %OP1_V_8_7_cast_cast = sext i27 %tmp_1152 to i42
  %tmp_1153 = call i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25 %sqrtX_out_V_write_as_70, i32 10, i32 24)
  %OP2_V_3_8_7_cast_cas = zext i15 %tmp_1153 to i42
  %tmp_37_8_7 = mul i42 %OP2_V_3_8_7_cast_cas, %OP1_V_8_7_cast_cast
  %tmp_38_8_7 = icmp eq i42 %tmp_37_8_7, 0
  %dp_4_8_13 = sext i42 %tmp_37_8_7 to i64
  %dp_4_8_7 = sitofp i64 %dp_4_8_13 to double
  %res_V_8_7 = bitcast double %dp_4_8_7 to i64
  %p_Result_8_7 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %res_V_8_7, i32 52, i32 62)
  %exp_V_5_8_7 = add i11 -28, %p_Result_8_7
  %p_Result_43_8_7 = call i64 @llvm.part.set.i64.i11(i64 %res_V_8_7, i11 %exp_V_5_8_7, i32 52, i32 62) nounwind
  %dp_8_7 = bitcast i64 %p_Result_43_8_7 to double
  %p_0_i_8_7 = select i1 %tmp_38_8_7, double 0.000000e+00, double %dp_8_7
  %tmp_39_8_7 = fdiv double -1.000000e+00, %p_0_i_8_7
  %prefact_8_7 = fmul double %tmp_39_8_7, 0.000000e+00
  %ireg_V_8_7 = bitcast double %prefact_8_7 to i64
  %tmp_1154 = trunc i64 %ireg_V_8_7 to i63
  %tmp_1155 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_8_7, i32 63)
  %p_Result_40_8_7 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_8_7, i32 52, i32 62)
  %tmp_42_8_7 = zext i11 %p_Result_40_8_7 to i12
  %tmp_1156 = trunc i64 %ireg_V_8_7 to i52
  %tmp_187 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_1156)
  %p_Result_45_8_7 = zext i53 %tmp_187 to i54
  %man_V_1_8_7 = sub i54 0, %p_Result_45_8_7
  %man_V_2_8_7 = select i1 %tmp_1155, i54 %man_V_1_8_7, i54 %p_Result_45_8_7
  %tmp_44_8_7 = icmp eq i63 %tmp_1154, 0
  %F2_8_7 = sub i12 1075, %tmp_42_8_7
  %tmp_46_8_7 = icmp sgt i12 %F2_8_7, 14
  %tmp_47_8_7 = add i12 -14, %F2_8_7
  %tmp_48_8_7 = sub i12 14, %F2_8_7
  %sh_amt_8_7 = select i1 %tmp_46_8_7, i12 %tmp_47_8_7, i12 %tmp_48_8_7
  %sh_amt_8_7_cast = sext i12 %sh_amt_8_7 to i32
  %tmp_49_8_7 = icmp eq i12 %F2_8_7, 14
  %tmp_1157 = trunc i54 %man_V_2_8_7 to i27
  %tmp_51_8_7 = icmp ult i12 %sh_amt_8_7, 54
  %tmp_53_8_7 = icmp ult i12 %sh_amt_8_7, 27
  %tmp_54_8_7 = zext i32 %sh_amt_8_7_cast to i54
  %tmp_55_8_7 = ashr i54 %man_V_2_8_7, %tmp_54_8_7
  %tmp_1158 = trunc i54 %tmp_55_8_7 to i27
  %storemerge_8_7 = select i1 %tmp_1155, i27 -1, i27 0
  %tmp_57_8_7 = sext i27 %tmp_1157 to i32
  %tmp_58_8_7 = shl i32 %tmp_57_8_7, %sh_amt_8_7_cast
  %tmp_1159 = trunc i32 %tmp_58_8_7 to i27
  %sel_tmp639 = xor i1 %tmp_44_8_7, true
  %sel_tmp640 = and i1 %tmp_49_8_7, %sel_tmp639
  %sel_tmp1781_demorgan = or i1 %tmp_44_8_7, %tmp_49_8_7
  %sel_tmp641 = xor i1 %sel_tmp1781_demorgan, true
  %sel_tmp642 = and i1 %tmp_46_8_7, %sel_tmp641
  %sel_tmp643 = xor i1 %tmp_51_8_7, true
  %sel_tmp644 = and i1 %sel_tmp642, %sel_tmp643
  %sel_tmp645 = and i1 %sel_tmp642, %tmp_51_8_7
  %sel_tmp1796_demorgan = or i1 %sel_tmp1781_demorgan, %tmp_46_8_7
  %sel_tmp646 = xor i1 %sel_tmp1796_demorgan, true
  %sel_tmp647 = and i1 %tmp_53_8_7, %sel_tmp646
  %newSel284 = select i1 %sel_tmp647, i27 %tmp_1159, i27 %tmp_1158
  %or_cond213 = or i1 %sel_tmp647, %sel_tmp645
  %newSel285 = select i1 %sel_tmp644, i27 %storemerge_8_7, i27 %tmp_1157
  %or_cond214 = or i1 %sel_tmp644, %sel_tmp640
  %newSel286 = select i1 %or_cond213, i27 %newSel284, i27 %newSel285
  %or_cond215 = or i1 %or_cond213, %or_cond214
  %newSel287 = select i1 %or_cond215, i27 %newSel286, i27 0
  %tmp_580 = sext i27 %newSel287 to i41
  %tmp_581 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_8_6, i32 14, i32 40)
  %tmp_61_8_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_581, i14 0)
  %tmp_6223_8_7_cast = mul i41 %tmp_580, %tmp_576
  %p_Val2_30_8_7 = add i41 %tmp_61_8_7, %tmp_6223_8_7_cast
  %tmp_64_8_7 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_30_8_7, i32 14, i32 40)
  store i27 %tmp_64_8_7, i27* @p_ax_V_8, align 16
  %tmp_582 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_8_6, i32 14, i32 40)
  %tmp_66_8_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_582, i14 0)
  %tmp_6724_8_7_cast = mul i41 %tmp_580, %tmp_577
  %p_Val2_33_8_7 = add i41 %tmp_66_8_7, %tmp_6724_8_7_cast
  %tmp_69_8_7 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_33_8_7, i32 14, i32 40)
  store i27 %tmp_69_8_7, i27* @p_ay_V_8, align 16
  %tmp_583 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_8_6, i32 14, i32 40)
  %tmp_71_8_7 = call i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27 %tmp_583, i14 0)
  %tmp_7225_8_7_cast = mul i41 %tmp_580, %tmp_578
  %p_Val2_36_8_7 = add i41 %tmp_71_8_7, %tmp_7225_8_7_cast
  %tmp_74_8_7 = call i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41 %p_Val2_36_8_7, i32 14, i32 40)
  store i27 %tmp_74_8_7, i27* @p_az_V_8, align 16
  ret void
}

define internal fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_read, i27 %p_int_1_x_V_read, i27 %p_int_2_x_V_read, i27 %p_int_3_x_V_read, i27 %p_int_4_x_V_read, i27 %p_int_5_x_V_read, i27 %p_int_6_x_V_read, i27 %p_int_7_x_V_read, i27 %p_int_8_x_V_read, i27 %p_int_0_y_V_read, i27 %p_int_1_y_V_read, i27 %p_int_2_y_V_read, i27 %p_int_3_y_V_read, i27 %p_int_4_y_V_read, i27 %p_int_5_y_V_read, i27 %p_int_6_y_V_read, i27 %p_int_7_y_V_read, i27 %p_int_8_y_V_read, i27 %p_int_0_z_V_read, i27 %p_int_1_z_V_read, i27 %p_int_2_z_V_read, i27 %p_int_3_z_V_read, i27 %p_int_4_z_V_read, i27 %p_int_5_z_V_read, i27 %p_int_6_z_V_read, i27 %p_int_7_z_V_read, i27 %p_int_8_z_V_read) readnone {
ap_fixed_base.exit.0:
  %p_int_8_z_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_8_z_V_read)
  %p_int_7_z_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_7_z_V_read)
  %p_int_6_z_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_6_z_V_read)
  %p_int_5_z_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_5_z_V_read)
  %p_int_4_z_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_4_z_V_read)
  %p_int_3_z_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_3_z_V_read)
  %p_int_2_z_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_2_z_V_read)
  %p_int_1_z_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_1_z_V_read)
  %p_int_0_z_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_0_z_V_read)
  %p_int_8_y_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_8_y_V_read)
  %p_int_7_y_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_7_y_V_read)
  %p_int_6_y_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_6_y_V_read)
  %p_int_5_y_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_5_y_V_read)
  %p_int_4_y_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_4_y_V_read)
  %p_int_3_y_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_3_y_V_read)
  %p_int_2_y_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_2_y_V_read)
  %p_int_1_y_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_1_y_V_read)
  %p_int_0_y_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_0_y_V_read)
  %p_int_8_x_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_8_x_V_read)
  %p_int_7_x_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_7_x_V_read)
  %p_int_6_x_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_6_x_V_read)
  %p_int_5_x_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_5_x_V_read)
  %p_int_4_x_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_4_x_V_read)
  %p_int_3_x_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_3_x_V_read)
  %p_int_2_x_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_2_x_V_read)
  %p_int_1_x_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_1_x_V_read)
  %p_int_0_x_V_read_1 = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %p_int_0_x_V_read)
  %mrv = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } undef, i27 %p_int_0_x_V_read_1, 0
  %mrv_1 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv, i27 %p_int_1_x_V_read_1, 1
  %mrv_2 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_1, i27 %p_int_2_x_V_read_1, 2
  %mrv_3 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_2, i27 %p_int_3_x_V_read_1, 3
  %mrv_4 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_3, i27 %p_int_4_x_V_read_1, 4
  %mrv_5 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_4, i27 %p_int_5_x_V_read_1, 5
  %mrv_6 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_5, i27 %p_int_6_x_V_read_1, 6
  %mrv_7 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_6, i27 %p_int_7_x_V_read_1, 7
  %mrv_8 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_7, i27 %p_int_8_x_V_read_1, 8
  %mrv_9 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_8, i27 %p_int_0_y_V_read_1, 9
  %mrv_s = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_9, i27 %p_int_1_y_V_read_1, 10
  %mrv_10 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_s, i27 %p_int_2_y_V_read_1, 11
  %mrv_11 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_10, i27 %p_int_3_y_V_read_1, 12
  %mrv_12 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_11, i27 %p_int_4_y_V_read_1, 13
  %mrv_13 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_12, i27 %p_int_5_y_V_read_1, 14
  %mrv_14 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_13, i27 %p_int_6_y_V_read_1, 15
  %mrv_15 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_14, i27 %p_int_7_y_V_read_1, 16
  %mrv_16 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_15, i27 %p_int_8_y_V_read_1, 17
  %mrv_17 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_16, i27 %p_int_0_z_V_read_1, 18
  %mrv_18 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_17, i27 %p_int_1_z_V_read_1, 19
  %mrv_19 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_18, i27 %p_int_2_z_V_read_1, 20
  %mrv_20 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_19, i27 %p_int_3_z_V_read_1, 21
  %mrv_21 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_20, i27 %p_int_4_z_V_read_1, 22
  %mrv_22 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_21, i27 %p_int_5_z_V_read_1, 23
  %mrv_23 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_22, i27 %p_int_6_z_V_read_1, 24
  %mrv_24 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_23, i27 %p_int_7_z_V_read_1, 25
  %mrv_25 = insertvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_24, i27 %p_int_8_z_V_read_1, 26
  ret { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %mrv_25
}

define internal fastcc i25 @cordic_base(i48 %inputData_in_V_read) readnone {
_ZrsILi48ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit339_ifconv:
  %inputData_in_V_read_1 = call i48 @_ssdm_op_Read.ap_auto.i48(i48 %inputData_in_V_read)
  %tmp = call i1 @_ssdm_op_BitSelect.i1.i48.i32(i48 %inputData_in_V_read_1, i32 47)
  %tmp_1160 = trunc i48 %inputData_in_V_read_1 to i1
  %p_Result_2 = call i50 @_ssdm_op_BitConcatenate.i50.i49.i1(i49 0, i1 %tmp)
  %rem_next_V = add i50 -1, %p_Result_2
  %tmp_1161 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V, i32 25)
  %not_Result_3 = xor i1 %tmp_1161, true
  %p_Result_29_0_rem_s = select i1 %tmp_1161, i50 %p_Result_2, i50 %rem_next_V
  %tmp_1162 = trunc i50 %p_Result_29_0_rem_s to i24
  %tmp_1 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 45, i32 46)
  %tmp_2 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1162, i2 %tmp_1)
  %p_Result_29_1 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_Result_29_0_rem_s, i26 %tmp_2, i32 0, i32 25)
  %tmp_3 = zext i1 %not_Result_3 to i23
  %p_Result_30_1_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_3, i2 1)
  %rem_next_V_1 = sub i50 %p_Result_29_1, %p_Result_30_1_s
  %tmp_4 = call i2 @_ssdm_op_BitConcatenate.i2.i1.i1(i1 %not_Result_3, i1 false)
  %tmp_1163 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_1, i32 25)
  %tmp_118 = call i2 @_ssdm_op_BitConcatenate.i2.i1.i1(i1 %not_Result_3, i1 true)
  %sqrt_int_2_1_v = select i1 %tmp_1163, i2 %tmp_4, i2 %tmp_118
  %p_0289_2_i_1 = select i1 %tmp_1163, i50 %p_Result_29_1, i50 %rem_next_V_1
  %tmp_1164 = trunc i50 %p_0289_2_i_1 to i24
  %tmp_7 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 43, i32 44)
  %tmp_8 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1164, i2 %tmp_7)
  %p_Result_29_2 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_1, i26 %tmp_8, i32 0, i32 25)
  %tmp_9 = zext i2 %sqrt_int_2_1_v to i23
  %p_Result_30_2_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_9, i2 1)
  %rem_next_V_2 = sub i50 %p_Result_29_2, %p_Result_30_2_s
  %tmp_s = call i3 @_ssdm_op_BitConcatenate.i3.i2.i1(i2 %sqrt_int_2_1_v, i1 false)
  %tmp_1165 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_2, i32 25)
  %tmp_584 = call i3 @_ssdm_op_BitConcatenate.i3.i2.i1(i2 %sqrt_int_2_1_v, i1 true)
  %sqrt_int_2_2_v = select i1 %tmp_1165, i3 %tmp_s, i3 %tmp_584
  %p_0289_2_i_2 = select i1 %tmp_1165, i50 %p_Result_29_2, i50 %rem_next_V_2
  %tmp_1166 = trunc i50 %p_0289_2_i_2 to i24
  %tmp_10 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 41, i32 42)
  %tmp_11 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1166, i2 %tmp_10)
  %p_Result_29_3 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_2, i26 %tmp_11, i32 0, i32 25)
  %tmp_12 = zext i3 %sqrt_int_2_2_v to i23
  %p_Result_30_3_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_12, i2 1)
  %rem_next_V_3 = sub i50 %p_Result_29_3, %p_Result_30_3_s
  %tmp_1167 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %sqrt_int_2_2_v, i1 false)
  %tmp_1168 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_3, i32 25)
  %tmp_1169 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %sqrt_int_2_2_v, i1 true)
  %sqrt_int_2_3_v = select i1 %tmp_1168, i4 %tmp_1167, i4 %tmp_1169
  %p_0289_2_i_3 = select i1 %tmp_1168, i50 %p_Result_29_3, i50 %rem_next_V_3
  %tmp_1170 = trunc i50 %p_0289_2_i_3 to i24
  %tmp_15 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 39, i32 40)
  %tmp_16 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1170, i2 %tmp_15)
  %p_Result_29_4 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_3, i26 %tmp_16, i32 0, i32 25)
  %tmp_17 = zext i4 %sqrt_int_2_3_v to i23
  %p_Result_30_4_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_17, i2 1)
  %rem_next_V_4 = sub i50 %p_Result_29_4, %p_Result_30_4_s
  %tmp_1171 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %sqrt_int_2_3_v, i1 false)
  %tmp_1172 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_4, i32 25)
  %tmp_1173 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %sqrt_int_2_3_v, i1 true)
  %sqrt_int_2_4_v = select i1 %tmp_1172, i5 %tmp_1171, i5 %tmp_1173
  %p_0289_2_i_4 = select i1 %tmp_1172, i50 %p_Result_29_4, i50 %rem_next_V_4
  %tmp_1174 = trunc i50 %p_0289_2_i_4 to i24
  %tmp_20 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 37, i32 38)
  %tmp_21 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1174, i2 %tmp_20)
  %p_Result_29_5 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_4, i26 %tmp_21, i32 0, i32 25)
  %tmp_1175 = zext i5 %sqrt_int_2_4_v to i23
  %p_Result_30_5_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1175, i2 1)
  %rem_next_V_5 = sub i50 %p_Result_29_5, %p_Result_30_5_s
  %tmp_1176 = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %sqrt_int_2_4_v, i1 false)
  %tmp_1177 = zext i6 %tmp_1176 to i25
  %tmp_1178 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_5, i32 25)
  %tmp_1179 = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %sqrt_int_2_4_v, i1 true)
  %p_Result_33_5 = zext i6 %tmp_1179 to i25
  %sqrt_int_2_5 = select i1 %tmp_1178, i25 %tmp_1177, i25 %p_Result_33_5
  %p_0289_2_i_5 = select i1 %tmp_1178, i50 %p_Result_29_5, i50 %rem_next_V_5
  %tmp_1180 = trunc i50 %p_0289_2_i_5 to i24
  %tmp_25 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 35, i32 36)
  %tmp_26 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1180, i2 %tmp_25)
  %p_Result_29_6 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_5, i26 %tmp_26, i32 0, i32 25)
  %tmp_1181 = trunc i25 %sqrt_int_2_5 to i23
  %p_Result_30_6_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1181, i2 1)
  %rem_next_V_6 = sub i50 %p_Result_29_6, %p_Result_30_6_s
  %tmp_1182 = trunc i25 %sqrt_int_2_5 to i24
  %tmp_1183 = shl i25 %sqrt_int_2_5, 1
  %tmp_1184 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_6, i32 25)
  %p_Result_33_6 = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1182, i1 true)
  %sqrt_int_2_6 = select i1 %tmp_1184, i25 %tmp_1183, i25 %p_Result_33_6
  %p_0289_2_i_6 = select i1 %tmp_1184, i50 %p_Result_29_6, i50 %rem_next_V_6
  %tmp_1185 = trunc i50 %p_0289_2_i_6 to i24
  %tmp_30 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 33, i32 34)
  %tmp_31 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1185, i2 %tmp_30)
  %p_Result_29_7 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_6, i26 %tmp_31, i32 0, i32 25)
  %tmp_1186 = trunc i25 %sqrt_int_2_6 to i23
  %p_Result_30_7_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1186, i2 1)
  %rem_next_V_7 = sub i50 %p_Result_29_7, %p_Result_30_7_s
  %tmp_1187 = trunc i25 %sqrt_int_2_6 to i24
  %tmp_1188 = shl i25 %sqrt_int_2_6, 1
  %tmp_1189 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_7, i32 25)
  %p_Result_33_7 = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1187, i1 true)
  %sqrt_int_2_7 = select i1 %tmp_1189, i25 %tmp_1188, i25 %p_Result_33_7
  %p_0289_2_i_7 = select i1 %tmp_1189, i50 %p_Result_29_7, i50 %rem_next_V_7
  %tmp_1190 = trunc i50 %p_0289_2_i_7 to i24
  %tmp_35 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 31, i32 32)
  %tmp_36 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1190, i2 %tmp_35)
  %p_Result_29_8 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_7, i26 %tmp_36, i32 0, i32 25)
  %tmp_1191 = trunc i25 %sqrt_int_2_7 to i23
  %p_Result_30_8_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1191, i2 1)
  %rem_next_V_8 = sub i50 %p_Result_29_8, %p_Result_30_8_s
  %tmp_1192 = trunc i25 %sqrt_int_2_7 to i24
  %tmp_1193 = shl i25 %sqrt_int_2_7, 1
  %tmp_1194 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_8, i32 25)
  %p_Result_33_8 = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1192, i1 true)
  %sqrt_int_2_8 = select i1 %tmp_1194, i25 %tmp_1193, i25 %p_Result_33_8
  %p_0289_2_i_8 = select i1 %tmp_1194, i50 %p_Result_29_8, i50 %rem_next_V_8
  %tmp_1195 = trunc i50 %p_0289_2_i_8 to i24
  %tmp_40 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 29, i32 30)
  %tmp_41 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1195, i2 %tmp_40)
  %p_Result_29_9 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_8, i26 %tmp_41, i32 0, i32 25)
  %tmp_1196 = trunc i25 %sqrt_int_2_8 to i23
  %p_Result_30_9_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1196, i2 1)
  %rem_next_V_9 = sub i50 %p_Result_29_9, %p_Result_30_9_s
  %tmp_1197 = trunc i25 %sqrt_int_2_8 to i24
  %tmp_1198 = shl i25 %sqrt_int_2_8, 1
  %tmp_1199 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_9, i32 25)
  %p_Result_33_9 = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1197, i1 true)
  %sqrt_int_2_9 = select i1 %tmp_1199, i25 %tmp_1198, i25 %p_Result_33_9
  %p_0289_2_i_9 = select i1 %tmp_1199, i50 %p_Result_29_9, i50 %rem_next_V_9
  %tmp_1200 = trunc i50 %p_0289_2_i_9 to i24
  %tmp_45 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 27, i32 28)
  %tmp_46 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1200, i2 %tmp_45)
  %p_Result_29_s = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_9, i26 %tmp_46, i32 0, i32 25)
  %tmp_1201 = trunc i25 %sqrt_int_2_9 to i23
  %p_Result_30_10_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1201, i2 1)
  %rem_next_V_s = sub i50 %p_Result_29_s, %p_Result_30_10_s
  %tmp_1202 = trunc i25 %sqrt_int_2_9 to i24
  %tmp_1203 = shl i25 %sqrt_int_2_9, 1
  %tmp_1204 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_s, i32 25)
  %p_Result_33_s = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1202, i1 true)
  %sqrt_int_2_s = select i1 %tmp_1204, i25 %tmp_1203, i25 %p_Result_33_s
  %p_0289_2_i_s = select i1 %tmp_1204, i50 %p_Result_29_s, i50 %rem_next_V_s
  %tmp_1205 = trunc i50 %p_0289_2_i_s to i24
  %tmp_50 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 25, i32 26)
  %tmp_51 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1205, i2 %tmp_50)
  %p_Result_29_10 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_s, i26 %tmp_51, i32 0, i32 25)
  %tmp_1206 = trunc i25 %sqrt_int_2_s to i23
  %p_Result_30_11_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1206, i2 1)
  %rem_next_V_10 = sub i50 %p_Result_29_10, %p_Result_30_11_s
  %tmp_1207 = trunc i25 %sqrt_int_2_s to i24
  %tmp_1208 = shl i25 %sqrt_int_2_s, 1
  %tmp_1209 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_10, i32 25)
  %p_Result_33_1 = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1207, i1 true)
  %sqrt_int_2_1 = select i1 %tmp_1209, i25 %tmp_1208, i25 %p_Result_33_1
  %p_0289_2_i_10 = select i1 %tmp_1209, i50 %p_Result_29_10, i50 %rem_next_V_10
  %tmp_1210 = trunc i50 %p_0289_2_i_10 to i24
  %tmp_55 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 23, i32 24)
  %tmp_56 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1210, i2 %tmp_55)
  %p_Result_29_11 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_10, i26 %tmp_56, i32 0, i32 25)
  %tmp_1211 = trunc i25 %sqrt_int_2_1 to i23
  %p_Result_30_12_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1211, i2 1)
  %rem_next_V_11 = sub i50 %p_Result_29_11, %p_Result_30_12_s
  %tmp_1212 = trunc i25 %sqrt_int_2_1 to i24
  %tmp_1213 = shl i25 %sqrt_int_2_1, 1
  %tmp_1214 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_11, i32 25)
  %p_Result_33_2 = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1212, i1 true)
  %sqrt_int_2_2 = select i1 %tmp_1214, i25 %tmp_1213, i25 %p_Result_33_2
  %p_0289_2_i_11 = select i1 %tmp_1214, i50 %p_Result_29_11, i50 %rem_next_V_11
  %tmp_1215 = trunc i50 %p_0289_2_i_11 to i24
  %tmp_60 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 21, i32 22)
  %tmp_61 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1215, i2 %tmp_60)
  %p_Result_29_12 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_11, i26 %tmp_61, i32 0, i32 25)
  %tmp_1216 = trunc i25 %sqrt_int_2_2 to i23
  %p_Result_30_13_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1216, i2 1)
  %rem_next_V_12 = sub i50 %p_Result_29_12, %p_Result_30_13_s
  %tmp_1217 = trunc i25 %sqrt_int_2_2 to i24
  %tmp_1218 = shl i25 %sqrt_int_2_2, 1
  %tmp_1219 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_12, i32 25)
  %p_Result_33_3 = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1217, i1 true)
  %sqrt_int_2_3 = select i1 %tmp_1219, i25 %tmp_1218, i25 %p_Result_33_3
  %p_0289_2_i_12 = select i1 %tmp_1219, i50 %p_Result_29_12, i50 %rem_next_V_12
  %tmp_1220 = trunc i50 %p_0289_2_i_12 to i24
  %tmp_65 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 19, i32 20)
  %tmp_66 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1220, i2 %tmp_65)
  %p_Result_29_13 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_12, i26 %tmp_66, i32 0, i32 25)
  %tmp_1221 = trunc i25 %sqrt_int_2_3 to i23
  %p_Result_30_14_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1221, i2 1)
  %rem_next_V_13 = sub i50 %p_Result_29_13, %p_Result_30_14_s
  %tmp_1222 = trunc i25 %sqrt_int_2_3 to i24
  %tmp_1223 = shl i25 %sqrt_int_2_3, 1
  %tmp_1224 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_13, i32 25)
  %p_Result_33_4 = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1222, i1 true)
  %sqrt_int_2_4 = select i1 %tmp_1224, i25 %tmp_1223, i25 %p_Result_33_4
  %p_0289_2_i_13 = select i1 %tmp_1224, i50 %p_Result_29_13, i50 %rem_next_V_13
  %tmp_1225 = trunc i50 %p_0289_2_i_13 to i24
  %tmp_70 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 17, i32 18)
  %tmp_71 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1225, i2 %tmp_70)
  %p_Result_29_14 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_13, i26 %tmp_71, i32 0, i32 25)
  %tmp_1226 = trunc i25 %sqrt_int_2_4 to i23
  %p_Result_30_15_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1226, i2 1)
  %rem_next_V_14 = sub i50 %p_Result_29_14, %p_Result_30_15_s
  %tmp_1227 = trunc i25 %sqrt_int_2_4 to i24
  %tmp_1228 = shl i25 %sqrt_int_2_4, 1
  %tmp_1229 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_14, i32 25)
  %p_Result_33_10 = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1227, i1 true)
  %sqrt_int_2_10 = select i1 %tmp_1229, i25 %tmp_1228, i25 %p_Result_33_10
  %p_0289_2_i_14 = select i1 %tmp_1229, i50 %p_Result_29_14, i50 %rem_next_V_14
  %tmp_1230 = trunc i50 %p_0289_2_i_14 to i24
  %tmp_75 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 15, i32 16)
  %tmp_76 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1230, i2 %tmp_75)
  %p_Result_29_15 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_14, i26 %tmp_76, i32 0, i32 25)
  %tmp_1231 = trunc i25 %sqrt_int_2_10 to i23
  %p_Result_30_16_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1231, i2 1)
  %rem_next_V_15 = sub i50 %p_Result_29_15, %p_Result_30_16_s
  %tmp_1232 = trunc i25 %sqrt_int_2_10 to i24
  %tmp_1233 = shl i25 %sqrt_int_2_10, 1
  %tmp_1234 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_15, i32 25)
  %p_Result_33_11 = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1232, i1 true)
  %sqrt_int_2_11 = select i1 %tmp_1234, i25 %tmp_1233, i25 %p_Result_33_11
  %p_0289_2_i_15 = select i1 %tmp_1234, i50 %p_Result_29_15, i50 %rem_next_V_15
  %tmp_1235 = trunc i50 %p_0289_2_i_15 to i24
  %tmp_80 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 13, i32 14)
  %tmp_81 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1235, i2 %tmp_80)
  %p_Result_29_16 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_15, i26 %tmp_81, i32 0, i32 25)
  %tmp_1236 = trunc i25 %sqrt_int_2_11 to i23
  %p_Result_30_17_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1236, i2 1)
  %rem_next_V_16 = sub i50 %p_Result_29_16, %p_Result_30_17_s
  %tmp_1237 = trunc i25 %sqrt_int_2_11 to i24
  %tmp_1238 = shl i25 %sqrt_int_2_11, 1
  %tmp_1239 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_16, i32 25)
  %p_Result_33_12 = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1237, i1 true)
  %sqrt_int_2_12 = select i1 %tmp_1239, i25 %tmp_1238, i25 %p_Result_33_12
  %p_0289_2_i_16 = select i1 %tmp_1239, i50 %p_Result_29_16, i50 %rem_next_V_16
  %tmp_1240 = trunc i50 %p_0289_2_i_16 to i24
  %tmp_85 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 11, i32 12)
  %tmp_86 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1240, i2 %tmp_85)
  %p_Result_29_17 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_16, i26 %tmp_86, i32 0, i32 25)
  %tmp_1241 = trunc i25 %sqrt_int_2_12 to i23
  %p_Result_30_18_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1241, i2 1)
  %rem_next_V_17 = sub i50 %p_Result_29_17, %p_Result_30_18_s
  %tmp_1242 = trunc i25 %sqrt_int_2_12 to i24
  %tmp_1243 = shl i25 %sqrt_int_2_12, 1
  %tmp_1244 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_17, i32 25)
  %p_Result_33_13 = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1242, i1 true)
  %sqrt_int_2_13 = select i1 %tmp_1244, i25 %tmp_1243, i25 %p_Result_33_13
  %p_0289_2_i_17 = select i1 %tmp_1244, i50 %p_Result_29_17, i50 %rem_next_V_17
  %tmp_1245 = trunc i50 %p_0289_2_i_17 to i24
  %tmp_90 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 9, i32 10)
  %tmp_91 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1245, i2 %tmp_90)
  %p_Result_29_18 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_17, i26 %tmp_91, i32 0, i32 25)
  %tmp_1246 = trunc i25 %sqrt_int_2_13 to i23
  %p_Result_30_19_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1246, i2 1)
  %rem_next_V_18 = sub i50 %p_Result_29_18, %p_Result_30_19_s
  %tmp_1247 = trunc i25 %sqrt_int_2_13 to i24
  %tmp_1248 = shl i25 %sqrt_int_2_13, 1
  %tmp_1249 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_18, i32 25)
  %p_Result_33_14 = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1247, i1 true)
  %sqrt_int_2_14 = select i1 %tmp_1249, i25 %tmp_1248, i25 %p_Result_33_14
  %p_0289_2_i_18 = select i1 %tmp_1249, i50 %p_Result_29_18, i50 %rem_next_V_18
  %tmp_1250 = trunc i50 %p_0289_2_i_18 to i24
  %tmp_95 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 7, i32 8)
  %tmp_96 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1250, i2 %tmp_95)
  %p_Result_29_19 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_18, i26 %tmp_96, i32 0, i32 25)
  %tmp_1251 = trunc i25 %sqrt_int_2_14 to i23
  %p_Result_30_20_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1251, i2 1)
  %rem_next_V_19 = sub i50 %p_Result_29_19, %p_Result_30_20_s
  %tmp_1252 = trunc i25 %sqrt_int_2_14 to i24
  %tmp_1253 = shl i25 %sqrt_int_2_14, 1
  %tmp_1254 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_19, i32 25)
  %p_Result_33_15 = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1252, i1 true)
  %sqrt_int_2_15 = select i1 %tmp_1254, i25 %tmp_1253, i25 %p_Result_33_15
  %p_0289_2_i_19 = select i1 %tmp_1254, i50 %p_Result_29_19, i50 %rem_next_V_19
  %tmp_1255 = trunc i50 %p_0289_2_i_19 to i24
  %tmp_100 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 5, i32 6)
  %tmp_101 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1255, i2 %tmp_100)
  %p_Result_29_20 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_19, i26 %tmp_101, i32 0, i32 25)
  %tmp_1256 = trunc i25 %sqrt_int_2_15 to i23
  %p_Result_30_21_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1256, i2 1)
  %rem_next_V_20 = sub i50 %p_Result_29_20, %p_Result_30_21_s
  %tmp_1257 = trunc i25 %sqrt_int_2_15 to i24
  %tmp_1258 = shl i25 %sqrt_int_2_15, 1
  %tmp_1259 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_20, i32 25)
  %p_Result_33_16 = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1257, i1 true)
  %sqrt_int_2_16 = select i1 %tmp_1259, i25 %tmp_1258, i25 %p_Result_33_16
  %p_0289_2_i_20 = select i1 %tmp_1259, i50 %p_Result_29_20, i50 %rem_next_V_20
  %tmp_1260 = trunc i50 %p_0289_2_i_20 to i24
  %tmp_105 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 3, i32 4)
  %tmp_106 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1260, i2 %tmp_105)
  %p_Result_29_21 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_20, i26 %tmp_106, i32 0, i32 25)
  %tmp_1261 = trunc i25 %sqrt_int_2_16 to i23
  %p_Result_30_22_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1261, i2 1)
  %rem_next_V_21 = sub i50 %p_Result_29_21, %p_Result_30_22_s
  %tmp_1262 = trunc i25 %sqrt_int_2_16 to i24
  %tmp_1263 = shl i25 %sqrt_int_2_16, 1
  %tmp_1264 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_21, i32 25)
  %p_Result_33_17 = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1262, i1 true)
  %sqrt_int_2_17 = select i1 %tmp_1264, i25 %tmp_1263, i25 %p_Result_33_17
  %p_0289_2_i_21 = select i1 %tmp_1264, i50 %p_Result_29_21, i50 %rem_next_V_21
  %tmp_1265 = trunc i50 %p_0289_2_i_21 to i24
  %tmp_110 = call i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48 %inputData_in_V_read_1, i32 1, i32 2)
  %tmp_111 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24 %tmp_1265, i2 %tmp_110)
  %p_Result_29_22 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_21, i26 %tmp_111, i32 0, i32 25)
  %tmp_1266 = trunc i25 %sqrt_int_2_17 to i23
  %p_Result_30_23_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1266, i2 1)
  %rem_next_V_22 = sub i50 %p_Result_29_22, %p_Result_30_23_s
  %tmp_1267 = trunc i25 %sqrt_int_2_17 to i24
  %tmp_1268 = shl i25 %sqrt_int_2_17, 1
  %tmp_1269 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_22, i32 25)
  %p_Result_33_18 = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1267, i1 true)
  %sqrt_int_2_18 = select i1 %tmp_1269, i25 %tmp_1268, i25 %p_Result_33_18
  %p_0289_2_i_22 = select i1 %tmp_1269, i50 %p_Result_29_22, i50 %rem_next_V_22
  %tmp_1270 = trunc i50 %p_0289_2_i_22 to i24
  %tmp_115 = call i26 @_ssdm_op_BitConcatenate.i26.i24.i1.i1(i24 %tmp_1270, i1 %tmp_1160, i1 false)
  %p_Result_29_23 = call i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50 %p_0289_2_i_22, i26 %tmp_115, i32 0, i32 25)
  %tmp_1271 = trunc i25 %sqrt_int_2_18 to i23
  %p_Result_30_24_s = call i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25 0, i23 %tmp_1271, i2 1)
  %rem_next_V_23 = sub i50 %p_Result_29_23, %p_Result_30_24_s
  %tmp_1272 = trunc i25 %sqrt_int_2_18 to i24
  %tmp_1273 = shl i25 %sqrt_int_2_18, 1
  %tmp_1274 = call i1 @_ssdm_op_BitSelect.i1.i50.i32(i50 %rem_next_V_23, i32 25)
  %p_Result_33_19 = call i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24 %tmp_1272, i1 true)
  %p_Val2_s = select i1 %tmp_1274, i25 %tmp_1273, i25 %p_Result_33_19
  ret i25 %p_Val2_s
}

define void @astroSim([9 x i270]* %result) {
ap_fixed_base.exit:
  call void (...)* @_ssdm_op_SpecBitsMap([9 x i270]* %result), !map !795
  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @astroSim_str) nounwind
  br label %0

; <label>:0                                       ; preds = %branch18_ifconv, %ap_fixed_base.exit
  %p_int_z_V_8 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_z_V_8_1, %branch18_ifconv ]
  %p_int_z_V_7 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_z_V_7_1, %branch18_ifconv ]
  %p_int_z_V_6 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_z_V_6_1, %branch18_ifconv ]
  %p_int_z_V_5 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_z_V_5_1, %branch18_ifconv ]
  %p_int_z_V_4 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_z_V_4_1, %branch18_ifconv ]
  %p_int_z_V_3 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_z_V_3_1, %branch18_ifconv ]
  %p_int_z_V_2 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_z_V_2_1, %branch18_ifconv ]
  %p_int_z_V_1 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_z_V_1_1, %branch18_ifconv ]
  %p_int_z_V = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_z_V_0_1, %branch18_ifconv ]
  %p_int_y_V_8 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_y_V_8_1, %branch18_ifconv ]
  %p_int_y_V_7 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_y_V_7_1, %branch18_ifconv ]
  %p_int_y_V_6 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_y_V_6_1, %branch18_ifconv ]
  %p_int_y_V_5 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_y_V_5_1, %branch18_ifconv ]
  %p_int_y_V_4 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_y_V_4_1, %branch18_ifconv ]
  %p_int_y_V_3 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_y_V_3_1, %branch18_ifconv ]
  %p_int_y_V_2 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_y_V_2_1, %branch18_ifconv ]
  %p_int_y_V_1 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_y_V_1_1, %branch18_ifconv ]
  %p_int_y_V = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_y_V_0_1, %branch18_ifconv ]
  %p_int_x_V_8 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_x_V_8_1, %branch18_ifconv ]
  %p_int_x_V_7 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_x_V_7_1, %branch18_ifconv ]
  %p_int_x_V_5 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_x_V_5_1, %branch18_ifconv ]
  %p_int_x_V_4 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_x_V_4_1, %branch18_ifconv ]
  %p_int_x_V_2 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_x_V_2_1, %branch18_ifconv ]
  %p_int_x_V_1 = phi i27 [ undef, %ap_fixed_base.exit ], [ %p_int_x_V_1_1, %branch18_ifconv ]
  %i_0_i = phi i4 [ 0, %ap_fixed_base.exit ], [ %i_2, %branch18_ifconv ]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)
  %tmp = icmp eq i4 %i_0_i, -7
  br i1 %tmp, label %to_int.exit.0.preheader, label %branch18_ifconv

to_int.exit.0.preheader:                          ; preds = %0
  br label %to_int.exit.0

branch18_ifconv:                                  ; preds = %0
  %p_int_y_V_0_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 0, i27 %p_int_y_V, i27 %p_int_y_V, i27 %p_int_y_V, i27 %p_int_y_V, i27 %p_int_y_V, i27 %p_int_y_V, i27 %p_int_y_V, i27 %p_int_y_V, i27 %p_int_y_V, i27 %p_int_y_V, i27 %p_int_y_V, i27 %p_int_y_V, i27 %p_int_y_V, i27 %p_int_y_V, i27 %p_int_y_V, i4 %i_0_i)
  %p_int_y_V_3_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 %p_int_y_V_3, i27 %p_int_y_V_3, i27 %p_int_y_V_3, i27 0, i27 %p_int_y_V_3, i27 %p_int_y_V_3, i27 %p_int_y_V_3, i27 %p_int_y_V_3, i27 %p_int_y_V_3, i27 %p_int_y_V_3, i27 %p_int_y_V_3, i27 %p_int_y_V_3, i27 %p_int_y_V_3, i27 %p_int_y_V_3, i27 %p_int_y_V_3, i27 %p_int_y_V_3, i4 %i_0_i)
  %p_int_y_V_6_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 %p_int_y_V_6, i27 0, i27 0, i27 %p_int_y_V_6, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i4 %i_0_i)
  %p_int_z_V_0_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 0, i27 %p_int_z_V, i27 %p_int_z_V, i27 %p_int_z_V, i27 %p_int_z_V, i27 %p_int_z_V, i27 %p_int_z_V, i27 %p_int_z_V, i27 %p_int_z_V, i27 %p_int_z_V, i27 %p_int_z_V, i27 %p_int_z_V, i27 %p_int_z_V, i27 %p_int_z_V, i27 %p_int_z_V, i27 %p_int_z_V, i4 %i_0_i)
  %p_int_z_V_3_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 %p_int_z_V_3, i27 %p_int_z_V_3, i27 %p_int_z_V_3, i27 0, i27 %p_int_z_V_3, i27 %p_int_z_V_3, i27 %p_int_z_V_3, i27 %p_int_z_V_3, i27 %p_int_z_V_3, i27 %p_int_z_V_3, i27 %p_int_z_V_3, i27 %p_int_z_V_3, i27 %p_int_z_V_3, i27 %p_int_z_V_3, i27 %p_int_z_V_3, i27 %p_int_z_V_3, i4 %i_0_i)
  %p_int_z_V_6_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 %p_int_z_V_6, i27 0, i27 0, i27 %p_int_z_V_6, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i4 %i_0_i)
  %i_0_t = add i4 %i_0_i, 1
  %p_int_x_V_1_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 %p_int_x_V_1, i27 0, i27 %p_int_x_V_1, i27 %p_int_x_V_1, i27 %p_int_x_V_1, i27 %p_int_x_V_1, i27 %p_int_x_V_1, i27 %p_int_x_V_1, i27 %p_int_x_V_1, i27 %p_int_x_V_1, i27 %p_int_x_V_1, i27 %p_int_x_V_1, i27 %p_int_x_V_1, i27 %p_int_x_V_1, i27 %p_int_x_V_1, i27 %p_int_x_V_1, i4 %i_0_t)
  %p_int_x_V_4_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 %p_int_x_V_4, i27 %p_int_x_V_4, i27 %p_int_x_V_4, i27 %p_int_x_V_4, i27 0, i27 %p_int_x_V_4, i27 %p_int_x_V_4, i27 %p_int_x_V_4, i27 %p_int_x_V_4, i27 %p_int_x_V_4, i27 %p_int_x_V_4, i27 %p_int_x_V_4, i27 %p_int_x_V_4, i27 %p_int_x_V_4, i27 %p_int_x_V_4, i27 %p_int_x_V_4, i4 %i_0_t)
  %p_int_x_V_7_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 0, i27 %p_int_x_V_7, i27 0, i27 0, i27 %p_int_x_V_7, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i4 %i_0_t)
  %p_int_y_V_1_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 %p_int_y_V_1, i27 0, i27 %p_int_y_V_1, i27 %p_int_y_V_1, i27 %p_int_y_V_1, i27 %p_int_y_V_1, i27 %p_int_y_V_1, i27 %p_int_y_V_1, i27 %p_int_y_V_1, i27 %p_int_y_V_1, i27 %p_int_y_V_1, i27 %p_int_y_V_1, i27 %p_int_y_V_1, i27 %p_int_y_V_1, i27 %p_int_y_V_1, i27 %p_int_y_V_1, i4 %i_0_t)
  %p_int_y_V_4_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 %p_int_y_V_4, i27 %p_int_y_V_4, i27 %p_int_y_V_4, i27 %p_int_y_V_4, i27 0, i27 %p_int_y_V_4, i27 %p_int_y_V_4, i27 %p_int_y_V_4, i27 %p_int_y_V_4, i27 %p_int_y_V_4, i27 %p_int_y_V_4, i27 %p_int_y_V_4, i27 %p_int_y_V_4, i27 %p_int_y_V_4, i27 %p_int_y_V_4, i27 %p_int_y_V_4, i4 %i_0_t)
  %p_int_y_V_7_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 0, i27 %p_int_y_V_7, i27 0, i27 0, i27 %p_int_y_V_7, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i4 %i_0_t)
  %p_int_z_V_1_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 %p_int_z_V_1, i27 0, i27 %p_int_z_V_1, i27 %p_int_z_V_1, i27 %p_int_z_V_1, i27 %p_int_z_V_1, i27 %p_int_z_V_1, i27 %p_int_z_V_1, i27 %p_int_z_V_1, i27 %p_int_z_V_1, i27 %p_int_z_V_1, i27 %p_int_z_V_1, i27 %p_int_z_V_1, i27 %p_int_z_V_1, i27 %p_int_z_V_1, i27 %p_int_z_V_1, i4 %i_0_t)
  %p_int_z_V_4_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 %p_int_z_V_4, i27 %p_int_z_V_4, i27 %p_int_z_V_4, i27 %p_int_z_V_4, i27 0, i27 %p_int_z_V_4, i27 %p_int_z_V_4, i27 %p_int_z_V_4, i27 %p_int_z_V_4, i27 %p_int_z_V_4, i27 %p_int_z_V_4, i27 %p_int_z_V_4, i27 %p_int_z_V_4, i27 %p_int_z_V_4, i27 %p_int_z_V_4, i27 %p_int_z_V_4, i4 %i_0_t)
  %p_int_z_V_7_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 0, i27 %p_int_z_V_7, i27 0, i27 0, i27 %p_int_z_V_7, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i4 %i_0_t)
  %i_1_t = add i4 %i_0_i, 2
  %p_int_x_V_2_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 %p_int_x_V_2, i27 %p_int_x_V_2, i27 0, i27 %p_int_x_V_2, i27 %p_int_x_V_2, i27 %p_int_x_V_2, i27 %p_int_x_V_2, i27 %p_int_x_V_2, i27 %p_int_x_V_2, i27 %p_int_x_V_2, i27 %p_int_x_V_2, i27 %p_int_x_V_2, i27 %p_int_x_V_2, i27 %p_int_x_V_2, i27 %p_int_x_V_2, i27 %p_int_x_V_2, i4 %i_1_t)
  %p_int_x_V_5_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 %p_int_x_V_5, i27 %p_int_x_V_5, i27 %p_int_x_V_5, i27 %p_int_x_V_5, i27 %p_int_x_V_5, i27 0, i27 %p_int_x_V_5, i27 %p_int_x_V_5, i27 %p_int_x_V_5, i27 %p_int_x_V_5, i27 %p_int_x_V_5, i27 %p_int_x_V_5, i27 %p_int_x_V_5, i27 %p_int_x_V_5, i27 %p_int_x_V_5, i27 %p_int_x_V_5, i4 %i_1_t)
  %p_int_x_V_8_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 0, i27 0, i27 %p_int_x_V_8, i27 0, i27 0, i27 %p_int_x_V_8, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i4 %i_1_t)
  %p_int_y_V_2_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 %p_int_y_V_2, i27 %p_int_y_V_2, i27 0, i27 %p_int_y_V_2, i27 %p_int_y_V_2, i27 %p_int_y_V_2, i27 %p_int_y_V_2, i27 %p_int_y_V_2, i27 %p_int_y_V_2, i27 %p_int_y_V_2, i27 %p_int_y_V_2, i27 %p_int_y_V_2, i27 %p_int_y_V_2, i27 %p_int_y_V_2, i27 %p_int_y_V_2, i27 %p_int_y_V_2, i4 %i_1_t)
  %p_int_y_V_5_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 %p_int_y_V_5, i27 %p_int_y_V_5, i27 %p_int_y_V_5, i27 %p_int_y_V_5, i27 %p_int_y_V_5, i27 0, i27 %p_int_y_V_5, i27 %p_int_y_V_5, i27 %p_int_y_V_5, i27 %p_int_y_V_5, i27 %p_int_y_V_5, i27 %p_int_y_V_5, i27 %p_int_y_V_5, i27 %p_int_y_V_5, i27 %p_int_y_V_5, i27 %p_int_y_V_5, i4 %i_1_t)
  %p_int_y_V_8_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 0, i27 0, i27 %p_int_y_V_8, i27 0, i27 0, i27 %p_int_y_V_8, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i4 %i_1_t)
  %p_int_z_V_2_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 %p_int_z_V_2, i27 %p_int_z_V_2, i27 0, i27 %p_int_z_V_2, i27 %p_int_z_V_2, i27 %p_int_z_V_2, i27 %p_int_z_V_2, i27 %p_int_z_V_2, i27 %p_int_z_V_2, i27 %p_int_z_V_2, i27 %p_int_z_V_2, i27 %p_int_z_V_2, i27 %p_int_z_V_2, i27 %p_int_z_V_2, i27 %p_int_z_V_2, i27 %p_int_z_V_2, i4 %i_1_t)
  %p_int_z_V_5_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 %p_int_z_V_5, i27 %p_int_z_V_5, i27 %p_int_z_V_5, i27 %p_int_z_V_5, i27 %p_int_z_V_5, i27 0, i27 %p_int_z_V_5, i27 %p_int_z_V_5, i27 %p_int_z_V_5, i27 %p_int_z_V_5, i27 %p_int_z_V_5, i27 %p_int_z_V_5, i27 %p_int_z_V_5, i27 %p_int_z_V_5, i27 %p_int_z_V_5, i27 %p_int_z_V_5, i4 %i_1_t)
  %p_int_z_V_8_1 = call i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27 0, i27 0, i27 %p_int_z_V_8, i27 0, i27 0, i27 %p_int_z_V_8, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i27 0, i4 %i_1_t)
  %i_2 = add i4 %i_0_i, 3
  br label %0

to_int.exit.0:                                    ; preds = %to_int.exit.0.preheader, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0
  %p_int_z_V_8_2 = phi i27 [ %p_int_8_z_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_z_V_8, %to_int.exit.0.preheader ]
  %p_int_z_V_7_2 = phi i27 [ %p_int_7_z_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_z_V_7, %to_int.exit.0.preheader ]
  %p_int_z_V_6_2 = phi i27 [ %p_int_6_z_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_z_V_6, %to_int.exit.0.preheader ]
  %p_int_z_V_5_2 = phi i27 [ %p_int_5_z_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_z_V_5, %to_int.exit.0.preheader ]
  %p_int_z_V_4_2 = phi i27 [ %p_int_4_z_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_z_V_4, %to_int.exit.0.preheader ]
  %p_int_z_V_3_2 = phi i27 [ %p_int_3_z_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_z_V_3, %to_int.exit.0.preheader ]
  %p_int_z_V_2_2 = phi i27 [ %p_int_2_z_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_z_V_2, %to_int.exit.0.preheader ]
  %p_int_z_V_1_2 = phi i27 [ %p_int_1_z_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_z_V_1, %to_int.exit.0.preheader ]
  %p_int_z_V_0_2 = phi i27 [ %p_int_0_z_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_z_V, %to_int.exit.0.preheader ]
  %p_int_y_V_8_2 = phi i27 [ %p_int_8_y_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_y_V_8, %to_int.exit.0.preheader ]
  %p_int_y_V_7_2 = phi i27 [ %p_int_7_y_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_y_V_7, %to_int.exit.0.preheader ]
  %p_int_y_V_6_2 = phi i27 [ %p_int_6_y_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_y_V_6, %to_int.exit.0.preheader ]
  %p_int_y_V_5_2 = phi i27 [ %p_int_5_y_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_y_V_5, %to_int.exit.0.preheader ]
  %p_int_y_V_4_2 = phi i27 [ %p_int_4_y_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_y_V_4, %to_int.exit.0.preheader ]
  %p_int_y_V_3_2 = phi i27 [ %p_int_3_y_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_y_V_3, %to_int.exit.0.preheader ]
  %p_int_y_V_2_2 = phi i27 [ %p_int_2_y_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_y_V_2, %to_int.exit.0.preheader ]
  %p_int_y_V_1_2 = phi i27 [ %p_int_1_y_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_y_V_1, %to_int.exit.0.preheader ]
  %p_int_y_V_0_2 = phi i27 [ %p_int_0_y_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_y_V, %to_int.exit.0.preheader ]
  %p_int_x_V_8_2 = phi i27 [ %p_int_8_x_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_x_V_8, %to_int.exit.0.preheader ]
  %p_int_x_V_7_2 = phi i27 [ %p_int_7_x_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_x_V_7, %to_int.exit.0.preheader ]
  %p_int_x_V_6_2 = phi i27 [ %p_int_6_x_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ 0, %to_int.exit.0.preheader ]
  %p_int_x_V_5_2 = phi i27 [ %p_int_5_x_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_x_V_5, %to_int.exit.0.preheader ]
  %p_int_x_V_4_2 = phi i27 [ %p_int_4_x_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_x_V_4, %to_int.exit.0.preheader ]
  %p_int_x_V_3_2 = phi i27 [ %p_int_3_x_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ 0, %to_int.exit.0.preheader ]
  %p_int_x_V_2_2 = phi i27 [ %p_int_2_x_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_x_V_2, %to_int.exit.0.preheader ]
  %p_int_x_V_1_2 = phi i27 [ %p_int_1_x_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ %p_int_x_V_1, %to_int.exit.0.preheader ]
  %p_int_x_V_0_2 = phi i27 [ %p_int_0_x_V_19, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ 0, %to_int.exit.0.preheader ]
  %t = phi i13 [ %t_1_9, %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0 ], [ 0, %to_int.exit.0.preheader ]
  %exitcond3_4 = icmp eq i13 %t, -1912
  br i1 %exitcond3_4, label %.preheader.preheader, label %_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0

.preheader.preheader:                             ; preds = %to_int.exit.0
  br label %.preheader

_ZNK13ap_fixed_baseILi63ELi33ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEcvlEv.exit.i.i.4.0: ; preds = %to_int.exit.0
  call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str273) nounwind
  %tmp_188 = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str273)
  call void (...)* @_ssdm_op_SpecPipeline(i32 258, i32 1, i32 1, i32 0, [1 x i8]* @p_str271) nounwind
  %drift_ret1 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_x_V_0_2, i27 %p_int_x_V_1_2, i27 %p_int_x_V_2_2, i27 %p_int_x_V_3_2, i27 %p_int_x_V_4_2, i27 %p_int_x_V_5_2, i27 %p_int_x_V_6_2, i27 %p_int_x_V_7_2, i27 %p_int_x_V_8_2, i27 %p_int_y_V_0_2, i27 %p_int_y_V_1_2, i27 %p_int_y_V_2_2, i27 %p_int_y_V_3_2, i27 %p_int_y_V_4_2, i27 %p_int_y_V_5_2, i27 %p_int_y_V_6_2, i27 %p_int_y_V_7_2, i27 %p_int_y_V_8_2, i27 %p_int_z_V_0_2, i27 %p_int_z_V_1_2, i27 %p_int_z_V_2_2, i27 %p_int_z_V_3_2, i27 %p_int_z_V_4_2, i27 %p_int_z_V_5_2, i27 %p_int_z_V_6_2, i27 %p_int_z_V_7_2, i27 %p_int_z_V_8_2)
  %p_int_0_x_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 0
  %p_int_1_x_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 1
  %p_int_2_x_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 2
  %p_int_3_x_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 3
  %p_int_4_x_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 4
  %p_int_5_x_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 5
  %p_int_6_x_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 6
  %p_int_7_x_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 7
  %p_int_8_x_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 8
  %p_int_0_y_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 9
  %p_int_1_y_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 10
  %p_int_2_y_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 11
  %p_int_3_y_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 12
  %p_int_4_y_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 13
  %p_int_5_y_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 14
  %p_int_6_y_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 15
  %p_int_7_y_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 16
  %p_int_8_y_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 17
  %p_int_0_z_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 18
  %p_int_1_z_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 19
  %p_int_2_z_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 20
  %p_int_3_z_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 21
  %p_int_4_z_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 22
  %p_int_5_z_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 23
  %p_int_6_z_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 24
  %p_int_7_z_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 25
  %p_int_8_z_V = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret1, 26
  call fastcc void @to_double()
  call fastcc void @gravity() nounwind
  %drift_ret2 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V, i27 %p_int_1_x_V, i27 %p_int_2_x_V, i27 %p_int_3_x_V, i27 %p_int_4_x_V, i27 %p_int_5_x_V, i27 %p_int_6_x_V, i27 %p_int_7_x_V, i27 %p_int_8_x_V, i27 %p_int_0_y_V, i27 %p_int_1_y_V, i27 %p_int_2_y_V, i27 %p_int_3_y_V, i27 %p_int_4_y_V, i27 %p_int_5_y_V, i27 %p_int_6_y_V, i27 %p_int_7_y_V, i27 %p_int_8_y_V, i27 %p_int_0_z_V, i27 %p_int_1_z_V, i27 %p_int_2_z_V, i27 %p_int_3_z_V, i27 %p_int_4_z_V, i27 %p_int_5_z_V, i27 %p_int_6_z_V, i27 %p_int_7_z_V, i27 %p_int_8_z_V)
  %p_int_0_x_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 0
  %p_int_1_x_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 1
  %p_int_2_x_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 2
  %p_int_3_x_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 3
  %p_int_4_x_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 4
  %p_int_5_x_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 5
  %p_int_6_x_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 6
  %p_int_7_x_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 7
  %p_int_8_x_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 8
  %p_int_0_y_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 9
  %p_int_1_y_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 10
  %p_int_2_y_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 11
  %p_int_3_y_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 12
  %p_int_4_y_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 13
  %p_int_5_y_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 14
  %p_int_6_y_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 15
  %p_int_7_y_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 16
  %p_int_8_y_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 17
  %p_int_0_z_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 18
  %p_int_1_z_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 19
  %p_int_2_z_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 20
  %p_int_3_z_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 21
  %p_int_4_z_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 22
  %p_int_5_z_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 23
  %p_int_6_z_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 24
  %p_int_7_z_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 25
  %p_int_8_z_V_1 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret2, 26
  call fastcc void @to_double()
  %empty_16 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str273, i32 %tmp_188)
  %drift_ret3 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_1, i27 %p_int_1_x_V_1, i27 %p_int_2_x_V_1, i27 %p_int_3_x_V_1, i27 %p_int_4_x_V_1, i27 %p_int_5_x_V_1, i27 %p_int_6_x_V_1, i27 %p_int_7_x_V_1, i27 %p_int_8_x_V_1, i27 %p_int_0_y_V_1, i27 %p_int_1_y_V_1, i27 %p_int_2_y_V_1, i27 %p_int_3_y_V_1, i27 %p_int_4_y_V_1, i27 %p_int_5_y_V_1, i27 %p_int_6_y_V_1, i27 %p_int_7_y_V_1, i27 %p_int_8_y_V_1, i27 %p_int_0_z_V_1, i27 %p_int_1_z_V_1, i27 %p_int_2_z_V_1, i27 %p_int_3_z_V_1, i27 %p_int_4_z_V_1, i27 %p_int_5_z_V_1, i27 %p_int_6_z_V_1, i27 %p_int_7_z_V_1, i27 %p_int_8_z_V_1)
  %p_int_0_x_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 0
  %p_int_1_x_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 1
  %p_int_2_x_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 2
  %p_int_3_x_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 3
  %p_int_4_x_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 4
  %p_int_5_x_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 5
  %p_int_6_x_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 6
  %p_int_7_x_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 7
  %p_int_8_x_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 8
  %p_int_0_y_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 9
  %p_int_1_y_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 10
  %p_int_2_y_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 11
  %p_int_3_y_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 12
  %p_int_4_y_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 13
  %p_int_5_y_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 14
  %p_int_6_y_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 15
  %p_int_7_y_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 16
  %p_int_8_y_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 17
  %p_int_0_z_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 18
  %p_int_1_z_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 19
  %p_int_2_z_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 20
  %p_int_3_z_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 21
  %p_int_4_z_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 22
  %p_int_5_z_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 23
  %p_int_6_z_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 24
  %p_int_7_z_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 25
  %p_int_8_z_V_2 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret3, 26
  call fastcc void @to_double()
  call fastcc void @gravity() nounwind
  %drift_ret4 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_2, i27 %p_int_1_x_V_2, i27 %p_int_2_x_V_2, i27 %p_int_3_x_V_2, i27 %p_int_4_x_V_2, i27 %p_int_5_x_V_2, i27 %p_int_6_x_V_2, i27 %p_int_7_x_V_2, i27 %p_int_8_x_V_2, i27 %p_int_0_y_V_2, i27 %p_int_1_y_V_2, i27 %p_int_2_y_V_2, i27 %p_int_3_y_V_2, i27 %p_int_4_y_V_2, i27 %p_int_5_y_V_2, i27 %p_int_6_y_V_2, i27 %p_int_7_y_V_2, i27 %p_int_8_y_V_2, i27 %p_int_0_z_V_2, i27 %p_int_1_z_V_2, i27 %p_int_2_z_V_2, i27 %p_int_3_z_V_2, i27 %p_int_4_z_V_2, i27 %p_int_5_z_V_2, i27 %p_int_6_z_V_2, i27 %p_int_7_z_V_2, i27 %p_int_8_z_V_2)
  %p_int_0_x_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 0
  %p_int_1_x_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 1
  %p_int_2_x_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 2
  %p_int_3_x_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 3
  %p_int_4_x_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 4
  %p_int_5_x_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 5
  %p_int_6_x_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 6
  %p_int_7_x_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 7
  %p_int_8_x_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 8
  %p_int_0_y_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 9
  %p_int_1_y_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 10
  %p_int_2_y_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 11
  %p_int_3_y_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 12
  %p_int_4_y_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 13
  %p_int_5_y_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 14
  %p_int_6_y_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 15
  %p_int_7_y_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 16
  %p_int_8_y_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 17
  %p_int_0_z_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 18
  %p_int_1_z_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 19
  %p_int_2_z_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 20
  %p_int_3_z_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 21
  %p_int_4_z_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 22
  %p_int_5_z_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 23
  %p_int_6_z_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 24
  %p_int_7_z_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 25
  %p_int_8_z_V_3 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret4, 26
  call fastcc void @to_double()
  %drift_ret5 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_3, i27 %p_int_1_x_V_3, i27 %p_int_2_x_V_3, i27 %p_int_3_x_V_3, i27 %p_int_4_x_V_3, i27 %p_int_5_x_V_3, i27 %p_int_6_x_V_3, i27 %p_int_7_x_V_3, i27 %p_int_8_x_V_3, i27 %p_int_0_y_V_3, i27 %p_int_1_y_V_3, i27 %p_int_2_y_V_3, i27 %p_int_3_y_V_3, i27 %p_int_4_y_V_3, i27 %p_int_5_y_V_3, i27 %p_int_6_y_V_3, i27 %p_int_7_y_V_3, i27 %p_int_8_y_V_3, i27 %p_int_0_z_V_3, i27 %p_int_1_z_V_3, i27 %p_int_2_z_V_3, i27 %p_int_3_z_V_3, i27 %p_int_4_z_V_3, i27 %p_int_5_z_V_3, i27 %p_int_6_z_V_3, i27 %p_int_7_z_V_3, i27 %p_int_8_z_V_3)
  %p_int_0_x_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 0
  %p_int_1_x_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 1
  %p_int_2_x_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 2
  %p_int_3_x_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 3
  %p_int_4_x_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 4
  %p_int_5_x_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 5
  %p_int_6_x_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 6
  %p_int_7_x_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 7
  %p_int_8_x_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 8
  %p_int_0_y_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 9
  %p_int_1_y_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 10
  %p_int_2_y_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 11
  %p_int_3_y_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 12
  %p_int_4_y_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 13
  %p_int_5_y_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 14
  %p_int_6_y_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 15
  %p_int_7_y_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 16
  %p_int_8_y_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 17
  %p_int_0_z_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 18
  %p_int_1_z_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 19
  %p_int_2_z_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 20
  %p_int_3_z_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 21
  %p_int_4_z_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 22
  %p_int_5_z_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 23
  %p_int_6_z_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 24
  %p_int_7_z_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 25
  %p_int_8_z_V_4 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret5, 26
  call fastcc void @to_double()
  call fastcc void @gravity() nounwind
  %drift_ret6 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_4, i27 %p_int_1_x_V_4, i27 %p_int_2_x_V_4, i27 %p_int_3_x_V_4, i27 %p_int_4_x_V_4, i27 %p_int_5_x_V_4, i27 %p_int_6_x_V_4, i27 %p_int_7_x_V_4, i27 %p_int_8_x_V_4, i27 %p_int_0_y_V_4, i27 %p_int_1_y_V_4, i27 %p_int_2_y_V_4, i27 %p_int_3_y_V_4, i27 %p_int_4_y_V_4, i27 %p_int_5_y_V_4, i27 %p_int_6_y_V_4, i27 %p_int_7_y_V_4, i27 %p_int_8_y_V_4, i27 %p_int_0_z_V_4, i27 %p_int_1_z_V_4, i27 %p_int_2_z_V_4, i27 %p_int_3_z_V_4, i27 %p_int_4_z_V_4, i27 %p_int_5_z_V_4, i27 %p_int_6_z_V_4, i27 %p_int_7_z_V_4, i27 %p_int_8_z_V_4)
  %p_int_0_x_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 0
  %p_int_1_x_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 1
  %p_int_2_x_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 2
  %p_int_3_x_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 3
  %p_int_4_x_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 4
  %p_int_5_x_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 5
  %p_int_6_x_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 6
  %p_int_7_x_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 7
  %p_int_8_x_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 8
  %p_int_0_y_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 9
  %p_int_1_y_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 10
  %p_int_2_y_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 11
  %p_int_3_y_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 12
  %p_int_4_y_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 13
  %p_int_5_y_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 14
  %p_int_6_y_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 15
  %p_int_7_y_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 16
  %p_int_8_y_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 17
  %p_int_0_z_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 18
  %p_int_1_z_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 19
  %p_int_2_z_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 20
  %p_int_3_z_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 21
  %p_int_4_z_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 22
  %p_int_5_z_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 23
  %p_int_6_z_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 24
  %p_int_7_z_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 25
  %p_int_8_z_V_5 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret6, 26
  call fastcc void @to_double()
  %drift_ret7 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_5, i27 %p_int_1_x_V_5, i27 %p_int_2_x_V_5, i27 %p_int_3_x_V_5, i27 %p_int_4_x_V_5, i27 %p_int_5_x_V_5, i27 %p_int_6_x_V_5, i27 %p_int_7_x_V_5, i27 %p_int_8_x_V_5, i27 %p_int_0_y_V_5, i27 %p_int_1_y_V_5, i27 %p_int_2_y_V_5, i27 %p_int_3_y_V_5, i27 %p_int_4_y_V_5, i27 %p_int_5_y_V_5, i27 %p_int_6_y_V_5, i27 %p_int_7_y_V_5, i27 %p_int_8_y_V_5, i27 %p_int_0_z_V_5, i27 %p_int_1_z_V_5, i27 %p_int_2_z_V_5, i27 %p_int_3_z_V_5, i27 %p_int_4_z_V_5, i27 %p_int_5_z_V_5, i27 %p_int_6_z_V_5, i27 %p_int_7_z_V_5, i27 %p_int_8_z_V_5)
  %p_int_0_x_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 0
  %p_int_1_x_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 1
  %p_int_2_x_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 2
  %p_int_3_x_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 3
  %p_int_4_x_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 4
  %p_int_5_x_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 5
  %p_int_6_x_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 6
  %p_int_7_x_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 7
  %p_int_8_x_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 8
  %p_int_0_y_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 9
  %p_int_1_y_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 10
  %p_int_2_y_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 11
  %p_int_3_y_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 12
  %p_int_4_y_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 13
  %p_int_5_y_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 14
  %p_int_6_y_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 15
  %p_int_7_y_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 16
  %p_int_8_y_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 17
  %p_int_0_z_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 18
  %p_int_1_z_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 19
  %p_int_2_z_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 20
  %p_int_3_z_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 21
  %p_int_4_z_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 22
  %p_int_5_z_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 23
  %p_int_6_z_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 24
  %p_int_7_z_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 25
  %p_int_8_z_V_6 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret7, 26
  call fastcc void @to_double()
  call fastcc void @gravity() nounwind
  %drift_ret8 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_6, i27 %p_int_1_x_V_6, i27 %p_int_2_x_V_6, i27 %p_int_3_x_V_6, i27 %p_int_4_x_V_6, i27 %p_int_5_x_V_6, i27 %p_int_6_x_V_6, i27 %p_int_7_x_V_6, i27 %p_int_8_x_V_6, i27 %p_int_0_y_V_6, i27 %p_int_1_y_V_6, i27 %p_int_2_y_V_6, i27 %p_int_3_y_V_6, i27 %p_int_4_y_V_6, i27 %p_int_5_y_V_6, i27 %p_int_6_y_V_6, i27 %p_int_7_y_V_6, i27 %p_int_8_y_V_6, i27 %p_int_0_z_V_6, i27 %p_int_1_z_V_6, i27 %p_int_2_z_V_6, i27 %p_int_3_z_V_6, i27 %p_int_4_z_V_6, i27 %p_int_5_z_V_6, i27 %p_int_6_z_V_6, i27 %p_int_7_z_V_6, i27 %p_int_8_z_V_6)
  %p_int_0_x_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 0
  %p_int_1_x_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 1
  %p_int_2_x_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 2
  %p_int_3_x_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 3
  %p_int_4_x_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 4
  %p_int_5_x_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 5
  %p_int_6_x_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 6
  %p_int_7_x_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 7
  %p_int_8_x_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 8
  %p_int_0_y_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 9
  %p_int_1_y_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 10
  %p_int_2_y_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 11
  %p_int_3_y_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 12
  %p_int_4_y_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 13
  %p_int_5_y_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 14
  %p_int_6_y_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 15
  %p_int_7_y_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 16
  %p_int_8_y_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 17
  %p_int_0_z_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 18
  %p_int_1_z_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 19
  %p_int_2_z_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 20
  %p_int_3_z_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 21
  %p_int_4_z_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 22
  %p_int_5_z_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 23
  %p_int_6_z_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 24
  %p_int_7_z_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 25
  %p_int_8_z_V_7 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret8, 26
  call fastcc void @to_double()
  %empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 628, i64 628, i64 628)
  %drift_ret9 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_7, i27 %p_int_1_x_V_7, i27 %p_int_2_x_V_7, i27 %p_int_3_x_V_7, i27 %p_int_4_x_V_7, i27 %p_int_5_x_V_7, i27 %p_int_6_x_V_7, i27 %p_int_7_x_V_7, i27 %p_int_8_x_V_7, i27 %p_int_0_y_V_7, i27 %p_int_1_y_V_7, i27 %p_int_2_y_V_7, i27 %p_int_3_y_V_7, i27 %p_int_4_y_V_7, i27 %p_int_5_y_V_7, i27 %p_int_6_y_V_7, i27 %p_int_7_y_V_7, i27 %p_int_8_y_V_7, i27 %p_int_0_z_V_7, i27 %p_int_1_z_V_7, i27 %p_int_2_z_V_7, i27 %p_int_3_z_V_7, i27 %p_int_4_z_V_7, i27 %p_int_5_z_V_7, i27 %p_int_6_z_V_7, i27 %p_int_7_z_V_7, i27 %p_int_8_z_V_7)
  %p_int_0_x_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 0
  %p_int_1_x_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 1
  %p_int_2_x_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 2
  %p_int_3_x_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 3
  %p_int_4_x_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 4
  %p_int_5_x_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 5
  %p_int_6_x_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 6
  %p_int_7_x_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 7
  %p_int_8_x_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 8
  %p_int_0_y_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 9
  %p_int_1_y_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 10
  %p_int_2_y_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 11
  %p_int_3_y_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 12
  %p_int_4_y_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 13
  %p_int_5_y_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 14
  %p_int_6_y_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 15
  %p_int_7_y_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 16
  %p_int_8_y_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 17
  %p_int_0_z_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 18
  %p_int_1_z_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 19
  %p_int_2_z_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 20
  %p_int_3_z_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 21
  %p_int_4_z_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 22
  %p_int_5_z_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 23
  %p_int_6_z_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 24
  %p_int_7_z_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 25
  %p_int_8_z_V_8 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret9, 26
  call fastcc void @to_double()
  call fastcc void @gravity() nounwind
  %drift_ret10 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_8, i27 %p_int_1_x_V_8, i27 %p_int_2_x_V_8, i27 %p_int_3_x_V_8, i27 %p_int_4_x_V_8, i27 %p_int_5_x_V_8, i27 %p_int_6_x_V_8, i27 %p_int_7_x_V_8, i27 %p_int_8_x_V_8, i27 %p_int_0_y_V_8, i27 %p_int_1_y_V_8, i27 %p_int_2_y_V_8, i27 %p_int_3_y_V_8, i27 %p_int_4_y_V_8, i27 %p_int_5_y_V_8, i27 %p_int_6_y_V_8, i27 %p_int_7_y_V_8, i27 %p_int_8_y_V_8, i27 %p_int_0_z_V_8, i27 %p_int_1_z_V_8, i27 %p_int_2_z_V_8, i27 %p_int_3_z_V_8, i27 %p_int_4_z_V_8, i27 %p_int_5_z_V_8, i27 %p_int_6_z_V_8, i27 %p_int_7_z_V_8, i27 %p_int_8_z_V_8)
  %p_int_0_x_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 0
  %p_int_1_x_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 1
  %p_int_2_x_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 2
  %p_int_3_x_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 3
  %p_int_4_x_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 4
  %p_int_5_x_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 5
  %p_int_6_x_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 6
  %p_int_7_x_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 7
  %p_int_8_x_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 8
  %p_int_0_y_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 9
  %p_int_1_y_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 10
  %p_int_2_y_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 11
  %p_int_3_y_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 12
  %p_int_4_y_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 13
  %p_int_5_y_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 14
  %p_int_6_y_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 15
  %p_int_7_y_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 16
  %p_int_8_y_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 17
  %p_int_0_z_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 18
  %p_int_1_z_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 19
  %p_int_2_z_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 20
  %p_int_3_z_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 21
  %p_int_4_z_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 22
  %p_int_5_z_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 23
  %p_int_6_z_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 24
  %p_int_7_z_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 25
  %p_int_8_z_V_9 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret10, 26
  call fastcc void @to_double()
  %drift_ret11 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_9, i27 %p_int_1_x_V_9, i27 %p_int_2_x_V_9, i27 %p_int_3_x_V_9, i27 %p_int_4_x_V_9, i27 %p_int_5_x_V_9, i27 %p_int_6_x_V_9, i27 %p_int_7_x_V_9, i27 %p_int_8_x_V_9, i27 %p_int_0_y_V_9, i27 %p_int_1_y_V_9, i27 %p_int_2_y_V_9, i27 %p_int_3_y_V_9, i27 %p_int_4_y_V_9, i27 %p_int_5_y_V_9, i27 %p_int_6_y_V_9, i27 %p_int_7_y_V_9, i27 %p_int_8_y_V_9, i27 %p_int_0_z_V_9, i27 %p_int_1_z_V_9, i27 %p_int_2_z_V_9, i27 %p_int_3_z_V_9, i27 %p_int_4_z_V_9, i27 %p_int_5_z_V_9, i27 %p_int_6_z_V_9, i27 %p_int_7_z_V_9, i27 %p_int_8_z_V_9)
  %p_int_0_x_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 0
  %p_int_1_x_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 1
  %p_int_2_x_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 2
  %p_int_3_x_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 3
  %p_int_4_x_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 4
  %p_int_5_x_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 5
  %p_int_6_x_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 6
  %p_int_7_x_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 7
  %p_int_8_x_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 8
  %p_int_0_y_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 9
  %p_int_1_y_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 10
  %p_int_2_y_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 11
  %p_int_3_y_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 12
  %p_int_4_y_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 13
  %p_int_5_y_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 14
  %p_int_6_y_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 15
  %p_int_7_y_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 16
  %p_int_8_y_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 17
  %p_int_0_z_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 18
  %p_int_1_z_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 19
  %p_int_2_z_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 20
  %p_int_3_z_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 21
  %p_int_4_z_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 22
  %p_int_5_z_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 23
  %p_int_6_z_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 24
  %p_int_7_z_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 25
  %p_int_8_z_V_10 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret11, 26
  call fastcc void @to_double()
  call fastcc void @gravity() nounwind
  %drift_ret12 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_10, i27 %p_int_1_x_V_10, i27 %p_int_2_x_V_10, i27 %p_int_3_x_V_10, i27 %p_int_4_x_V_10, i27 %p_int_5_x_V_10, i27 %p_int_6_x_V_10, i27 %p_int_7_x_V_10, i27 %p_int_8_x_V_10, i27 %p_int_0_y_V_10, i27 %p_int_1_y_V_10, i27 %p_int_2_y_V_10, i27 %p_int_3_y_V_10, i27 %p_int_4_y_V_10, i27 %p_int_5_y_V_10, i27 %p_int_6_y_V_10, i27 %p_int_7_y_V_10, i27 %p_int_8_y_V_10, i27 %p_int_0_z_V_10, i27 %p_int_1_z_V_10, i27 %p_int_2_z_V_10, i27 %p_int_3_z_V_10, i27 %p_int_4_z_V_10, i27 %p_int_5_z_V_10, i27 %p_int_6_z_V_10, i27 %p_int_7_z_V_10, i27 %p_int_8_z_V_10)
  %p_int_0_x_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 0
  %p_int_1_x_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 1
  %p_int_2_x_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 2
  %p_int_3_x_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 3
  %p_int_4_x_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 4
  %p_int_5_x_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 5
  %p_int_6_x_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 6
  %p_int_7_x_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 7
  %p_int_8_x_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 8
  %p_int_0_y_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 9
  %p_int_1_y_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 10
  %p_int_2_y_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 11
  %p_int_3_y_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 12
  %p_int_4_y_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 13
  %p_int_5_y_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 14
  %p_int_6_y_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 15
  %p_int_7_y_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 16
  %p_int_8_y_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 17
  %p_int_0_z_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 18
  %p_int_1_z_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 19
  %p_int_2_z_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 20
  %p_int_3_z_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 21
  %p_int_4_z_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 22
  %p_int_5_z_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 23
  %p_int_6_z_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 24
  %p_int_7_z_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 25
  %p_int_8_z_V_11 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret12, 26
  call fastcc void @to_double()
  %drift_ret13 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_11, i27 %p_int_1_x_V_11, i27 %p_int_2_x_V_11, i27 %p_int_3_x_V_11, i27 %p_int_4_x_V_11, i27 %p_int_5_x_V_11, i27 %p_int_6_x_V_11, i27 %p_int_7_x_V_11, i27 %p_int_8_x_V_11, i27 %p_int_0_y_V_11, i27 %p_int_1_y_V_11, i27 %p_int_2_y_V_11, i27 %p_int_3_y_V_11, i27 %p_int_4_y_V_11, i27 %p_int_5_y_V_11, i27 %p_int_6_y_V_11, i27 %p_int_7_y_V_11, i27 %p_int_8_y_V_11, i27 %p_int_0_z_V_11, i27 %p_int_1_z_V_11, i27 %p_int_2_z_V_11, i27 %p_int_3_z_V_11, i27 %p_int_4_z_V_11, i27 %p_int_5_z_V_11, i27 %p_int_6_z_V_11, i27 %p_int_7_z_V_11, i27 %p_int_8_z_V_11)
  %p_int_0_x_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 0
  %p_int_1_x_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 1
  %p_int_2_x_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 2
  %p_int_3_x_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 3
  %p_int_4_x_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 4
  %p_int_5_x_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 5
  %p_int_6_x_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 6
  %p_int_7_x_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 7
  %p_int_8_x_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 8
  %p_int_0_y_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 9
  %p_int_1_y_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 10
  %p_int_2_y_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 11
  %p_int_3_y_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 12
  %p_int_4_y_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 13
  %p_int_5_y_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 14
  %p_int_6_y_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 15
  %p_int_7_y_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 16
  %p_int_8_y_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 17
  %p_int_0_z_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 18
  %p_int_1_z_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 19
  %p_int_2_z_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 20
  %p_int_3_z_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 21
  %p_int_4_z_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 22
  %p_int_5_z_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 23
  %p_int_6_z_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 24
  %p_int_7_z_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 25
  %p_int_8_z_V_12 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret13, 26
  call fastcc void @to_double()
  call fastcc void @gravity() nounwind
  %drift_ret14 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_12, i27 %p_int_1_x_V_12, i27 %p_int_2_x_V_12, i27 %p_int_3_x_V_12, i27 %p_int_4_x_V_12, i27 %p_int_5_x_V_12, i27 %p_int_6_x_V_12, i27 %p_int_7_x_V_12, i27 %p_int_8_x_V_12, i27 %p_int_0_y_V_12, i27 %p_int_1_y_V_12, i27 %p_int_2_y_V_12, i27 %p_int_3_y_V_12, i27 %p_int_4_y_V_12, i27 %p_int_5_y_V_12, i27 %p_int_6_y_V_12, i27 %p_int_7_y_V_12, i27 %p_int_8_y_V_12, i27 %p_int_0_z_V_12, i27 %p_int_1_z_V_12, i27 %p_int_2_z_V_12, i27 %p_int_3_z_V_12, i27 %p_int_4_z_V_12, i27 %p_int_5_z_V_12, i27 %p_int_6_z_V_12, i27 %p_int_7_z_V_12, i27 %p_int_8_z_V_12)
  %p_int_0_x_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 0
  %p_int_1_x_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 1
  %p_int_2_x_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 2
  %p_int_3_x_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 3
  %p_int_4_x_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 4
  %p_int_5_x_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 5
  %p_int_6_x_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 6
  %p_int_7_x_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 7
  %p_int_8_x_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 8
  %p_int_0_y_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 9
  %p_int_1_y_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 10
  %p_int_2_y_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 11
  %p_int_3_y_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 12
  %p_int_4_y_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 13
  %p_int_5_y_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 14
  %p_int_6_y_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 15
  %p_int_7_y_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 16
  %p_int_8_y_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 17
  %p_int_0_z_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 18
  %p_int_1_z_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 19
  %p_int_2_z_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 20
  %p_int_3_z_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 21
  %p_int_4_z_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 22
  %p_int_5_z_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 23
  %p_int_6_z_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 24
  %p_int_7_z_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 25
  %p_int_8_z_V_13 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret14, 26
  call fastcc void @to_double()
  %drift_ret15 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_13, i27 %p_int_1_x_V_13, i27 %p_int_2_x_V_13, i27 %p_int_3_x_V_13, i27 %p_int_4_x_V_13, i27 %p_int_5_x_V_13, i27 %p_int_6_x_V_13, i27 %p_int_7_x_V_13, i27 %p_int_8_x_V_13, i27 %p_int_0_y_V_13, i27 %p_int_1_y_V_13, i27 %p_int_2_y_V_13, i27 %p_int_3_y_V_13, i27 %p_int_4_y_V_13, i27 %p_int_5_y_V_13, i27 %p_int_6_y_V_13, i27 %p_int_7_y_V_13, i27 %p_int_8_y_V_13, i27 %p_int_0_z_V_13, i27 %p_int_1_z_V_13, i27 %p_int_2_z_V_13, i27 %p_int_3_z_V_13, i27 %p_int_4_z_V_13, i27 %p_int_5_z_V_13, i27 %p_int_6_z_V_13, i27 %p_int_7_z_V_13, i27 %p_int_8_z_V_13)
  %p_int_0_x_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 0
  %p_int_1_x_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 1
  %p_int_2_x_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 2
  %p_int_3_x_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 3
  %p_int_4_x_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 4
  %p_int_5_x_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 5
  %p_int_6_x_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 6
  %p_int_7_x_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 7
  %p_int_8_x_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 8
  %p_int_0_y_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 9
  %p_int_1_y_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 10
  %p_int_2_y_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 11
  %p_int_3_y_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 12
  %p_int_4_y_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 13
  %p_int_5_y_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 14
  %p_int_6_y_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 15
  %p_int_7_y_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 16
  %p_int_8_y_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 17
  %p_int_0_z_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 18
  %p_int_1_z_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 19
  %p_int_2_z_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 20
  %p_int_3_z_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 21
  %p_int_4_z_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 22
  %p_int_5_z_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 23
  %p_int_6_z_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 24
  %p_int_7_z_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 25
  %p_int_8_z_V_14 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret15, 26
  call fastcc void @to_double()
  call fastcc void @gravity() nounwind
  %drift_ret16 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_14, i27 %p_int_1_x_V_14, i27 %p_int_2_x_V_14, i27 %p_int_3_x_V_14, i27 %p_int_4_x_V_14, i27 %p_int_5_x_V_14, i27 %p_int_6_x_V_14, i27 %p_int_7_x_V_14, i27 %p_int_8_x_V_14, i27 %p_int_0_y_V_14, i27 %p_int_1_y_V_14, i27 %p_int_2_y_V_14, i27 %p_int_3_y_V_14, i27 %p_int_4_y_V_14, i27 %p_int_5_y_V_14, i27 %p_int_6_y_V_14, i27 %p_int_7_y_V_14, i27 %p_int_8_y_V_14, i27 %p_int_0_z_V_14, i27 %p_int_1_z_V_14, i27 %p_int_2_z_V_14, i27 %p_int_3_z_V_14, i27 %p_int_4_z_V_14, i27 %p_int_5_z_V_14, i27 %p_int_6_z_V_14, i27 %p_int_7_z_V_14, i27 %p_int_8_z_V_14)
  %p_int_0_x_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 0
  %p_int_1_x_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 1
  %p_int_2_x_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 2
  %p_int_3_x_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 3
  %p_int_4_x_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 4
  %p_int_5_x_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 5
  %p_int_6_x_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 6
  %p_int_7_x_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 7
  %p_int_8_x_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 8
  %p_int_0_y_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 9
  %p_int_1_y_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 10
  %p_int_2_y_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 11
  %p_int_3_y_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 12
  %p_int_4_y_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 13
  %p_int_5_y_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 14
  %p_int_6_y_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 15
  %p_int_7_y_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 16
  %p_int_8_y_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 17
  %p_int_0_z_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 18
  %p_int_1_z_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 19
  %p_int_2_z_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 20
  %p_int_3_z_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 21
  %p_int_4_z_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 22
  %p_int_5_z_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 23
  %p_int_6_z_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 24
  %p_int_7_z_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 25
  %p_int_8_z_V_15 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret16, 26
  call fastcc void @to_double()
  %drift_ret17 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_15, i27 %p_int_1_x_V_15, i27 %p_int_2_x_V_15, i27 %p_int_3_x_V_15, i27 %p_int_4_x_V_15, i27 %p_int_5_x_V_15, i27 %p_int_6_x_V_15, i27 %p_int_7_x_V_15, i27 %p_int_8_x_V_15, i27 %p_int_0_y_V_15, i27 %p_int_1_y_V_15, i27 %p_int_2_y_V_15, i27 %p_int_3_y_V_15, i27 %p_int_4_y_V_15, i27 %p_int_5_y_V_15, i27 %p_int_6_y_V_15, i27 %p_int_7_y_V_15, i27 %p_int_8_y_V_15, i27 %p_int_0_z_V_15, i27 %p_int_1_z_V_15, i27 %p_int_2_z_V_15, i27 %p_int_3_z_V_15, i27 %p_int_4_z_V_15, i27 %p_int_5_z_V_15, i27 %p_int_6_z_V_15, i27 %p_int_7_z_V_15, i27 %p_int_8_z_V_15)
  %p_int_0_x_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 0
  %p_int_1_x_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 1
  %p_int_2_x_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 2
  %p_int_3_x_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 3
  %p_int_4_x_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 4
  %p_int_5_x_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 5
  %p_int_6_x_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 6
  %p_int_7_x_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 7
  %p_int_8_x_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 8
  %p_int_0_y_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 9
  %p_int_1_y_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 10
  %p_int_2_y_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 11
  %p_int_3_y_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 12
  %p_int_4_y_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 13
  %p_int_5_y_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 14
  %p_int_6_y_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 15
  %p_int_7_y_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 16
  %p_int_8_y_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 17
  %p_int_0_z_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 18
  %p_int_1_z_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 19
  %p_int_2_z_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 20
  %p_int_3_z_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 21
  %p_int_4_z_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 22
  %p_int_5_z_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 23
  %p_int_6_z_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 24
  %p_int_7_z_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 25
  %p_int_8_z_V_16 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret17, 26
  call fastcc void @to_double()
  call fastcc void @gravity() nounwind
  %drift_ret18 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_16, i27 %p_int_1_x_V_16, i27 %p_int_2_x_V_16, i27 %p_int_3_x_V_16, i27 %p_int_4_x_V_16, i27 %p_int_5_x_V_16, i27 %p_int_6_x_V_16, i27 %p_int_7_x_V_16, i27 %p_int_8_x_V_16, i27 %p_int_0_y_V_16, i27 %p_int_1_y_V_16, i27 %p_int_2_y_V_16, i27 %p_int_3_y_V_16, i27 %p_int_4_y_V_16, i27 %p_int_5_y_V_16, i27 %p_int_6_y_V_16, i27 %p_int_7_y_V_16, i27 %p_int_8_y_V_16, i27 %p_int_0_z_V_16, i27 %p_int_1_z_V_16, i27 %p_int_2_z_V_16, i27 %p_int_3_z_V_16, i27 %p_int_4_z_V_16, i27 %p_int_5_z_V_16, i27 %p_int_6_z_V_16, i27 %p_int_7_z_V_16, i27 %p_int_8_z_V_16)
  %p_int_0_x_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 0
  %p_int_1_x_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 1
  %p_int_2_x_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 2
  %p_int_3_x_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 3
  %p_int_4_x_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 4
  %p_int_5_x_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 5
  %p_int_6_x_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 6
  %p_int_7_x_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 7
  %p_int_8_x_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 8
  %p_int_0_y_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 9
  %p_int_1_y_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 10
  %p_int_2_y_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 11
  %p_int_3_y_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 12
  %p_int_4_y_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 13
  %p_int_5_y_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 14
  %p_int_6_y_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 15
  %p_int_7_y_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 16
  %p_int_8_y_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 17
  %p_int_0_z_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 18
  %p_int_1_z_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 19
  %p_int_2_z_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 20
  %p_int_3_z_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 21
  %p_int_4_z_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 22
  %p_int_5_z_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 23
  %p_int_6_z_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 24
  %p_int_7_z_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 25
  %p_int_8_z_V_17 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret18, 26
  call fastcc void @to_double()
  %drift_ret = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_17, i27 %p_int_1_x_V_17, i27 %p_int_2_x_V_17, i27 %p_int_3_x_V_17, i27 %p_int_4_x_V_17, i27 %p_int_5_x_V_17, i27 %p_int_6_x_V_17, i27 %p_int_7_x_V_17, i27 %p_int_8_x_V_17, i27 %p_int_0_y_V_17, i27 %p_int_1_y_V_17, i27 %p_int_2_y_V_17, i27 %p_int_3_y_V_17, i27 %p_int_4_y_V_17, i27 %p_int_5_y_V_17, i27 %p_int_6_y_V_17, i27 %p_int_7_y_V_17, i27 %p_int_8_y_V_17, i27 %p_int_0_z_V_17, i27 %p_int_1_z_V_17, i27 %p_int_2_z_V_17, i27 %p_int_3_z_V_17, i27 %p_int_4_z_V_17, i27 %p_int_5_z_V_17, i27 %p_int_6_z_V_17, i27 %p_int_7_z_V_17, i27 %p_int_8_z_V_17)
  %p_int_0_x_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 0
  %p_int_1_x_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 1
  %p_int_2_x_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 2
  %p_int_3_x_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 3
  %p_int_4_x_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 4
  %p_int_5_x_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 5
  %p_int_6_x_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 6
  %p_int_7_x_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 7
  %p_int_8_x_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 8
  %p_int_0_y_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 9
  %p_int_1_y_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 10
  %p_int_2_y_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 11
  %p_int_3_y_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 12
  %p_int_4_y_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 13
  %p_int_5_y_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 14
  %p_int_6_y_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 15
  %p_int_7_y_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 16
  %p_int_8_y_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 17
  %p_int_0_z_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 18
  %p_int_1_z_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 19
  %p_int_2_z_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 20
  %p_int_3_z_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 21
  %p_int_4_z_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 22
  %p_int_5_z_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 23
  %p_int_6_z_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 24
  %p_int_7_z_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 25
  %p_int_8_z_V_18 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret, 26
  call fastcc void @to_double()
  call fastcc void @gravity() nounwind
  %drift_ret19 = call fastcc { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } @drift(i27 %p_int_0_x_V_18, i27 %p_int_1_x_V_18, i27 %p_int_2_x_V_18, i27 %p_int_3_x_V_18, i27 %p_int_4_x_V_18, i27 %p_int_5_x_V_18, i27 %p_int_6_x_V_18, i27 %p_int_7_x_V_18, i27 %p_int_8_x_V_18, i27 %p_int_0_y_V_18, i27 %p_int_1_y_V_18, i27 %p_int_2_y_V_18, i27 %p_int_3_y_V_18, i27 %p_int_4_y_V_18, i27 %p_int_5_y_V_18, i27 %p_int_6_y_V_18, i27 %p_int_7_y_V_18, i27 %p_int_8_y_V_18, i27 %p_int_0_z_V_18, i27 %p_int_1_z_V_18, i27 %p_int_2_z_V_18, i27 %p_int_3_z_V_18, i27 %p_int_4_z_V_18, i27 %p_int_5_z_V_18, i27 %p_int_6_z_V_18, i27 %p_int_7_z_V_18, i27 %p_int_8_z_V_18)
  %p_int_0_x_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 0
  %p_int_1_x_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 1
  %p_int_2_x_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 2
  %p_int_3_x_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 3
  %p_int_4_x_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 4
  %p_int_5_x_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 5
  %p_int_6_x_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 6
  %p_int_7_x_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 7
  %p_int_8_x_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 8
  %p_int_0_y_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 9
  %p_int_1_y_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 10
  %p_int_2_y_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 11
  %p_int_3_y_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 12
  %p_int_4_y_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 13
  %p_int_5_y_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 14
  %p_int_6_y_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 15
  %p_int_7_y_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 16
  %p_int_8_y_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 17
  %p_int_0_z_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 18
  %p_int_1_z_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 19
  %p_int_2_z_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 20
  %p_int_3_z_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 21
  %p_int_4_z_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 22
  %p_int_5_z_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 23
  %p_int_6_z_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 24
  %p_int_7_z_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 25
  %p_int_8_z_V_19 = extractvalue { i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27 } %drift_ret19, 26
  call fastcc void @to_double()
  %t_1_9 = add i13 %t, 10
  br label %to_int.exit.0

.preheader:                                       ; preds = %.preheader.preheader, %1
  %i5 = phi i4 [ %i, %1 ], [ 0, %.preheader.preheader ]
  %exitcond = icmp eq i4 %i5, -7
  %i = add i4 %i5, 1
  br i1 %exitcond, label %2, label %1

; <label>:1                                       ; preds = %.preheader
  %empty_18 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9, i64 9, i64 9)
  %tmp_189 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str274)
  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str271) nounwind
  %tmp_s = zext i4 %i5 to i64
  %p_x_V_0_load = load i27* @p_x_V_0, align 4
  %p_x_V_1_load = load i27* @p_x_V_1, align 4
  %p_x_V_2_load = load i27* @p_x_V_2, align 4
  %p_x_V_3_load = load i27* @p_x_V_3, align 4
  %p_x_V_4_load = load i27* @p_x_V_4, align 4
  %p_x_V_5_load = load i27* @p_x_V_5, align 4
  %p_x_V_6_load = load i27* @p_x_V_6, align 4
  %p_x_V_7_load = load i27* @p_x_V_7, align 4
  %p_x_V_8_load = load i27* @p_x_V_8, align 4
  %tmp_581 = call i27 @_ssdm_op_Mux.ap_auto.9i27.i4(i27 %p_x_V_0_load, i27 %p_x_V_1_load, i27 %p_x_V_2_load, i27 %p_x_V_3_load, i27 %p_x_V_4_load, i27 %p_x_V_5_load, i27 %p_x_V_6_load, i27 %p_x_V_7_load, i27 %p_x_V_8_load, i4 %i5)
  %result_addr = getelementptr [9 x i270]* %result, i64 0, i64 %tmp_s
  %p_y_V_0_load = load i27* @p_y_V_0, align 4
  %p_y_V_1_load = load i27* @p_y_V_1, align 4
  %p_y_V_2_load = load i27* @p_y_V_2, align 4
  %p_y_V_3_load = load i27* @p_y_V_3, align 4
  %p_y_V_4_load = load i27* @p_y_V_4, align 4
  %p_y_V_5_load = load i27* @p_y_V_5, align 4
  %p_y_V_6_load = load i27* @p_y_V_6, align 4
  %p_y_V_7_load = load i27* @p_y_V_7, align 4
  %p_y_V_8_load = load i27* @p_y_V_8, align 4
  %tmp_582 = call i27 @_ssdm_op_Mux.ap_auto.9i27.i4(i27 %p_y_V_0_load, i27 %p_y_V_1_load, i27 %p_y_V_2_load, i27 %p_y_V_3_load, i27 %p_y_V_4_load, i27 %p_y_V_5_load, i27 %p_y_V_6_load, i27 %p_y_V_7_load, i27 %p_y_V_8_load, i4 %i5)
  %p_z_V_0_load = load i27* @p_z_V_0, align 4
  %p_z_V_1_load = load i27* @p_z_V_1, align 4
  %p_z_V_2_load = load i27* @p_z_V_2, align 4
  %p_z_V_3_load = load i27* @p_z_V_3, align 4
  %p_z_V_4_load = load i27* @p_z_V_4, align 4
  %p_z_V_5_load = load i27* @p_z_V_5, align 4
  %p_z_V_6_load = load i27* @p_z_V_6, align 4
  %p_z_V_7_load = load i27* @p_z_V_7, align 4
  %p_z_V_8_load = load i27* @p_z_V_8, align 4
  %tmp_583 = call i27 @_ssdm_op_Mux.ap_auto.9i27.i4(i27 %p_z_V_0_load, i27 %p_z_V_1_load, i27 %p_z_V_2_load, i27 %p_z_V_3_load, i27 %p_z_V_4_load, i27 %p_z_V_5_load, i27 %p_z_V_6_load, i27 %p_z_V_7_load, i27 %p_z_V_8_load, i4 %i5)
  %p_vx_V_0_load = load i27* @p_vx_V_0, align 4
  %p_vx_V_1_load = load i27* @p_vx_V_1, align 4
  %p_vx_V_2_load = load i27* @p_vx_V_2, align 4
  %p_vx_V_3_load = load i27* @p_vx_V_3, align 4
  %p_vx_V_4_load = load i27* @p_vx_V_4, align 4
  %p_vx_V_5_load = load i27* @p_vx_V_5, align 4
  %p_vx_V_6_load = load i27* @p_vx_V_6, align 4
  %p_vx_V_7_load = load i27* @p_vx_V_7, align 4
  %p_vx_V_8_load = load i27* @p_vx_V_8, align 4
  %tmp_584 = call i27 @_ssdm_op_Mux.ap_auto.9i27.i4(i27 %p_vx_V_0_load, i27 %p_vx_V_1_load, i27 %p_vx_V_2_load, i27 %p_vx_V_3_load, i27 %p_vx_V_4_load, i27 %p_vx_V_5_load, i27 %p_vx_V_6_load, i27 %p_vx_V_7_load, i27 %p_vx_V_8_load, i4 %i5)
  %p_vy_V_0_load = load i27* @p_vy_V_0, align 4
  %p_vy_V_1_load = load i27* @p_vy_V_1, align 4
  %p_vy_V_2_load = load i27* @p_vy_V_2, align 4
  %p_vy_V_3_load = load i27* @p_vy_V_3, align 4
  %p_vy_V_4_load = load i27* @p_vy_V_4, align 4
  %p_vy_V_5_load = load i27* @p_vy_V_5, align 4
  %p_vy_V_6_load = load i27* @p_vy_V_6, align 4
  %p_vy_V_7_load = load i27* @p_vy_V_7, align 4
  %p_vy_V_8_load = load i27* @p_vy_V_8, align 4
  %tmp_585 = call i27 @_ssdm_op_Mux.ap_auto.9i27.i4(i27 %p_vy_V_0_load, i27 %p_vy_V_1_load, i27 %p_vy_V_2_load, i27 %p_vy_V_3_load, i27 %p_vy_V_4_load, i27 %p_vy_V_5_load, i27 %p_vy_V_6_load, i27 %p_vy_V_7_load, i27 %p_vy_V_8_load, i4 %i5)
  %p_vz_V_0_load = load i27* @p_vz_V_0, align 4
  %p_vz_V_1_load = load i27* @p_vz_V_1, align 4
  %p_vz_V_2_load = load i27* @p_vz_V_2, align 4
  %p_vz_V_3_load = load i27* @p_vz_V_3, align 4
  %p_vz_V_4_load = load i27* @p_vz_V_4, align 4
  %p_vz_V_5_load = load i27* @p_vz_V_5, align 4
  %p_vz_V_6_load = load i27* @p_vz_V_6, align 4
  %p_vz_V_7_load = load i27* @p_vz_V_7, align 4
  %p_vz_V_8_load = load i27* @p_vz_V_8, align 4
  %tmp_586 = call i27 @_ssdm_op_Mux.ap_auto.9i27.i4(i27 %p_vz_V_0_load, i27 %p_vz_V_1_load, i27 %p_vz_V_2_load, i27 %p_vz_V_3_load, i27 %p_vz_V_4_load, i27 %p_vz_V_5_load, i27 %p_vz_V_6_load, i27 %p_vz_V_7_load, i27 %p_vz_V_8_load, i4 %i5)
  %p_ax_V_0_load = load i27* @p_ax_V_0, align 4
  %p_ax_V_1_load = load i27* @p_ax_V_1, align 4
  %p_ax_V_2_load = load i27* @p_ax_V_2, align 4
  %p_ax_V_3_load = load i27* @p_ax_V_3, align 4
  %p_ax_V_4_load = load i27* @p_ax_V_4, align 4
  %p_ax_V_5_load = load i27* @p_ax_V_5, align 4
  %p_ax_V_6_load = load i27* @p_ax_V_6, align 4
  %p_ax_V_7_load = load i27* @p_ax_V_7, align 4
  %p_ax_V_8_load = load i27* @p_ax_V_8, align 4
  %tmp_587 = call i27 @_ssdm_op_Mux.ap_auto.9i27.i4(i27 %p_ax_V_0_load, i27 %p_ax_V_1_load, i27 %p_ax_V_2_load, i27 %p_ax_V_3_load, i27 %p_ax_V_4_load, i27 %p_ax_V_5_load, i27 %p_ax_V_6_load, i27 %p_ax_V_7_load, i27 %p_ax_V_8_load, i4 %i5)
  %p_ay_V_0_load = load i27* @p_ay_V_0, align 4
  %p_ay_V_1_load = load i27* @p_ay_V_1, align 4
  %p_ay_V_2_load = load i27* @p_ay_V_2, align 4
  %p_ay_V_3_load = load i27* @p_ay_V_3, align 4
  %p_ay_V_4_load = load i27* @p_ay_V_4, align 4
  %p_ay_V_5_load = load i27* @p_ay_V_5, align 4
  %p_ay_V_6_load = load i27* @p_ay_V_6, align 4
  %p_ay_V_7_load = load i27* @p_ay_V_7, align 4
  %p_ay_V_8_load = load i27* @p_ay_V_8, align 4
  %tmp_588 = call i27 @_ssdm_op_Mux.ap_auto.9i27.i4(i27 %p_ay_V_0_load, i27 %p_ay_V_1_load, i27 %p_ay_V_2_load, i27 %p_ay_V_3_load, i27 %p_ay_V_4_load, i27 %p_ay_V_5_load, i27 %p_ay_V_6_load, i27 %p_ay_V_7_load, i27 %p_ay_V_8_load, i4 %i5)
  %p_az_V_0_load = load i27* @p_az_V_0, align 4
  %p_az_V_1_load = load i27* @p_az_V_1, align 4
  %p_az_V_2_load = load i27* @p_az_V_2, align 4
  %p_az_V_3_load = load i27* @p_az_V_3, align 4
  %p_az_V_4_load = load i27* @p_az_V_4, align 4
  %p_az_V_5_load = load i27* @p_az_V_5, align 4
  %p_az_V_6_load = load i27* @p_az_V_6, align 4
  %p_az_V_7_load = load i27* @p_az_V_7, align 4
  %p_az_V_8_load = load i27* @p_az_V_8, align 4
  %tmp_589 = call i27 @_ssdm_op_Mux.ap_auto.9i27.i4(i27 %p_az_V_0_load, i27 %p_az_V_1_load, i27 %p_az_V_2_load, i27 %p_az_V_3_load, i27 %p_az_V_4_load, i27 %p_az_V_5_load, i27 %p_az_V_6_load, i27 %p_az_V_7_load, i27 %p_az_V_8_load, i4 %i5)
  %tmp_590 = call i27 @_ssdm_op_Mux.ap_auto.9i27.i4(i27 16384, i27 0, i27 0, i27 0, i27 0, i27 15, i27 4, i27 0, i27 0, i4 %i5)
  %result_m_V_addr = call i270 @_ssdm_op_BitConcatenate.i270.i27.i27.i27.i27.i27.i27.i27.i27.i27.i27(i27 %tmp_590, i27 %tmp_589, i27 %tmp_588, i27 %tmp_587, i27 %tmp_586, i27 %tmp_585, i27 %tmp_584, i27 %tmp_583, i27 %tmp_582, i27 %tmp_581)
  store i270 %result_m_V_addr, i270* %result_addr, align 8
  %empty_19 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str274, i32 %tmp_189)
  br label %.preheader

; <label>:2                                       ; preds = %.preheader
  ret void
}

define weak void @_ssdm_op_SpecTopModule(...) {
entry:
  ret void
}

define weak i32 @_ssdm_op_SpecRegionEnd(...) {
entry:
  ret i32 0
}

define weak i32 @_ssdm_op_SpecRegionBegin(...) {
entry:
  ret i32 0
}

define weak void @_ssdm_op_SpecPipeline(...) nounwind {
entry:
  ret void
}

define weak i32 @_ssdm_op_SpecLoopTripCount(...) {
entry:
  ret i32 0
}

define weak void @_ssdm_op_SpecLoopName(...) nounwind {
entry:
  ret void
}

define weak void @_ssdm_op_SpecBitsMap(...) {
entry:
  ret void
}

define weak i48 @_ssdm_op_Read.ap_auto.i48(i48) {
entry:
  ret i48 %0
}

define weak i27 @_ssdm_op_Read.ap_auto.i27(i27) {
entry:
  ret i27 %0
}

define weak i50 @_ssdm_op_PartSet.i50.i50.i26.i32.i32(i50, i26, i32, i32) nounwind readnone {
entry:
  %empty = call i50 @llvm.part.set.i50.i26(i50 %0, i26 %1, i32 %2, i32 %3)
  ret i50 %empty
}

declare i63 @_ssdm_op_PartSelect.i63.i64.i32.i32(i64, i32, i32) nounwind readnone

declare i52 @_ssdm_op_PartSelect.i52.i64.i32.i32(i64, i32, i32) nounwind readnone

declare i5 @_ssdm_op_PartSelect.i5.i5.i32.i32(i5, i32, i32) nounwind readnone

declare i27 @_ssdm_op_PartSelect.i27.i54.i32.i32(i54, i32, i32) nounwind readnone

define weak i27 @_ssdm_op_PartSelect.i27.i41.i32.i32(i41, i32, i32) nounwind readnone {
entry:
  %empty = call i41 @llvm.part.select.i41(i41 %0, i32 %1, i32 %2)
  %empty_20 = trunc i41 %empty to i27
  ret i27 %empty_20
}

declare i27 @_ssdm_op_PartSelect.i27.i32.i32.i32(i32, i32, i32) nounwind readnone

declare i24 @_ssdm_op_PartSelect.i24.i50.i32.i32(i50, i32, i32) nounwind readnone

declare i24 @_ssdm_op_PartSelect.i24.i25.i32.i32(i25, i32, i32) nounwind readnone

declare i23 @_ssdm_op_PartSelect.i23.i25.i32.i32(i25, i32, i32) nounwind readnone

define weak i2 @_ssdm_op_PartSelect.i2.i48.i32.i32(i48, i32, i32) nounwind readnone {
entry:
  %empty = call i48 @llvm.part.select.i48(i48 %0, i32 %1, i32 %2)
  %empty_21 = trunc i48 %empty to i2
  ret i2 %empty_21
}

define weak i15 @_ssdm_op_PartSelect.i15.i41.i32.i32(i41, i32, i32) nounwind readnone {
entry:
  %empty = call i41 @llvm.part.select.i41(i41 %0, i32 %1, i32 %2)
  %empty_22 = trunc i41 %empty to i15
  ret i15 %empty_22
}

define weak i15 @_ssdm_op_PartSelect.i15.i25.i32.i32(i25, i32, i32) nounwind readnone {
entry:
  %empty = call i25 @llvm.part.select.i25(i25 %0, i32 %1, i32 %2)
  %empty_23 = trunc i25 %empty to i15
  ret i15 %empty_23
}

define weak i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64, i32, i32) nounwind readnone {
entry:
  %empty = call i64 @llvm.part.select.i64(i64 %0, i32 %1, i32 %2)
  %empty_24 = trunc i64 %empty to i11
  ret i11 %empty_24
}

declare i1 @_ssdm_op_PartSelect.i1.i48.i32.i32(i48, i32, i32) nounwind readnone

define weak i27 @_ssdm_op_Mux.ap_auto.9i27.i4(i27, i27, i27, i27, i27, i27, i27, i27, i27, i4) {
entry:
  switch i4 %9, label %case8 [
    i4 0, label %case0
    i4 1, label %case1
    i4 2, label %case2
    i4 3, label %case3
    i4 4, label %case4
    i4 5, label %case5
    i4 6, label %case6
    i4 7, label %case7
  ]

case0:                                            ; preds = %case8, %case7, %case6, %case5, %case4, %case3, %case2, %case1, %entry
  %merge = phi i27 [ %0, %entry ], [ %1, %case1 ], [ %2, %case2 ], [ %3, %case3 ], [ %4, %case4 ], [ %5, %case5 ], [ %6, %case6 ], [ %7, %case7 ], [ %8, %case8 ]
  ret i27 %merge

case1:                                            ; preds = %entry
  br label %case0

case2:                                            ; preds = %entry
  br label %case0

case3:                                            ; preds = %entry
  br label %case0

case4:                                            ; preds = %entry
  br label %case0

case5:                                            ; preds = %entry
  br label %case0

case6:                                            ; preds = %entry
  br label %case0

case7:                                            ; preds = %entry
  br label %case0

case8:                                            ; preds = %entry
  br label %case0
}

define weak i27 @_ssdm_op_Mux.ap_auto.16i27.i4(i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i27, i4) {
entry:
  switch i4 %16, label %case15 [
    i4 0, label %case0
    i4 1, label %case1
    i4 2, label %case2
    i4 3, label %case3
    i4 4, label %case4
    i4 5, label %case5
    i4 6, label %case6
    i4 7, label %case7
    i4 -8, label %case8
    i4 -7, label %case9
    i4 -6, label %case10
    i4 -5, label %case11
    i4 -4, label %case12
    i4 -3, label %case13
    i4 -2, label %case14
  ]

case0:                                            ; preds = %case15, %case14, %case13, %case12, %case11, %case10, %case9, %case8, %case7, %case6, %case5, %case4, %case3, %case2, %case1, %entry
  %merge = phi i27 [ %0, %entry ], [ %1, %case1 ], [ %2, %case2 ], [ %3, %case3 ], [ %4, %case4 ], [ %5, %case5 ], [ %6, %case6 ], [ %7, %case7 ], [ %8, %case8 ], [ %9, %case9 ], [ %10, %case10 ], [ %11, %case11 ], [ %12, %case12 ], [ %13, %case13 ], [ %14, %case14 ], [ %15, %case15 ]
  ret i27 %merge

case1:                                            ; preds = %entry
  br label %case0

case2:                                            ; preds = %entry
  br label %case0

case3:                                            ; preds = %entry
  br label %case0

case4:                                            ; preds = %entry
  br label %case0

case5:                                            ; preds = %entry
  br label %case0

case6:                                            ; preds = %entry
  br label %case0

case7:                                            ; preds = %entry
  br label %case0

case8:                                            ; preds = %entry
  br label %case0

case9:                                            ; preds = %entry
  br label %case0

case10:                                           ; preds = %entry
  br label %case0

case11:                                           ; preds = %entry
  br label %case0

case12:                                           ; preds = %entry
  br label %case0

case13:                                           ; preds = %entry
  br label %case0

case14:                                           ; preds = %entry
  br label %case0

case15:                                           ; preds = %entry
  br label %case0
}

define weak i1 @_ssdm_op_BitSelect.i1.i64.i32(i64, i32) nounwind readnone {
entry:
  %empty = zext i32 %1 to i64
  %empty_25 = shl i64 1, %empty
  %empty_26 = and i64 %0, %empty_25
  %empty_27 = icmp ne i64 %empty_26, 0
  ret i1 %empty_27
}

define weak i1 @_ssdm_op_BitSelect.i1.i50.i32(i50, i32) nounwind readnone {
entry:
  %empty = zext i32 %1 to i50
  %empty_28 = shl i50 1, %empty
  %empty_29 = and i50 %0, %empty_28
  %empty_30 = icmp ne i50 %empty_29, 0
  ret i1 %empty_30
}

define weak i1 @_ssdm_op_BitSelect.i1.i48.i32(i48, i32) nounwind readnone {
entry:
  %empty = zext i32 %1 to i48
  %empty_31 = shl i48 1, %empty
  %empty_32 = and i48 %0, %empty_31
  %empty_33 = icmp ne i48 %empty_32, 0
  ret i1 %empty_33
}

define weak i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5, i1) nounwind readnone {
entry:
  %empty = zext i5 %0 to i6
  %empty_34 = zext i1 %1 to i6
  %empty_35 = shl i6 %empty, 1
  %empty_36 = or i6 %empty_35, %empty_34
  ret i6 %empty_36
}

define weak i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1, i52) nounwind readnone {
entry:
  %empty = zext i1 %0 to i53
  %empty_37 = zext i52 %1 to i53
  %empty_38 = shl i53 %empty, 52
  %empty_39 = or i53 %empty_38, %empty_37
  ret i53 %empty_39
}

define weak i50 @_ssdm_op_BitConcatenate.i50.i49.i1(i49, i1) nounwind readnone {
entry:
  %empty = zext i49 %0 to i50
  %empty_40 = zext i1 %1 to i50
  %empty_41 = shl i50 %empty, 1
  %empty_42 = or i50 %empty_41, %empty_40
  ret i50 %empty_42
}

define weak i50 @_ssdm_op_BitConcatenate.i50.i25.i23.i2(i25, i23, i2) nounwind readnone {
entry:
  %empty = zext i23 %1 to i25
  %empty_43 = zext i2 %2 to i25
  %empty_44 = shl i25 %empty, 2
  %empty_45 = or i25 %empty_44, %empty_43
  %empty_46 = zext i25 %0 to i50
  %empty_47 = zext i25 %empty_45 to i50
  %empty_48 = shl i50 %empty_46, 25
  %empty_49 = or i50 %empty_48, %empty_47
  ret i50 %empty_49
}

define weak i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4, i1) nounwind readnone {
entry:
  %empty = zext i4 %0 to i5
  %empty_50 = zext i1 %1 to i5
  %empty_51 = shl i5 %empty, 1
  %empty_52 = or i5 %empty_51, %empty_50
  ret i5 %empty_52
}

define weak i48 @_ssdm_op_BitConcatenate.i48.i15.i33(i15, i33) nounwind readnone {
entry:
  %empty = zext i15 %0 to i48
  %empty_53 = zext i33 %1 to i48
  %empty_54 = shl i48 %empty, 33
  %empty_55 = or i48 %empty_54, %empty_53
  ret i48 %empty_55
}

define weak i41 @_ssdm_op_BitConcatenate.i41.i27.i14(i27, i14) nounwind readnone {
entry:
  %empty = zext i27 %0 to i41
  %empty_56 = zext i14 %1 to i41
  %empty_57 = shl i41 %empty, 14
  %empty_58 = or i41 %empty_57, %empty_56
  ret i41 %empty_58
}

define weak i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3, i1) nounwind readnone {
entry:
  %empty = zext i3 %0 to i4
  %empty_59 = zext i1 %1 to i4
  %empty_60 = shl i4 %empty, 1
  %empty_61 = or i4 %empty_60, %empty_59
  ret i4 %empty_61
}

define weak i3 @_ssdm_op_BitConcatenate.i3.i2.i1(i2, i1) nounwind readnone {
entry:
  %empty = zext i2 %0 to i3
  %empty_62 = zext i1 %1 to i3
  %empty_63 = shl i3 %empty, 1
  %empty_64 = or i3 %empty_63, %empty_62
  ret i3 %empty_64
}

define weak i270 @_ssdm_op_BitConcatenate.i270.i27.i27.i27.i27.i27.i27.i27.i27.i27.i27(i27, i27, i27, i27, i27, i27, i27, i27, i27, i27) nounwind readnone {
entry:
  %empty = zext i27 %8 to i54
  %empty_65 = zext i27 %9 to i54
  %empty_66 = shl i54 %empty, 27
  %empty_67 = or i54 %empty_66, %empty_65
  %empty_68 = zext i27 %7 to i81
  %empty_69 = zext i54 %empty_67 to i81
  %empty_70 = shl i81 %empty_68, 54
  %empty_71 = or i81 %empty_70, %empty_69
  %empty_72 = zext i27 %6 to i108
  %empty_73 = zext i81 %empty_71 to i108
  %empty_74 = shl i108 %empty_72, 81
  %empty_75 = or i108 %empty_74, %empty_73
  %empty_76 = zext i27 %5 to i135
  %empty_77 = zext i108 %empty_75 to i135
  %empty_78 = shl i135 %empty_76, 108
  %empty_79 = or i135 %empty_78, %empty_77
  %empty_80 = zext i27 %4 to i162
  %empty_81 = zext i135 %empty_79 to i162
  %empty_82 = shl i162 %empty_80, 135
  %empty_83 = or i162 %empty_82, %empty_81
  %empty_84 = zext i27 %3 to i189
  %empty_85 = zext i162 %empty_83 to i189
  %empty_86 = shl i189 %empty_84, 162
  %empty_87 = or i189 %empty_86, %empty_85
  %empty_88 = zext i27 %2 to i216
  %empty_89 = zext i189 %empty_87 to i216
  %empty_90 = shl i216 %empty_88, 189
  %empty_91 = or i216 %empty_90, %empty_89
  %empty_92 = zext i27 %1 to i243
  %empty_93 = zext i216 %empty_91 to i243
  %empty_94 = shl i243 %empty_92, 216
  %empty_95 = or i243 %empty_94, %empty_93
  %empty_96 = zext i27 %0 to i270
  %empty_97 = zext i243 %empty_95 to i270
  %empty_98 = shl i270 %empty_96, 243
  %empty_99 = or i270 %empty_98, %empty_97
  ret i270 %empty_99
}

define weak i26 @_ssdm_op_BitConcatenate.i26.i24.i2(i24, i2) nounwind readnone {
entry:
  %empty = zext i24 %0 to i26
  %empty_100 = zext i2 %1 to i26
  %empty_101 = shl i26 %empty, 2
  %empty_102 = or i26 %empty_101, %empty_100
  ret i26 %empty_102
}

define weak i26 @_ssdm_op_BitConcatenate.i26.i24.i1.i1(i24, i1, i1) nounwind readnone {
entry:
  %empty = zext i1 %1 to i2
  %empty_103 = zext i1 %2 to i2
  %empty_104 = shl i2 %empty, 1
  %empty_105 = or i2 %empty_104, %empty_103
  %empty_106 = zext i24 %0 to i26
  %empty_107 = zext i2 %empty_105 to i26
  %empty_108 = shl i26 %empty_106, 2
  %empty_109 = or i26 %empty_108, %empty_107
  ret i26 %empty_109
}

define weak i25 @_ssdm_op_BitConcatenate.i25.i24.i1(i24, i1) nounwind readnone {
entry:
  %empty = zext i24 %0 to i25
  %empty_110 = zext i1 %1 to i25
  %empty_111 = shl i25 %empty, 1
  %empty_112 = or i25 %empty_111, %empty_110
  ret i25 %empty_112
}

define weak i2 @_ssdm_op_BitConcatenate.i2.i1.i1(i1, i1) nounwind readnone {
entry:
  %empty = zext i1 %0 to i2
  %empty_113 = zext i1 %1 to i2
  %empty_114 = shl i2 %empty, 1
  %empty_115 = or i2 %empty_114, %empty_113
  ret i2 %empty_115
}

declare void @_GLOBAL__I_a() nounwind section ".text.startup"

!opencl.kernels = !{!0, !7, !13, !13, !17, !19, !19, !21, !27, !27, !30, !21, !32, !32, !34, !21, !36, !36, !21, !37, !21, !21, !21, !41, !41, !43, !43, !45, !21, !21, !21, !48, !36, !36, !51, !21, !21, !21, !53, !53, !55, !55, !57, !21, !21, !21, !21, !21, !21, !59, !21, !21, !21, !32, !32, !34, !59, !21, !61, !61, !21, !21, !63, !63, !63, !21, !63, !63, !63, !21, !21, !67, !70, !72, !75, !21, !21, !21, !21, !21, !77, !77, !77, !21, !21, !21, !21, !21, !0, !21, !21, !21, !79, !36, !36, !75, !21, !21, !21, !21, !21, !82, !83, !85, !85, !21, !87, !87, !89, !89, !21, !30, !30, !21, !21, !90, !90, !92, !93, !93, !95, !95, !30, !30, !21, !21, !96, !96, !21, !21, !21, !98, !101, !103, !21, !21, !21, !21, !21, !21, !21, !98, !59, !104, !104, !106, !108, !111, !114, !104, !116, !122, !21, !125, !126, !129, !129, !132, !135, !21, !125, !122, !137, !21, !21, !21, !139, !139, !141, !141, !21, !21, !143, !122, !145, !147, !148, !148, !150, !21, !125, !147, !152, !152, !154, !154, !155, !158, !160, !21, !21, !21, !162, !162, !164, !164, !166, !166, !21, !21, !168, !170, !162, !162, !172, !172, !21, !21, !173, !21, !162, !162, !154, !154, !174, !176, !179, !179, !185, !185, !185, !21, !21, !21, !21, !21, !21, !21, !21, !188, !103, !190, !21, !21, !43, !43, !21, !21, !21, !147, !192, !192, !194, !196, !196, !199, !199, !199, !21, !164, !164, !21, !21, !36, !36, !21, !201, !21, !164, !164, !21, !203, !201, !103, !190, !103, !205, !21, !207, !21, !125, !154, !154, !209, !21, !122, !125, !147, !211, !211, !213, !21, !21, !164, !164, !213, !215, !215, !201, !103, !217, !217, !217, !21, !219, !21, !21, !215, !215, !221, !21, !21, !125, !147, !223, !223, !122, !176, !225, !225, !227, !103, !229, !229, !21, !21, !21, !21, !231, !125, !232, !232, !176, !234, !234, !21, !125, !147, !236, !236, !147, !238, !238, !240, !21, !147, !242, !242, !244, !164, !164, !244, !246, !246, !248, !248, !250, !154, !154, !252, !21, !21, !21, !254, !254, !256, !257, !154, !154, !260, !126, !262, !262, !264, !21, !125, !266, !268, !271, !147, !273, !273, !275, !21, !277, !103, !279, !21, !21, !21, !281, !281, !283, !283, !285, !285, !21, !287, !289, !53, !53, !285, !285, !21, !21, !277, !103, !291, !21, !281, !281, !154, !154, !292, !176, !294, !294, !296, !296, !296, !21, !21, !21, !21, !61, !61, !154, !154, !298, !21, !21, !299, !21, !21, !21, !21, !21, !21, !21, !21, !21, !21, !21, !21, !21, !21, !21, !21, !21, !301, !301, !303, !154, !154, !21, !21, !303, !176, !176, !305, !305, !307, !307, !307, !21, !70, !70, !30, !21, !309, !21, !21, !21, !21, !21, !21, !21, !21, !21, !21, !93, !95, !95, !21, !96, !96, !21, !21, !93, !82, !21, !21, !311, !311, !311, !82, !30, !30, !21, !21, !313, !313, !313, !72, !0, !315, !315, !77, !77, !21, !30, !30, !21, !21, !316, !316}
!hls.encrypted.func = !{}
!llvm.map.gv = !{!318, !325, !330, !335, !340, !345, !350, !355, !360, !365, !372, !379, !386, !393, !400, !407, !414, !421, !428, !435, !440, !445, !450, !455, !460, !465, !470, !475, !480, !485, !490, !495, !500, !505, !510, !515, !520, !525, !530, !535, !540, !545, !550, !555, !560, !565, !570, !575, !580, !585, !590, !595, !600, !605, !610, !615, !620, !625, !630, !635, !640, !645, !650, !655, !660, !665, !670, !675, !680, !685, !690, !695, !700, !705, !710, !715, !720, !725, !730, !735, !740, !745, !750, !755, !760, !765, !770, !775, !780, !785, !790}

!0 = metadata !{null, metadata !1, metadata !2, metadata !3, metadata !4, metadata !5, metadata !6}
!1 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 0}
!2 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none"}
!3 = metadata !{metadata !"kernel_arg_type", metadata !"struct reb_particle_int*", metadata !"fx_coef_t"}
!4 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !""}
!5 = metadata !{metadata !"kernel_arg_name", metadata !"p_int", metadata !"dt"}
!6 = metadata !{metadata !"reqd_work_group_size", i32 1, i32 1, i32 1}
!7 = metadata !{null, metadata !8, metadata !9, metadata !10, metadata !11, metadata !12, metadata !6}
!8 = metadata !{metadata !"kernel_arg_addr_space", i32 1}
!9 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none"}
!10 = metadata !{metadata !"kernel_arg_type", metadata !"struct reb_particle*"}
!11 = metadata !{metadata !"kernel_arg_type_qual", metadata !""}
!12 = metadata !{metadata !"kernel_arg_name", metadata !"result"}
!13 = metadata !{null, metadata !14, metadata !9, metadata !15, metadata !11, metadata !16, metadata !6}
!14 = metadata !{metadata !"kernel_arg_addr_space", i32 0}
!15 = metadata !{metadata !"kernel_arg_type", metadata !"int"}
!16 = metadata !{metadata !"kernel_arg_name", metadata !"v"}
!17 = metadata !{null, metadata !14, metadata !9, metadata !15, metadata !11, metadata !18, metadata !6}
!18 = metadata !{metadata !"kernel_arg_name", metadata !"b"}
!19 = metadata !{null, metadata !14, metadata !9, metadata !15, metadata !11, metadata !20, metadata !6}
!20 = metadata !{metadata !"kernel_arg_name", metadata !"i_op"}
!21 = metadata !{null, metadata !22, metadata !23, metadata !24, metadata !25, metadata !26, metadata !6}
!22 = metadata !{metadata !"kernel_arg_addr_space"}
!23 = metadata !{metadata !"kernel_arg_access_qual"}
!24 = metadata !{metadata !"kernel_arg_type"}
!25 = metadata !{metadata !"kernel_arg_type_qual"}
!26 = metadata !{metadata !"kernel_arg_name"}
!27 = metadata !{null, metadata !14, metadata !9, metadata !28, metadata !11, metadata !29, metadata !6}
!28 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_fixed_base<32, 32, true, (enum ap_q_mode)5, (enum ap_o_mode)3, 0> &"}
!29 = metadata !{metadata !"kernel_arg_name", metadata !"op"}
!30 = metadata !{null, metadata !14, metadata !9, metadata !31, metadata !11, metadata !29, metadata !6}
!31 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_fixed_base<27, 13, true, (enum ap_q_mode)5, (enum ap_o_mode)3, 0> &"}
!32 = metadata !{null, metadata !14, metadata !9, metadata !33, metadata !11, metadata !16, metadata !6}
!33 = metadata !{metadata !"kernel_arg_type", metadata !"double"}
!34 = metadata !{null, metadata !14, metadata !9, metadata !33, metadata !11, metadata !35, metadata !6}
!35 = metadata !{metadata !"kernel_arg_name", metadata !"d"}
!36 = metadata !{null, metadata !14, metadata !9, metadata !15, metadata !11, metadata !29, metadata !6}
!37 = metadata !{null, metadata !38, metadata !2, metadata !39, metadata !4, metadata !40, metadata !6}
!38 = metadata !{metadata !"kernel_arg_addr_space", i32 0, i32 0}
!39 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<1, false> &", metadata !"const ap_int_base<54, true> &"}
!40 = metadata !{metadata !"kernel_arg_name", metadata !"op", metadata !"op2"}
!41 = metadata !{null, metadata !14, metadata !9, metadata !42, metadata !11, metadata !29, metadata !6}
!42 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<54, true> &"}
!43 = metadata !{null, metadata !14, metadata !9, metadata !44, metadata !11, metadata !29, metadata !6}
!44 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<1, false> &"}
!45 = metadata !{null, metadata !14, metadata !9, metadata !46, metadata !11, metadata !47, metadata !6}
!46 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<55, true> &"}
!47 = metadata !{metadata !"kernel_arg_name", metadata !"op2"}
!48 = metadata !{null, metadata !38, metadata !2, metadata !49, metadata !4, metadata !50, metadata !6}
!49 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<11, false> &", metadata !"int"}
!50 = metadata !{metadata !"kernel_arg_name", metadata !"op", metadata !"i_op"}
!51 = metadata !{null, metadata !38, metadata !2, metadata !52, metadata !4, metadata !40, metadata !6}
!52 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<11, false> &", metadata !"const ap_int_base<32, true> &"}
!53 = metadata !{null, metadata !14, metadata !9, metadata !54, metadata !11, metadata !29, metadata !6}
!54 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<32, true> &"}
!55 = metadata !{null, metadata !14, metadata !9, metadata !56, metadata !11, metadata !29, metadata !6}
!56 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<11, false> &"}
!57 = metadata !{null, metadata !14, metadata !9, metadata !58, metadata !11, metadata !47, metadata !6}
!58 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<33, true> &"}
!59 = metadata !{null, metadata !14, metadata !9, metadata !33, metadata !11, metadata !60, metadata !6}
!60 = metadata !{metadata !"kernel_arg_name", metadata !"pf"}
!61 = metadata !{null, metadata !14, metadata !9, metadata !62, metadata !11, metadata !29, metadata !6}
!62 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int<72> &"}
!63 = metadata !{null, metadata !1, metadata !2, metadata !64, metadata !65, metadata !66, metadata !6}
!64 = metadata !{metadata !"kernel_arg_type", metadata !"char*", metadata !"signed char"}
!65 = metadata !{metadata !"kernel_arg_type_qual", metadata !"const", metadata !""}
!66 = metadata !{metadata !"kernel_arg_name", metadata !"str", metadata !"radix"}
!67 = metadata !{null, metadata !14, metadata !9, metadata !68, metadata !11, metadata !69, metadata !6}
!68 = metadata !{metadata !"kernel_arg_type", metadata !"const struct reb_particle &"}
!69 = metadata !{metadata !"kernel_arg_name", metadata !""}
!70 = metadata !{null, metadata !14, metadata !9, metadata !71, metadata !11, metadata !29, metadata !6}
!71 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_fixed<27, 13, (enum ap_q_mode)5, (enum ap_o_mode)3, 0> &"}
!72 = metadata !{null, metadata !8, metadata !9, metadata !73, metadata !11, metadata !74, metadata !6}
!73 = metadata !{metadata !"kernel_arg_type", metadata !"struct reb_particle_int*"}
!74 = metadata !{metadata !"kernel_arg_name", metadata !"p_int"}
!75 = metadata !{null, metadata !14, metadata !9, metadata !76, metadata !11, metadata !47, metadata !6}
!76 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_fixed_base<18, 10, true, (enum ap_q_mode)5, (enum ap_o_mode)3, 0> &"}
!77 = metadata !{null, metadata !14, metadata !9, metadata !78, metadata !11, metadata !29, metadata !6}
!78 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_fixed_base<45, 23, true, (enum ap_q_mode)5, (enum ap_o_mode)3, 0> &"}
!79 = metadata !{null, metadata !14, metadata !9, metadata !80, metadata !11, metadata !81, metadata !6}
!80 = metadata !{metadata !"kernel_arg_type", metadata !"_Bool"}
!81 = metadata !{metadata !"kernel_arg_name", metadata !"Cnative"}
!82 = metadata !{null, metadata !14, metadata !9, metadata !31, metadata !11, metadata !47, metadata !6}
!83 = metadata !{null, metadata !38, metadata !2, metadata !84, metadata !4, metadata !50, metadata !6}
!84 = metadata !{metadata !"kernel_arg_type", metadata !"ap_fixed_base<27, 13, true, (enum ap_q_mode)5, (enum ap_o_mode)3, 0> &", metadata !"long"}
!85 = metadata !{null, metadata !14, metadata !9, metadata !86, metadata !11, metadata !20, metadata !6}
!86 = metadata !{metadata !"kernel_arg_type", metadata !"long"}
!87 = metadata !{null, metadata !14, metadata !9, metadata !88, metadata !11, metadata !47, metadata !6}
!88 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_fixed_base<64, 64, true, (enum ap_q_mode)5, (enum ap_o_mode)3, 0> &"}
!89 = metadata !{null, metadata !14, metadata !9, metadata !88, metadata !11, metadata !29, metadata !6}
!90 = metadata !{null, metadata !14, metadata !9, metadata !91, metadata !11, metadata !29, metadata !6}
!91 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_fixed_base<79, 65, true, (enum ap_q_mode)5, (enum ap_o_mode)3, 0> &"}
!92 = metadata !{void ()* @gravity, metadata !22, metadata !23, metadata !24, metadata !25, metadata !26, metadata !6}
!93 = metadata !{null, metadata !14, metadata !9, metadata !94, metadata !11, metadata !47, metadata !6}
!94 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_fixed_base<54, 26, true, (enum ap_q_mode)5, (enum ap_o_mode)3, 0> &"}
!95 = metadata !{null, metadata !14, metadata !9, metadata !94, metadata !11, metadata !29, metadata !6}
!96 = metadata !{null, metadata !14, metadata !9, metadata !97, metadata !11, metadata !29, metadata !6}
!97 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_fixed_base<55, 27, true, (enum ap_q_mode)5, (enum ap_o_mode)3, 0> &"}
!98 = metadata !{null, metadata !14, metadata !9, metadata !99, metadata !11, metadata !100, metadata !6}
!99 = metadata !{metadata !"kernel_arg_type", metadata !"ulong long"}
!100 = metadata !{metadata !"kernel_arg_name", metadata !"pi"}
!101 = metadata !{null, metadata !38, metadata !2, metadata !102, metadata !4, metadata !40, metadata !6}
!102 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<11, true> &", metadata !"int"}
!103 = metadata !{null, metadata !14, metadata !9, metadata !54, metadata !11, metadata !47, metadata !6}
!104 = metadata !{null, metadata !14, metadata !9, metadata !105, metadata !11, metadata !29, metadata !6}
!105 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_ufixed<25, 1, (enum ap_q_mode)6, (enum ap_o_mode)3, 0> &"}
!106 = metadata !{null, metadata !14, metadata !9, metadata !107, metadata !11, metadata !29, metadata !6}
!107 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_fixed_base<25, 1, false, (enum ap_q_mode)6, (enum ap_o_mode)3, 0> &"}
!108 = metadata !{null, metadata !38, metadata !2, metadata !109, metadata !4, metadata !110, metadata !6}
!109 = metadata !{metadata !"kernel_arg_type", metadata !"const typename sqrt_input<48, 1>::in &", metadata !"typename sqrt_output<25, 1>::out &"}
!110 = metadata !{metadata !"kernel_arg_name", metadata !"x", metadata !"sqrtX"}
!111 = metadata !{null, metadata !38, metadata !2, metadata !112, metadata !4, metadata !113, metadata !6}
!112 = metadata !{metadata !"kernel_arg_type", metadata !"const cordic_inputs<48, 6, 1> &", metadata !"cordic_outputs<25, 6, 1> &"}
!113 = metadata !{metadata !"kernel_arg_name", metadata !"inputData", metadata !"outputData"}
!114 = metadata !{null, metadata !14, metadata !9, metadata !115, metadata !11, metadata !69, metadata !6}
!115 = metadata !{metadata !"kernel_arg_type", metadata !"const struct hls::cordic_outputs<25, 6, 1> &"}
!116 = metadata !{null, metadata !117, metadata !118, metadata !119, metadata !120, metadata !121, metadata !6}
!117 = metadata !{metadata !"kernel_arg_addr_space", i32 0, i32 0, i32 0, i32 0}
!118 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none", metadata !"none", metadata !"none"}
!119 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int<25>", metadata !"ap_int<25>", metadata !"ap_int<25>", metadata !"cordic_outputs<25, CORDIC_F_SQRT, 1> &"}
!120 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"", metadata !"", metadata !""}
!121 = metadata !{metadata !"kernel_arg_name", metadata !"data_x_outp", metadata !"data_y_outp", metadata !"phase_outp", metadata !"dout"}
!122 = metadata !{null, metadata !14, metadata !9, metadata !123, metadata !11, metadata !124, metadata !6}
!123 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_bit_ref<25, true> &"}
!124 = metadata !{metadata !"kernel_arg_name", metadata !"val"}
!125 = metadata !{null, metadata !14, metadata !9, metadata !99, metadata !11, metadata !124, metadata !6}
!126 = metadata !{null, metadata !14, metadata !9, metadata !127, metadata !11, metadata !128, metadata !6}
!127 = metadata !{metadata !"kernel_arg_type", metadata !"uint"}
!128 = metadata !{metadata !"kernel_arg_name", metadata !"index"}
!129 = metadata !{null, metadata !1, metadata !2, metadata !130, metadata !4, metadata !131, metadata !6}
!130 = metadata !{metadata !"kernel_arg_type", metadata !"ap_fixed_base<25, 1, false, (enum ap_q_mode)6, (enum ap_o_mode)3, 0>*", metadata !"int"}
!131 = metadata !{metadata !"kernel_arg_name", metadata !"bv", metadata !"index"}
!132 = metadata !{null, metadata !14, metadata !9, metadata !133, metadata !11, metadata !134, metadata !6}
!133 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int<48>"}
!134 = metadata !{metadata !"kernel_arg_name", metadata !"data_in"}
!135 = metadata !{null, metadata !38, metadata !2, metadata !136, metadata !4, metadata !40, metadata !6}
!136 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_bit_ref<50, true> &", metadata !"int"}
!137 = metadata !{null, metadata !38, metadata !2, metadata !138, metadata !4, metadata !40, metadata !6}
!138 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<50, true> &", metadata !"const ap_int_base<50, true> &"}
!139 = metadata !{null, metadata !14, metadata !9, metadata !140, metadata !11, metadata !29, metadata !6}
!140 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<50, true> &"}
!141 = metadata !{null, metadata !14, metadata !9, metadata !142, metadata !11, metadata !29, metadata !6}
!142 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<51, true> &"}
!143 = metadata !{null, metadata !14, metadata !9, metadata !144, metadata !11, metadata !47, metadata !6}
!144 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int<50> &"}
!145 = metadata !{null, metadata !14, metadata !9, metadata !146, metadata !11, metadata !124, metadata !6}
!146 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_bit_ref<50, true> &"}
!147 = metadata !{null, metadata !14, metadata !9, metadata !15, metadata !11, metadata !128, metadata !6}
!148 = metadata !{null, metadata !1, metadata !2, metadata !149, metadata !4, metadata !131, metadata !6}
!149 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<48, true>*", metadata !"int"}
!150 = metadata !{null, metadata !14, metadata !9, metadata !151, metadata !11, metadata !124, metadata !6}
!151 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_bit_ref<48, true> &"}
!152 = metadata !{null, metadata !1, metadata !2, metadata !153, metadata !4, metadata !131, metadata !6}
!153 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<50, true>*", metadata !"int"}
!154 = metadata !{null, metadata !14, metadata !9, metadata !15, metadata !11, metadata !124, metadata !6}
!155 = metadata !{null, metadata !117, metadata !118, metadata !156, metadata !120, metadata !157, metadata !6}
!156 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int<25>", metadata !"int", metadata !"int", metadata !"int"}
!157 = metadata !{metadata !"kernel_arg_name", metadata !"a", metadata !"len", metadata !"mode", metadata !"precision"}
!158 = metadata !{null, metadata !38, metadata !2, metadata !159, metadata !4, metadata !40, metadata !6}
!159 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_bit_ref<25, true> &", metadata !"int"}
!160 = metadata !{null, metadata !38, metadata !2, metadata !161, metadata !4, metadata !40, metadata !6}
!161 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<25, true> &", metadata !"const ap_int_base<26, false> &"}
!162 = metadata !{null, metadata !14, metadata !9, metadata !163, metadata !11, metadata !29, metadata !6}
!163 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<26, false> &"}
!164 = metadata !{null, metadata !14, metadata !9, metadata !165, metadata !11, metadata !29, metadata !6}
!165 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<25, true> &"}
!166 = metadata !{null, metadata !14, metadata !9, metadata !167, metadata !11, metadata !29, metadata !6}
!167 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<28, true> &"}
!168 = metadata !{null, metadata !38, metadata !2, metadata !169, metadata !4, metadata !50, metadata !6}
!169 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<26, false> &", metadata !"int"}
!170 = metadata !{null, metadata !38, metadata !2, metadata !171, metadata !4, metadata !40, metadata !6}
!171 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<26, false> &", metadata !"const ap_int_base<32, true> &"}
!172 = metadata !{null, metadata !14, metadata !9, metadata !58, metadata !11, metadata !29, metadata !6}
!173 = metadata !{null, metadata !38, metadata !2, metadata !169, metadata !4, metadata !40, metadata !6}
!174 = metadata !{null, metadata !14, metadata !9, metadata !175, metadata !11, metadata !47, metadata !6}
!175 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_uint<26> &"}
!176 = metadata !{null, metadata !38, metadata !2, metadata !177, metadata !4, metadata !178, metadata !6}
!177 = metadata !{metadata !"kernel_arg_type", metadata !"int", metadata !"int"}
!178 = metadata !{metadata !"kernel_arg_name", metadata !"Hi", metadata !"Lo"}
!179 = metadata !{null, metadata !180, metadata !181, metadata !182, metadata !183, metadata !184, metadata !6}
!180 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 0, i32 0}
!181 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none", metadata !"none"}
!182 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<25, true>*", metadata !"int", metadata !"int"}
!183 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"", metadata !""}
!184 = metadata !{metadata !"kernel_arg_name", metadata !"bv", metadata !"h", metadata !"l"}
!185 = metadata !{null, metadata !14, metadata !9, metadata !186, metadata !11, metadata !187, metadata !6}
!186 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_range_ref<25, true> &"}
!187 = metadata !{metadata !"kernel_arg_name", metadata !"ref"}
!188 = metadata !{null, metadata !38, metadata !2, metadata !189, metadata !4, metadata !40, metadata !6}
!189 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<2, false> &", metadata !"int"}
!190 = metadata !{null, metadata !38, metadata !2, metadata !191, metadata !4, metadata !40, metadata !6}
!191 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<1, false> &", metadata !"int"}
!192 = metadata !{null, metadata !1, metadata !2, metadata !193, metadata !4, metadata !131, metadata !6}
!193 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<1, false>*", metadata !"int"}
!194 = metadata !{null, metadata !14, metadata !9, metadata !44, metadata !11, metadata !195, metadata !6}
!195 = metadata !{metadata !"kernel_arg_name", metadata !"a2"}
!196 = metadata !{null, metadata !38, metadata !2, metadata !197, metadata !4, metadata !198, metadata !6}
!197 = metadata !{metadata !"kernel_arg_type", metadata !"struct ap_int_base<25, true, true> &", metadata !"struct ap_int_base<1, false, true> &"}
!198 = metadata !{metadata !"kernel_arg_name", metadata !"bv1", metadata !"bv2"}
!199 = metadata !{null, metadata !14, metadata !9, metadata !200, metadata !11, metadata !187, metadata !6}
!200 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_concat_ref<25, struct ap_int_base<25, true, true>, 1, struct ap_int_base<1, false, true> > &"}
!201 = metadata !{null, metadata !38, metadata !2, metadata !202, metadata !4, metadata !40, metadata !6}
!202 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<25, true> &", metadata !"int"}
!203 = metadata !{null, metadata !38, metadata !2, metadata !177, metadata !4, metadata !204, metadata !6}
!204 = metadata !{metadata !"kernel_arg_name", metadata !"i", metadata !"transform_type"}
!205 = metadata !{null, metadata !14, metadata !9, metadata !206, metadata !11, metadata !47, metadata !6}
!206 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_uint<1> &"}
!207 = metadata !{null, metadata !14, metadata !9, metadata !208, metadata !11, metadata !124, metadata !6}
!208 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_bit_ref<2, false> &"}
!209 = metadata !{null, metadata !14, metadata !9, metadata !210, metadata !11, metadata !47, metadata !6}
!210 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_uint<2> &"}
!211 = metadata !{null, metadata !1, metadata !2, metadata !212, metadata !4, metadata !131, metadata !6}
!212 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<3, false>*", metadata !"int"}
!213 = metadata !{null, metadata !38, metadata !2, metadata !214, metadata !4, metadata !40, metadata !6}
!214 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<25, true> &", metadata !"const ap_int_base<25, true> &"}
!215 = metadata !{null, metadata !14, metadata !9, metadata !216, metadata !11, metadata !29, metadata !6}
!216 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<26, true> &"}
!217 = metadata !{null, metadata !14, metadata !9, metadata !218, metadata !11, metadata !187, metadata !6}
!218 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_range_ref<26, true> &"}
!219 = metadata !{null, metadata !38, metadata !2, metadata !220, metadata !4, metadata !40, metadata !6}
!220 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<26, true> &", metadata !"const ap_int_base<26, true> &"}
!221 = metadata !{null, metadata !14, metadata !9, metadata !222, metadata !11, metadata !124, metadata !6}
!222 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_bit_ref<4, false> &"}
!223 = metadata !{null, metadata !1, metadata !2, metadata !224, metadata !4, metadata !131, metadata !6}
!224 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<25, true>*", metadata !"int"}
!225 = metadata !{null, metadata !180, metadata !181, metadata !226, metadata !183, metadata !184, metadata !6}
!226 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<4, false>*", metadata !"int", metadata !"int"}
!227 = metadata !{null, metadata !38, metadata !2, metadata !228, metadata !4, metadata !40, metadata !6}
!228 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_range_ref<4, false> &", metadata !"int"}
!229 = metadata !{null, metadata !14, metadata !9, metadata !230, metadata !11, metadata !187, metadata !6}
!230 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_range_ref<4, false> &"}
!231 = metadata !{null, metadata !14, metadata !9, metadata !44, metadata !11, metadata !124, metadata !6}
!232 = metadata !{null, metadata !14, metadata !9, metadata !233, metadata !11, metadata !29, metadata !6}
!233 = metadata !{metadata !"kernel_arg_type", metadata !"ap_ulong"}
!234 = metadata !{null, metadata !180, metadata !181, metadata !235, metadata !183, metadata !184, metadata !6}
!235 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<26, true>*", metadata !"int", metadata !"int"}
!236 = metadata !{null, metadata !1, metadata !2, metadata !237, metadata !4, metadata !131, metadata !6}
!237 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<2, false>*", metadata !"int"}
!238 = metadata !{null, metadata !1, metadata !2, metadata !239, metadata !4, metadata !131, metadata !6}
!239 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<26, true>*", metadata !"int"}
!240 = metadata !{null, metadata !14, metadata !9, metadata !241, metadata !11, metadata !124, metadata !6}
!241 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_bit_ref<26, true> &"}
!242 = metadata !{null, metadata !1, metadata !2, metadata !243, metadata !4, metadata !131, metadata !6}
!243 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<4, false>*", metadata !"int"}
!244 = metadata !{null, metadata !38, metadata !2, metadata !245, metadata !4, metadata !40, metadata !6}
!245 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<26, true> &", metadata !"const ap_int_base<25, true> &"}
!246 = metadata !{null, metadata !14, metadata !9, metadata !247, metadata !11, metadata !29, metadata !6}
!247 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<27, true> &"}
!248 = metadata !{null, metadata !14, metadata !9, metadata !249, metadata !11, metadata !29, metadata !6}
!249 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int<25> &"}
!250 = metadata !{null, metadata !14, metadata !9, metadata !251, metadata !11, metadata !47, metadata !6}
!251 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int<26> &"}
!252 = metadata !{null, metadata !38, metadata !2, metadata !253, metadata !4, metadata !40, metadata !6}
!253 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<48, true> &", metadata !"int"}
!254 = metadata !{null, metadata !14, metadata !9, metadata !255, metadata !11, metadata !29, metadata !6}
!255 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<48, true> &"}
!256 = metadata !{null, metadata !14, metadata !9, metadata !249, metadata !11, metadata !47, metadata !6}
!257 = metadata !{null, metadata !117, metadata !118, metadata !258, metadata !120, metadata !259, metadata !6}
!258 = metadata !{metadata !"kernel_arg_type", metadata !"cordic_inputs<48, CORDIC_F_SQRT, 1>", metadata !"ap_int<48> &", metadata !"ap_int<48> &", metadata !"ap_int<48> &"}
!259 = metadata !{metadata !"kernel_arg_name", metadata !"din", metadata !"x_in", metadata !"y_in", metadata !"phase_in"}
!260 = metadata !{null, metadata !14, metadata !9, metadata !261, metadata !11, metadata !47, metadata !6}
!261 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int<48> &"}
!262 = metadata !{null, metadata !1, metadata !2, metadata !263, metadata !4, metadata !131, metadata !6}
!263 = metadata !{metadata !"kernel_arg_type", metadata !"ap_fixed_base<48, 1, false, (enum ap_q_mode)6, (enum ap_o_mode)3, 0>*", metadata !"int"}
!264 = metadata !{null, metadata !14, metadata !9, metadata !265, metadata !11, metadata !124, metadata !6}
!265 = metadata !{metadata !"kernel_arg_type", metadata !"const af_bit_ref<48, 1, false, (enum ap_q_mode)6, (enum ap_o_mode)3, 0> &"}
!266 = metadata !{null, metadata !14, metadata !9, metadata !267, metadata !11, metadata !69, metadata !6}
!267 = metadata !{metadata !"kernel_arg_type", metadata !"const struct hls::cordic_inputs<48, 6, 1> &"}
!268 = metadata !{null, metadata !8, metadata !9, metadata !269, metadata !11, metadata !270, metadata !6}
!269 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int<c_precision_int<6, false, 1, 48, 0, 25, 0, 0>::prec>*"}
!270 = metadata !{metadata !"kernel_arg_name", metadata !"eng_rom_vect"}
!271 = metadata !{null, metadata !117, metadata !118, metadata !272, metadata !120, metadata !157, metadata !6}
!272 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int<72>", metadata !"int", metadata !"int", metadata !"int"}
!273 = metadata !{null, metadata !1, metadata !2, metadata !274, metadata !4, metadata !131, metadata !6}
!274 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<72, true>*", metadata !"int"}
!275 = metadata !{null, metadata !38, metadata !2, metadata !276, metadata !4, metadata !40, metadata !6}
!276 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_bit_ref<72, true> &", metadata !"int"}
!277 = metadata !{null, metadata !38, metadata !2, metadata !278, metadata !4, metadata !40, metadata !6}
!278 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<72, true> &", metadata !"int"}
!279 = metadata !{null, metadata !38, metadata !2, metadata !280, metadata !4, metadata !40, metadata !6}
!280 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<72, true> &", metadata !"const ap_int_base<73, false> &"}
!281 = metadata !{null, metadata !14, metadata !9, metadata !282, metadata !11, metadata !29, metadata !6}
!282 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<73, false> &"}
!283 = metadata !{null, metadata !14, metadata !9, metadata !284, metadata !11, metadata !29, metadata !6}
!284 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<72, true> &"}
!285 = metadata !{null, metadata !14, metadata !9, metadata !286, metadata !11, metadata !29, metadata !6}
!286 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<75, true> &"}
!287 = metadata !{null, metadata !38, metadata !2, metadata !288, metadata !4, metadata !50, metadata !6}
!288 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<73, false> &", metadata !"int"}
!289 = metadata !{null, metadata !38, metadata !2, metadata !290, metadata !4, metadata !40, metadata !6}
!290 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<73, false> &", metadata !"const ap_int_base<32, true> &"}
!291 = metadata !{null, metadata !38, metadata !2, metadata !288, metadata !4, metadata !40, metadata !6}
!292 = metadata !{null, metadata !14, metadata !9, metadata !293, metadata !11, metadata !47, metadata !6}
!293 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_uint<73> &"}
!294 = metadata !{null, metadata !180, metadata !181, metadata !295, metadata !183, metadata !184, metadata !6}
!295 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<72, true>*", metadata !"int", metadata !"int"}
!296 = metadata !{null, metadata !14, metadata !9, metadata !297, metadata !11, metadata !187, metadata !6}
!297 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_range_ref<72, true> &"}
!298 = metadata !{null, metadata !14, metadata !9, metadata !62, metadata !11, metadata !47, metadata !6}
!299 = metadata !{null, metadata !38, metadata !2, metadata !177, metadata !4, metadata !300, metadata !6}
!300 = metadata !{metadata !"kernel_arg_name", metadata !"cordic_function", metadata !"phase_format"}
!301 = metadata !{null, metadata !14, metadata !9, metadata !302, metadata !11, metadata !29, metadata !6}
!302 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_uint<72> &"}
!303 = metadata !{null, metadata !14, metadata !9, metadata !15, metadata !11, metadata !304, metadata !6}
!304 = metadata !{metadata !"kernel_arg_name", metadata !"cordic_func"}
!305 = metadata !{null, metadata !180, metadata !181, metadata !306, metadata !183, metadata !184, metadata !6}
!306 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<72, false>*", metadata !"int", metadata !"int"}
!307 = metadata !{null, metadata !14, metadata !9, metadata !308, metadata !11, metadata !187, metadata !6}
!308 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_range_ref<72, false> &"}
!309 = metadata !{null, metadata !14, metadata !9, metadata !310, metadata !11, metadata !29, metadata !6}
!310 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_ufixed<48, 1, (enum ap_q_mode)6, (enum ap_o_mode)3, 0> &"}
!311 = metadata !{null, metadata !14, metadata !9, metadata !312, metadata !11, metadata !29, metadata !6}
!312 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_fixed_base<56, 28, true, (enum ap_q_mode)5, (enum ap_o_mode)3, 0> &"}
!313 = metadata !{null, metadata !14, metadata !9, metadata !314, metadata !11, metadata !29, metadata !6}
!314 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_fixed_base<28, 14, true, (enum ap_q_mode)5, (enum ap_o_mode)3, 0> &"}
!315 = metadata !{null, metadata !14, metadata !9, metadata !78, metadata !11, metadata !47, metadata !6}
!316 = metadata !{null, metadata !14, metadata !9, metadata !317, metadata !11, metadata !29, metadata !6}
!317 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_fixed_base<46, 24, true, (enum ap_q_mode)5, (enum ap_o_mode)3, 0> &"}
!318 = metadata !{metadata !319, [9 x i27]* @p_z_V}
!319 = metadata !{metadata !320}
!320 = metadata !{i32 0, i32 26, metadata !321}
!321 = metadata !{metadata !322}
!322 = metadata !{metadata !"p.z.V", metadata !323, metadata !"int27", i32 0, i32 26}
!323 = metadata !{metadata !324}
!324 = metadata !{i32 0, i32 8, i32 1}
!325 = metadata !{metadata !326, [9 x i27]* @p_y_V}
!326 = metadata !{metadata !327}
!327 = metadata !{i32 0, i32 26, metadata !328}
!328 = metadata !{metadata !329}
!329 = metadata !{metadata !"p.y.V", metadata !323, metadata !"int27", i32 0, i32 26}
!330 = metadata !{metadata !331, [9 x i27]* @p_x_V}
!331 = metadata !{metadata !332}
!332 = metadata !{i32 0, i32 26, metadata !333}
!333 = metadata !{metadata !334}
!334 = metadata !{metadata !"p.x.V", metadata !323, metadata !"int27", i32 0, i32 26}
!335 = metadata !{metadata !336, [9 x i27]* @p_vz_V}
!336 = metadata !{metadata !337}
!337 = metadata !{i32 0, i32 26, metadata !338}
!338 = metadata !{metadata !339}
!339 = metadata !{metadata !"p.vz.V", metadata !323, metadata !"int27", i32 0, i32 26}
!340 = metadata !{metadata !341, [9 x i27]* @p_vy_V}
!341 = metadata !{metadata !342}
!342 = metadata !{i32 0, i32 26, metadata !343}
!343 = metadata !{metadata !344}
!344 = metadata !{metadata !"p.vy.V", metadata !323, metadata !"int27", i32 0, i32 26}
!345 = metadata !{metadata !346, [9 x i27]* @p_vx_V}
!346 = metadata !{metadata !347}
!347 = metadata !{i32 0, i32 26, metadata !348}
!348 = metadata !{metadata !349}
!349 = metadata !{metadata !"p.vx.V", metadata !323, metadata !"int27", i32 0, i32 26}
!350 = metadata !{metadata !351, [9 x i27]* @p_az_V}
!351 = metadata !{metadata !352}
!352 = metadata !{i32 0, i32 26, metadata !353}
!353 = metadata !{metadata !354}
!354 = metadata !{metadata !"p.az.V", metadata !323, metadata !"int27", i32 0, i32 26}
!355 = metadata !{metadata !356, [9 x i27]* @p_ay_V}
!356 = metadata !{metadata !357}
!357 = metadata !{i32 0, i32 26, metadata !358}
!358 = metadata !{metadata !359}
!359 = metadata !{metadata !"p.ay.V", metadata !323, metadata !"int27", i32 0, i32 26}
!360 = metadata !{metadata !361, [9 x i27]* @p_ax_V}
!361 = metadata !{metadata !362}
!362 = metadata !{i32 0, i32 26, metadata !363}
!363 = metadata !{metadata !364}
!364 = metadata !{metadata !"p.ax.V", metadata !323, metadata !"int27", i32 0, i32 26}
!365 = metadata !{metadata !366, [1 x i32]* @llvm_global_ctors_0}
!366 = metadata !{metadata !367}
!367 = metadata !{i32 0, i32 31, metadata !368}
!368 = metadata !{metadata !369}
!369 = metadata !{metadata !"llvm.global_ctors.0", metadata !370, metadata !"", i32 0, i32 31}
!370 = metadata !{metadata !371}
!371 = metadata !{i32 0, i32 0, i32 1}
!372 = metadata !{metadata !373, i27* @p_x_V_0}
!373 = metadata !{metadata !374}
!374 = metadata !{i32 0, i32 26, metadata !375}
!375 = metadata !{metadata !376}
!376 = metadata !{metadata !"p.x.V", metadata !377, metadata !"int27", i32 0, i32 26}
!377 = metadata !{metadata !378}
!378 = metadata !{i32 0, i32 0, i32 2}
!379 = metadata !{metadata !380, i27* @p_x_V_1}
!380 = metadata !{metadata !381}
!381 = metadata !{i32 0, i32 26, metadata !382}
!382 = metadata !{metadata !383}
!383 = metadata !{metadata !"p.x.V", metadata !384, metadata !"int27", i32 0, i32 26}
!384 = metadata !{metadata !385}
!385 = metadata !{i32 1, i32 1, i32 2}
!386 = metadata !{metadata !387, i27* @p_x_V_2}
!387 = metadata !{metadata !388}
!388 = metadata !{i32 0, i32 26, metadata !389}
!389 = metadata !{metadata !390}
!390 = metadata !{metadata !"p.x.V", metadata !391, metadata !"int27", i32 0, i32 26}
!391 = metadata !{metadata !392}
!392 = metadata !{i32 2, i32 2, i32 2}
!393 = metadata !{metadata !394, i27* @p_x_V_3}
!394 = metadata !{metadata !395}
!395 = metadata !{i32 0, i32 26, metadata !396}
!396 = metadata !{metadata !397}
!397 = metadata !{metadata !"p.x.V", metadata !398, metadata !"int27", i32 0, i32 26}
!398 = metadata !{metadata !399}
!399 = metadata !{i32 3, i32 3, i32 2}
!400 = metadata !{metadata !401, i27* @p_x_V_4}
!401 = metadata !{metadata !402}
!402 = metadata !{i32 0, i32 26, metadata !403}
!403 = metadata !{metadata !404}
!404 = metadata !{metadata !"p.x.V", metadata !405, metadata !"int27", i32 0, i32 26}
!405 = metadata !{metadata !406}
!406 = metadata !{i32 4, i32 4, i32 2}
!407 = metadata !{metadata !408, i27* @p_x_V_5}
!408 = metadata !{metadata !409}
!409 = metadata !{i32 0, i32 26, metadata !410}
!410 = metadata !{metadata !411}
!411 = metadata !{metadata !"p.x.V", metadata !412, metadata !"int27", i32 0, i32 26}
!412 = metadata !{metadata !413}
!413 = metadata !{i32 5, i32 5, i32 2}
!414 = metadata !{metadata !415, i27* @p_x_V_6}
!415 = metadata !{metadata !416}
!416 = metadata !{i32 0, i32 26, metadata !417}
!417 = metadata !{metadata !418}
!418 = metadata !{metadata !"p.x.V", metadata !419, metadata !"int27", i32 0, i32 26}
!419 = metadata !{metadata !420}
!420 = metadata !{i32 6, i32 6, i32 2}
!421 = metadata !{metadata !422, i27* @p_x_V_7}
!422 = metadata !{metadata !423}
!423 = metadata !{i32 0, i32 26, metadata !424}
!424 = metadata !{metadata !425}
!425 = metadata !{metadata !"p.x.V", metadata !426, metadata !"int27", i32 0, i32 26}
!426 = metadata !{metadata !427}
!427 = metadata !{i32 7, i32 7, i32 2}
!428 = metadata !{metadata !429, i27* @p_x_V_8}
!429 = metadata !{metadata !430}
!430 = metadata !{i32 0, i32 26, metadata !431}
!431 = metadata !{metadata !432}
!432 = metadata !{metadata !"p.x.V", metadata !433, metadata !"int27", i32 0, i32 26}
!433 = metadata !{metadata !434}
!434 = metadata !{i32 8, i32 8, i32 2}
!435 = metadata !{metadata !436, i27* @p_y_V_0}
!436 = metadata !{metadata !437}
!437 = metadata !{i32 0, i32 26, metadata !438}
!438 = metadata !{metadata !439}
!439 = metadata !{metadata !"p.y.V", metadata !377, metadata !"int27", i32 0, i32 26}
!440 = metadata !{metadata !441, i27* @p_y_V_1}
!441 = metadata !{metadata !442}
!442 = metadata !{i32 0, i32 26, metadata !443}
!443 = metadata !{metadata !444}
!444 = metadata !{metadata !"p.y.V", metadata !384, metadata !"int27", i32 0, i32 26}
!445 = metadata !{metadata !446, i27* @p_y_V_2}
!446 = metadata !{metadata !447}
!447 = metadata !{i32 0, i32 26, metadata !448}
!448 = metadata !{metadata !449}
!449 = metadata !{metadata !"p.y.V", metadata !391, metadata !"int27", i32 0, i32 26}
!450 = metadata !{metadata !451, i27* @p_y_V_3}
!451 = metadata !{metadata !452}
!452 = metadata !{i32 0, i32 26, metadata !453}
!453 = metadata !{metadata !454}
!454 = metadata !{metadata !"p.y.V", metadata !398, metadata !"int27", i32 0, i32 26}
!455 = metadata !{metadata !456, i27* @p_y_V_4}
!456 = metadata !{metadata !457}
!457 = metadata !{i32 0, i32 26, metadata !458}
!458 = metadata !{metadata !459}
!459 = metadata !{metadata !"p.y.V", metadata !405, metadata !"int27", i32 0, i32 26}
!460 = metadata !{metadata !461, i27* @p_y_V_5}
!461 = metadata !{metadata !462}
!462 = metadata !{i32 0, i32 26, metadata !463}
!463 = metadata !{metadata !464}
!464 = metadata !{metadata !"p.y.V", metadata !412, metadata !"int27", i32 0, i32 26}
!465 = metadata !{metadata !466, i27* @p_y_V_6}
!466 = metadata !{metadata !467}
!467 = metadata !{i32 0, i32 26, metadata !468}
!468 = metadata !{metadata !469}
!469 = metadata !{metadata !"p.y.V", metadata !419, metadata !"int27", i32 0, i32 26}
!470 = metadata !{metadata !471, i27* @p_y_V_7}
!471 = metadata !{metadata !472}
!472 = metadata !{i32 0, i32 26, metadata !473}
!473 = metadata !{metadata !474}
!474 = metadata !{metadata !"p.y.V", metadata !426, metadata !"int27", i32 0, i32 26}
!475 = metadata !{metadata !476, i27* @p_y_V_8}
!476 = metadata !{metadata !477}
!477 = metadata !{i32 0, i32 26, metadata !478}
!478 = metadata !{metadata !479}
!479 = metadata !{metadata !"p.y.V", metadata !433, metadata !"int27", i32 0, i32 26}
!480 = metadata !{metadata !481, i27* @p_z_V_0}
!481 = metadata !{metadata !482}
!482 = metadata !{i32 0, i32 26, metadata !483}
!483 = metadata !{metadata !484}
!484 = metadata !{metadata !"p.z.V", metadata !377, metadata !"int27", i32 0, i32 26}
!485 = metadata !{metadata !486, i27* @p_z_V_1}
!486 = metadata !{metadata !487}
!487 = metadata !{i32 0, i32 26, metadata !488}
!488 = metadata !{metadata !489}
!489 = metadata !{metadata !"p.z.V", metadata !384, metadata !"int27", i32 0, i32 26}
!490 = metadata !{metadata !491, i27* @p_z_V_2}
!491 = metadata !{metadata !492}
!492 = metadata !{i32 0, i32 26, metadata !493}
!493 = metadata !{metadata !494}
!494 = metadata !{metadata !"p.z.V", metadata !391, metadata !"int27", i32 0, i32 26}
!495 = metadata !{metadata !496, i27* @p_z_V_3}
!496 = metadata !{metadata !497}
!497 = metadata !{i32 0, i32 26, metadata !498}
!498 = metadata !{metadata !499}
!499 = metadata !{metadata !"p.z.V", metadata !398, metadata !"int27", i32 0, i32 26}
!500 = metadata !{metadata !501, i27* @p_z_V_4}
!501 = metadata !{metadata !502}
!502 = metadata !{i32 0, i32 26, metadata !503}
!503 = metadata !{metadata !504}
!504 = metadata !{metadata !"p.z.V", metadata !405, metadata !"int27", i32 0, i32 26}
!505 = metadata !{metadata !506, i27* @p_z_V_5}
!506 = metadata !{metadata !507}
!507 = metadata !{i32 0, i32 26, metadata !508}
!508 = metadata !{metadata !509}
!509 = metadata !{metadata !"p.z.V", metadata !412, metadata !"int27", i32 0, i32 26}
!510 = metadata !{metadata !511, i27* @p_z_V_6}
!511 = metadata !{metadata !512}
!512 = metadata !{i32 0, i32 26, metadata !513}
!513 = metadata !{metadata !514}
!514 = metadata !{metadata !"p.z.V", metadata !419, metadata !"int27", i32 0, i32 26}
!515 = metadata !{metadata !516, i27* @p_z_V_7}
!516 = metadata !{metadata !517}
!517 = metadata !{i32 0, i32 26, metadata !518}
!518 = metadata !{metadata !519}
!519 = metadata !{metadata !"p.z.V", metadata !426, metadata !"int27", i32 0, i32 26}
!520 = metadata !{metadata !521, i27* @p_z_V_8}
!521 = metadata !{metadata !522}
!522 = metadata !{i32 0, i32 26, metadata !523}
!523 = metadata !{metadata !524}
!524 = metadata !{metadata !"p.z.V", metadata !433, metadata !"int27", i32 0, i32 26}
!525 = metadata !{metadata !526, i27* @p_vx_V_0}
!526 = metadata !{metadata !527}
!527 = metadata !{i32 0, i32 26, metadata !528}
!528 = metadata !{metadata !529}
!529 = metadata !{metadata !"p.vx.V", metadata !377, metadata !"int27", i32 0, i32 26}
!530 = metadata !{metadata !531, i27* @p_vx_V_1}
!531 = metadata !{metadata !532}
!532 = metadata !{i32 0, i32 26, metadata !533}
!533 = metadata !{metadata !534}
!534 = metadata !{metadata !"p.vx.V", metadata !384, metadata !"int27", i32 0, i32 26}
!535 = metadata !{metadata !536, i27* @p_vx_V_2}
!536 = metadata !{metadata !537}
!537 = metadata !{i32 0, i32 26, metadata !538}
!538 = metadata !{metadata !539}
!539 = metadata !{metadata !"p.vx.V", metadata !391, metadata !"int27", i32 0, i32 26}
!540 = metadata !{metadata !541, i27* @p_vx_V_3}
!541 = metadata !{metadata !542}
!542 = metadata !{i32 0, i32 26, metadata !543}
!543 = metadata !{metadata !544}
!544 = metadata !{metadata !"p.vx.V", metadata !398, metadata !"int27", i32 0, i32 26}
!545 = metadata !{metadata !546, i27* @p_vx_V_4}
!546 = metadata !{metadata !547}
!547 = metadata !{i32 0, i32 26, metadata !548}
!548 = metadata !{metadata !549}
!549 = metadata !{metadata !"p.vx.V", metadata !405, metadata !"int27", i32 0, i32 26}
!550 = metadata !{metadata !551, i27* @p_vx_V_5}
!551 = metadata !{metadata !552}
!552 = metadata !{i32 0, i32 26, metadata !553}
!553 = metadata !{metadata !554}
!554 = metadata !{metadata !"p.vx.V", metadata !412, metadata !"int27", i32 0, i32 26}
!555 = metadata !{metadata !556, i27* @p_vx_V_6}
!556 = metadata !{metadata !557}
!557 = metadata !{i32 0, i32 26, metadata !558}
!558 = metadata !{metadata !559}
!559 = metadata !{metadata !"p.vx.V", metadata !419, metadata !"int27", i32 0, i32 26}
!560 = metadata !{metadata !561, i27* @p_vx_V_7}
!561 = metadata !{metadata !562}
!562 = metadata !{i32 0, i32 26, metadata !563}
!563 = metadata !{metadata !564}
!564 = metadata !{metadata !"p.vx.V", metadata !426, metadata !"int27", i32 0, i32 26}
!565 = metadata !{metadata !566, i27* @p_vx_V_8}
!566 = metadata !{metadata !567}
!567 = metadata !{i32 0, i32 26, metadata !568}
!568 = metadata !{metadata !569}
!569 = metadata !{metadata !"p.vx.V", metadata !433, metadata !"int27", i32 0, i32 26}
!570 = metadata !{metadata !571, i27* @p_vy_V_0}
!571 = metadata !{metadata !572}
!572 = metadata !{i32 0, i32 26, metadata !573}
!573 = metadata !{metadata !574}
!574 = metadata !{metadata !"p.vy.V", metadata !377, metadata !"int27", i32 0, i32 26}
!575 = metadata !{metadata !576, i27* @p_vy_V_1}
!576 = metadata !{metadata !577}
!577 = metadata !{i32 0, i32 26, metadata !578}
!578 = metadata !{metadata !579}
!579 = metadata !{metadata !"p.vy.V", metadata !384, metadata !"int27", i32 0, i32 26}
!580 = metadata !{metadata !581, i27* @p_vy_V_2}
!581 = metadata !{metadata !582}
!582 = metadata !{i32 0, i32 26, metadata !583}
!583 = metadata !{metadata !584}
!584 = metadata !{metadata !"p.vy.V", metadata !391, metadata !"int27", i32 0, i32 26}
!585 = metadata !{metadata !586, i27* @p_vy_V_3}
!586 = metadata !{metadata !587}
!587 = metadata !{i32 0, i32 26, metadata !588}
!588 = metadata !{metadata !589}
!589 = metadata !{metadata !"p.vy.V", metadata !398, metadata !"int27", i32 0, i32 26}
!590 = metadata !{metadata !591, i27* @p_vy_V_4}
!591 = metadata !{metadata !592}
!592 = metadata !{i32 0, i32 26, metadata !593}
!593 = metadata !{metadata !594}
!594 = metadata !{metadata !"p.vy.V", metadata !405, metadata !"int27", i32 0, i32 26}
!595 = metadata !{metadata !596, i27* @p_vy_V_5}
!596 = metadata !{metadata !597}
!597 = metadata !{i32 0, i32 26, metadata !598}
!598 = metadata !{metadata !599}
!599 = metadata !{metadata !"p.vy.V", metadata !412, metadata !"int27", i32 0, i32 26}
!600 = metadata !{metadata !601, i27* @p_vy_V_6}
!601 = metadata !{metadata !602}
!602 = metadata !{i32 0, i32 26, metadata !603}
!603 = metadata !{metadata !604}
!604 = metadata !{metadata !"p.vy.V", metadata !419, metadata !"int27", i32 0, i32 26}
!605 = metadata !{metadata !606, i27* @p_vy_V_7}
!606 = metadata !{metadata !607}
!607 = metadata !{i32 0, i32 26, metadata !608}
!608 = metadata !{metadata !609}
!609 = metadata !{metadata !"p.vy.V", metadata !426, metadata !"int27", i32 0, i32 26}
!610 = metadata !{metadata !611, i27* @p_vy_V_8}
!611 = metadata !{metadata !612}
!612 = metadata !{i32 0, i32 26, metadata !613}
!613 = metadata !{metadata !614}
!614 = metadata !{metadata !"p.vy.V", metadata !433, metadata !"int27", i32 0, i32 26}
!615 = metadata !{metadata !616, i27* @p_vz_V_0}
!616 = metadata !{metadata !617}
!617 = metadata !{i32 0, i32 26, metadata !618}
!618 = metadata !{metadata !619}
!619 = metadata !{metadata !"p.vz.V", metadata !377, metadata !"int27", i32 0, i32 26}
!620 = metadata !{metadata !621, i27* @p_vz_V_1}
!621 = metadata !{metadata !622}
!622 = metadata !{i32 0, i32 26, metadata !623}
!623 = metadata !{metadata !624}
!624 = metadata !{metadata !"p.vz.V", metadata !384, metadata !"int27", i32 0, i32 26}
!625 = metadata !{metadata !626, i27* @p_vz_V_2}
!626 = metadata !{metadata !627}
!627 = metadata !{i32 0, i32 26, metadata !628}
!628 = metadata !{metadata !629}
!629 = metadata !{metadata !"p.vz.V", metadata !391, metadata !"int27", i32 0, i32 26}
!630 = metadata !{metadata !631, i27* @p_vz_V_3}
!631 = metadata !{metadata !632}
!632 = metadata !{i32 0, i32 26, metadata !633}
!633 = metadata !{metadata !634}
!634 = metadata !{metadata !"p.vz.V", metadata !398, metadata !"int27", i32 0, i32 26}
!635 = metadata !{metadata !636, i27* @p_vz_V_4}
!636 = metadata !{metadata !637}
!637 = metadata !{i32 0, i32 26, metadata !638}
!638 = metadata !{metadata !639}
!639 = metadata !{metadata !"p.vz.V", metadata !405, metadata !"int27", i32 0, i32 26}
!640 = metadata !{metadata !641, i27* @p_vz_V_5}
!641 = metadata !{metadata !642}
!642 = metadata !{i32 0, i32 26, metadata !643}
!643 = metadata !{metadata !644}
!644 = metadata !{metadata !"p.vz.V", metadata !412, metadata !"int27", i32 0, i32 26}
!645 = metadata !{metadata !646, i27* @p_vz_V_6}
!646 = metadata !{metadata !647}
!647 = metadata !{i32 0, i32 26, metadata !648}
!648 = metadata !{metadata !649}
!649 = metadata !{metadata !"p.vz.V", metadata !419, metadata !"int27", i32 0, i32 26}
!650 = metadata !{metadata !651, i27* @p_vz_V_7}
!651 = metadata !{metadata !652}
!652 = metadata !{i32 0, i32 26, metadata !653}
!653 = metadata !{metadata !654}
!654 = metadata !{metadata !"p.vz.V", metadata !426, metadata !"int27", i32 0, i32 26}
!655 = metadata !{metadata !656, i27* @p_vz_V_8}
!656 = metadata !{metadata !657}
!657 = metadata !{i32 0, i32 26, metadata !658}
!658 = metadata !{metadata !659}
!659 = metadata !{metadata !"p.vz.V", metadata !433, metadata !"int27", i32 0, i32 26}
!660 = metadata !{metadata !661, i27* @p_ax_V_0}
!661 = metadata !{metadata !662}
!662 = metadata !{i32 0, i32 26, metadata !663}
!663 = metadata !{metadata !664}
!664 = metadata !{metadata !"p.ax.V", metadata !377, metadata !"int27", i32 0, i32 26}
!665 = metadata !{metadata !666, i27* @p_ax_V_1}
!666 = metadata !{metadata !667}
!667 = metadata !{i32 0, i32 26, metadata !668}
!668 = metadata !{metadata !669}
!669 = metadata !{metadata !"p.ax.V", metadata !384, metadata !"int27", i32 0, i32 26}
!670 = metadata !{metadata !671, i27* @p_ax_V_2}
!671 = metadata !{metadata !672}
!672 = metadata !{i32 0, i32 26, metadata !673}
!673 = metadata !{metadata !674}
!674 = metadata !{metadata !"p.ax.V", metadata !391, metadata !"int27", i32 0, i32 26}
!675 = metadata !{metadata !676, i27* @p_ax_V_3}
!676 = metadata !{metadata !677}
!677 = metadata !{i32 0, i32 26, metadata !678}
!678 = metadata !{metadata !679}
!679 = metadata !{metadata !"p.ax.V", metadata !398, metadata !"int27", i32 0, i32 26}
!680 = metadata !{metadata !681, i27* @p_ax_V_4}
!681 = metadata !{metadata !682}
!682 = metadata !{i32 0, i32 26, metadata !683}
!683 = metadata !{metadata !684}
!684 = metadata !{metadata !"p.ax.V", metadata !405, metadata !"int27", i32 0, i32 26}
!685 = metadata !{metadata !686, i27* @p_ax_V_5}
!686 = metadata !{metadata !687}
!687 = metadata !{i32 0, i32 26, metadata !688}
!688 = metadata !{metadata !689}
!689 = metadata !{metadata !"p.ax.V", metadata !412, metadata !"int27", i32 0, i32 26}
!690 = metadata !{metadata !691, i27* @p_ax_V_6}
!691 = metadata !{metadata !692}
!692 = metadata !{i32 0, i32 26, metadata !693}
!693 = metadata !{metadata !694}
!694 = metadata !{metadata !"p.ax.V", metadata !419, metadata !"int27", i32 0, i32 26}
!695 = metadata !{metadata !696, i27* @p_ax_V_7}
!696 = metadata !{metadata !697}
!697 = metadata !{i32 0, i32 26, metadata !698}
!698 = metadata !{metadata !699}
!699 = metadata !{metadata !"p.ax.V", metadata !426, metadata !"int27", i32 0, i32 26}
!700 = metadata !{metadata !701, i27* @p_ax_V_8}
!701 = metadata !{metadata !702}
!702 = metadata !{i32 0, i32 26, metadata !703}
!703 = metadata !{metadata !704}
!704 = metadata !{metadata !"p.ax.V", metadata !433, metadata !"int27", i32 0, i32 26}
!705 = metadata !{metadata !706, i27* @p_ay_V_0}
!706 = metadata !{metadata !707}
!707 = metadata !{i32 0, i32 26, metadata !708}
!708 = metadata !{metadata !709}
!709 = metadata !{metadata !"p.ay.V", metadata !377, metadata !"int27", i32 0, i32 26}
!710 = metadata !{metadata !711, i27* @p_ay_V_1}
!711 = metadata !{metadata !712}
!712 = metadata !{i32 0, i32 26, metadata !713}
!713 = metadata !{metadata !714}
!714 = metadata !{metadata !"p.ay.V", metadata !384, metadata !"int27", i32 0, i32 26}
!715 = metadata !{metadata !716, i27* @p_ay_V_2}
!716 = metadata !{metadata !717}
!717 = metadata !{i32 0, i32 26, metadata !718}
!718 = metadata !{metadata !719}
!719 = metadata !{metadata !"p.ay.V", metadata !391, metadata !"int27", i32 0, i32 26}
!720 = metadata !{metadata !721, i27* @p_ay_V_3}
!721 = metadata !{metadata !722}
!722 = metadata !{i32 0, i32 26, metadata !723}
!723 = metadata !{metadata !724}
!724 = metadata !{metadata !"p.ay.V", metadata !398, metadata !"int27", i32 0, i32 26}
!725 = metadata !{metadata !726, i27* @p_ay_V_4}
!726 = metadata !{metadata !727}
!727 = metadata !{i32 0, i32 26, metadata !728}
!728 = metadata !{metadata !729}
!729 = metadata !{metadata !"p.ay.V", metadata !405, metadata !"int27", i32 0, i32 26}
!730 = metadata !{metadata !731, i27* @p_ay_V_5}
!731 = metadata !{metadata !732}
!732 = metadata !{i32 0, i32 26, metadata !733}
!733 = metadata !{metadata !734}
!734 = metadata !{metadata !"p.ay.V", metadata !412, metadata !"int27", i32 0, i32 26}
!735 = metadata !{metadata !736, i27* @p_ay_V_6}
!736 = metadata !{metadata !737}
!737 = metadata !{i32 0, i32 26, metadata !738}
!738 = metadata !{metadata !739}
!739 = metadata !{metadata !"p.ay.V", metadata !419, metadata !"int27", i32 0, i32 26}
!740 = metadata !{metadata !741, i27* @p_ay_V_7}
!741 = metadata !{metadata !742}
!742 = metadata !{i32 0, i32 26, metadata !743}
!743 = metadata !{metadata !744}
!744 = metadata !{metadata !"p.ay.V", metadata !426, metadata !"int27", i32 0, i32 26}
!745 = metadata !{metadata !746, i27* @p_ay_V_8}
!746 = metadata !{metadata !747}
!747 = metadata !{i32 0, i32 26, metadata !748}
!748 = metadata !{metadata !749}
!749 = metadata !{metadata !"p.ay.V", metadata !433, metadata !"int27", i32 0, i32 26}
!750 = metadata !{metadata !751, i27* @p_az_V_0}
!751 = metadata !{metadata !752}
!752 = metadata !{i32 0, i32 26, metadata !753}
!753 = metadata !{metadata !754}
!754 = metadata !{metadata !"p.az.V", metadata !377, metadata !"int27", i32 0, i32 26}
!755 = metadata !{metadata !756, i27* @p_az_V_1}
!756 = metadata !{metadata !757}
!757 = metadata !{i32 0, i32 26, metadata !758}
!758 = metadata !{metadata !759}
!759 = metadata !{metadata !"p.az.V", metadata !384, metadata !"int27", i32 0, i32 26}
!760 = metadata !{metadata !761, i27* @p_az_V_2}
!761 = metadata !{metadata !762}
!762 = metadata !{i32 0, i32 26, metadata !763}
!763 = metadata !{metadata !764}
!764 = metadata !{metadata !"p.az.V", metadata !391, metadata !"int27", i32 0, i32 26}
!765 = metadata !{metadata !766, i27* @p_az_V_3}
!766 = metadata !{metadata !767}
!767 = metadata !{i32 0, i32 26, metadata !768}
!768 = metadata !{metadata !769}
!769 = metadata !{metadata !"p.az.V", metadata !398, metadata !"int27", i32 0, i32 26}
!770 = metadata !{metadata !771, i27* @p_az_V_4}
!771 = metadata !{metadata !772}
!772 = metadata !{i32 0, i32 26, metadata !773}
!773 = metadata !{metadata !774}
!774 = metadata !{metadata !"p.az.V", metadata !405, metadata !"int27", i32 0, i32 26}
!775 = metadata !{metadata !776, i27* @p_az_V_5}
!776 = metadata !{metadata !777}
!777 = metadata !{i32 0, i32 26, metadata !778}
!778 = metadata !{metadata !779}
!779 = metadata !{metadata !"p.az.V", metadata !412, metadata !"int27", i32 0, i32 26}
!780 = metadata !{metadata !781, i27* @p_az_V_6}
!781 = metadata !{metadata !782}
!782 = metadata !{i32 0, i32 26, metadata !783}
!783 = metadata !{metadata !784}
!784 = metadata !{metadata !"p.az.V", metadata !419, metadata !"int27", i32 0, i32 26}
!785 = metadata !{metadata !786, i27* @p_az_V_7}
!786 = metadata !{metadata !787}
!787 = metadata !{i32 0, i32 26, metadata !788}
!788 = metadata !{metadata !789}
!789 = metadata !{metadata !"p.az.V", metadata !426, metadata !"int27", i32 0, i32 26}
!790 = metadata !{metadata !791, i27* @p_az_V_8}
!791 = metadata !{metadata !792}
!792 = metadata !{i32 0, i32 26, metadata !793}
!793 = metadata !{metadata !794}
!794 = metadata !{metadata !"p.az.V", metadata !433, metadata !"int27", i32 0, i32 26}
!795 = metadata !{metadata !796, metadata !799, metadata !802, metadata !805, metadata !808, metadata !811, metadata !814, metadata !817, metadata !820, metadata !823}
!796 = metadata !{i32 0, i32 26, metadata !797}
!797 = metadata !{metadata !798}
!798 = metadata !{metadata !"result.x.V", metadata !323, metadata !"int27", i32 0, i32 26}
!799 = metadata !{i32 27, i32 53, metadata !800}
!800 = metadata !{metadata !801}
!801 = metadata !{metadata !"result.y.V", metadata !323, metadata !"int27", i32 0, i32 26}
!802 = metadata !{i32 54, i32 80, metadata !803}
!803 = metadata !{metadata !804}
!804 = metadata !{metadata !"result.z.V", metadata !323, metadata !"int27", i32 0, i32 26}
!805 = metadata !{i32 81, i32 107, metadata !806}
!806 = metadata !{metadata !807}
!807 = metadata !{metadata !"result.vx.V", metadata !323, metadata !"int27", i32 0, i32 26}
!808 = metadata !{i32 108, i32 134, metadata !809}
!809 = metadata !{metadata !810}
!810 = metadata !{metadata !"result.vy.V", metadata !323, metadata !"int27", i32 0, i32 26}
!811 = metadata !{i32 135, i32 161, metadata !812}
!812 = metadata !{metadata !813}
!813 = metadata !{metadata !"result.vz.V", metadata !323, metadata !"int27", i32 0, i32 26}
!814 = metadata !{i32 162, i32 188, metadata !815}
!815 = metadata !{metadata !816}
!816 = metadata !{metadata !"result.ax.V", metadata !323, metadata !"int27", i32 0, i32 26}
!817 = metadata !{i32 189, i32 215, metadata !818}
!818 = metadata !{metadata !819}
!819 = metadata !{metadata !"result.ay.V", metadata !323, metadata !"int27", i32 0, i32 26}
!820 = metadata !{i32 216, i32 242, metadata !821}
!821 = metadata !{metadata !822}
!822 = metadata !{metadata !"result.az.V", metadata !323, metadata !"int27", i32 0, i32 26}
!823 = metadata !{i32 243, i32 269, metadata !824}
!824 = metadata !{metadata !825}
!825 = metadata !{metadata !"result.m.V", metadata !323, metadata !"int27", i32 0, i32 26}
